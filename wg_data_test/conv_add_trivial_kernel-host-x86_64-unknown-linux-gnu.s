	.text
	.file	"conv_add_trivial_kernel.cpp"
	.globl	_Z12parse_inputsiPPc            # -- Begin function _Z12parse_inputsiPPc
	.p2align	4, 0x90
	.type	_Z12parse_inputsiPPc,@function
_Z12parse_inputsiPPc:                   # @_Z12parse_inputsiPPc
.Lfunc_begin0:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception0
# %bb.0:                                # %.noexc8.i
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$920, %rsp                      # imm = 0x398
	.cfi_def_cfa_offset 976
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 880(%rsp)                 # 8-byte Spill
	movl	%esi, 196(%rsp)                 # 4-byte Spill
	movq	%rdi, 120(%rsp)                 # 8-byte Spill
	leaq	376(%rsp), %r14
	movq	%r14, 360(%rsp)
	movq	$23, (%rsp)
.Ltmp0:
	leaq	360(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1:
# %bb.1:                                # %.noexc
	movq	%rax, 360(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 376(%rsp)
	movups	.L.str(%rip), %xmm0
	movups	%xmm0, (%rax)
	movabsq	$7810770566350856044, %rdx      # imm = 0x6C656E72656B5F6C
	movq	%rdx, 15(%rax)
	movq	%rcx, 368(%rsp)
	movq	360(%rsp), %rax
	movb	$0, (%rax,%rcx)
	leaq	904(%rsp), %r15
	movq	%r15, 888(%rsp)
	movl	$3157553, 904(%rsp)             # imm = 0x302E31
	movq	$3, 896(%rsp)
.Ltmp3:
	leaq	392(%rsp), %rdi
	leaq	360(%rsp), %rsi
	leaq	888(%rsp), %rdx
	movl	$_ZSt4cout, %r9d
	movl	$3, %ecx
	movl	$1, %r8d
	callq	_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo
.Ltmp4:
# %bb.2:
	movq	888(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB0_4
# %bb.3:
	callq	_ZdlPv
.LBB0_4:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	360(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_6
# %bb.5:
	callq	_ZdlPv
.LBB0_6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	$11, (%rsp)
	movq	$.L.str.2, 8(%rsp)
.Ltmp6:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp7:
# %bb.7:                                # %.noexc39
	movq	%rax, %rbx
	movq	%rax, %r12
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp8:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp9:
# %bb.8:                                # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	leaq	624(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r12)
	jne	.LBB0_11
# %bb.9:
	leaq	600(%rsp), %rdi
	movq	(%r12), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_11
# %bb.10:
	movq	%r12, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_11:                               # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i
	movq	16(%r12), %rax
	movq	24(%r12), %rcx
	movq	%rcx, 56(%rsp)                  # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB0_37
# %bb.12:                               # %.lr.ph.i.i
	movq	%r12, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_15
	.p2align	4, 0x90
.LBB0_13:                               #   in Loop: Header=BB0_15 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_14:                               # %.noexc40
                                        #   in Loop: Header=BB0_15 Depth=1
	movq	48(%rsp), %rax                  # 8-byte Reload
	addq	$32, %rax
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB0_37
.LBB0_15:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_19 Depth 2
	movq	(%rax), %rbx
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	movq	8(%rax), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_27
# %bb.16:                               # %.lr.ph.i.i.i.i.preheader
                                        #   in Loop: Header=BB0_15 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_19
	.p2align	4, 0x90
.LBB0_17:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB0_19 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_18:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i
                                        #   in Loop: Header=BB0_19 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_21
.LBB0_19:                               # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB0_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_17
# %bb.20:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB0_19 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_18
	jmp	.LBB0_17
	.p2align	4, 0x90
.LBB0_21:                               # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i
                                        #   in Loop: Header=BB0_15 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_27
# %bb.22:                               #   in Loop: Header=BB0_15 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_26
# %bb.23:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB0_15 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_26
# %bb.24:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i
                                        #   in Loop: Header=BB0_15 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_27
.LBB0_25:                               #   in Loop: Header=BB0_15 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	%r12, 48(%r15)
	jmp	.LBB0_14
	.p2align	4, 0x90
.LBB0_26:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
                                        #   in Loop: Header=BB0_15 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_25
	.p2align	4, 0x90
.LBB0_27:                               # %.critedge.i
                                        #   in Loop: Header=BB0_15 Depth=1
.Ltmp11:
	movq	%rcx, %r15
	movl	$56, %edi
	callq	_Znwm
.Ltmp12:
# %bb.28:                               # %.noexc562
                                        #   in Loop: Header=BB0_15 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	%r12, 48(%rax)
.Ltmp14:
	leaq	648(%rsp), %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp15:
# %bb.29:                               #   in Loop: Header=BB0_15 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	je	.LBB0_13
# %bb.30:                               #   in Loop: Header=BB0_15 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_36
# %bb.31:                               #   in Loop: Header=BB0_15 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_36
# %bb.32:                               #   in Loop: Header=BB0_15 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_34
# %bb.33:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB0_15 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_35
.LBB0_34:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB0_15 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_35:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i
                                        #   in Loop: Header=BB0_15 Depth=1
	shrl	$31, %eax
.LBB0_36:                               #   in Loop: Header=BB0_15 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_14
.LBB0_37:                               # %_ZN8argparse14ArgumentParser12add_argumentIJPKcEEERNS_8ArgumentEDpT_.exit
	leaq	144(%rsp), %r15
	movq	%r15, 128(%rsp)
	movq	$18, (%rsp)
.Ltmp23:
	leaq	128(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp24:
# %bb.38:                               # %.noexc43
	movq	%rax, 128(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 144(%rsp)
	movups	.L.str.3(%rip), %xmm0
	movups	%xmm0, (%rax)
	movw	$29548, 16(%rax)                # imm = 0x736C
	movq	%rcx, 136(%rsp)
	movq	128(%rsp), %rax
	movb	$0, (%rax,%rcx)
	movq	128(%rsp), %rcx
	cmpq	%r15, %rcx
	movq	64(%rsp), %rbx                  # 8-byte Reload
	je	.LBB0_42
# %bb.39:
	leaq	72(%rbx), %rdx
	movq	56(%r12), %rax
	cmpq	%rdx, %rax
	je	.LBB0_45
# %bb.40:
	movq	72(%r12), %rdx
	movq	%rcx, 56(%r12)
	movups	136(%rsp), %xmm0
	movups	%xmm0, 64(%r12)
	testq	%rax, %rax
	je	.LBB0_46
# %bb.41:
	movq	%rax, 128(%rsp)
	movq	%rdx, 144(%rsp)
	jmp	.LBB0_49
.LBB0_42:
	movq	136(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB0_48
# %bb.43:
	movq	56(%r12), %rdi
	cmpq	$1, %rdx
	jne	.LBB0_47
# %bb.44:
	movzbl	144(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB0_48
.LBB0_45:                               # %.thread.i.i
	movq	%rcx, 56(%r12)
	movups	136(%rsp), %xmm0
	movups	%xmm0, 64(%r12)
.LBB0_46:
	movq	%r15, 128(%rsp)
	movq	%r15, %rax
	jmp	.LBB0_49
.LBB0_47:
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB0_48:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i
	movq	136(%rsp), %rax
	movq	%rax, 64(%r12)
	movq	56(%r12), %rcx
	movb	$0, (%rcx,%rax)
	movq	128(%rsp), %rax
.LBB0_49:                               # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit
	movq	$0, 136(%rsp)
	movb	$0, (%rax)
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r12), %eax
	testq	%rax, %rax
	je	.LBB0_52
# %bb.50:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp26:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp27:
# %bb.51:                               # %.noexc567
	movb	$0, 288(%r12)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r12), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r12)
	jmp	.LBB0_54
.LBB0_52:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r12), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r12)
	movq	280(%r12), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r12)
	testq	%rax, %rax
	je	.LBB0_54
# %bb.53:
.Ltmp29:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp30:
.LBB0_54:                               # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp32:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp33:
# %bb.55:                               # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i
	cmpb	$0, 288(%r12)
	jne	.LBB0_357
# %bb.56:                               # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit
	movq	128(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB0_58
# %bb.57:
	callq	_ZdlPv
.LBB0_58:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	$9, (%rsp)
	movq	$.L.str.4, 8(%rsp)
.Ltmp38:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp39:
# %bb.59:                               # %.noexc56
	movq	%rax, %rbx
	movq	%rax, %r15
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp40:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp41:
# %bb.60:                               # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i50
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r15, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r15)
	jne	.LBB0_63
# %bb.61:
	leaq	600(%rsp), %rdi
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_63
# %bb.62:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_63:                               # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i52
	movq	16(%r15), %r12
	movq	24(%r15), %rax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	cmpq	%rax, %r12
	je	.LBB0_89
# %bb.64:                               # %.lr.ph.i.i53
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_67
	.p2align	4, 0x90
.LBB0_65:                               #   in Loop: Header=BB0_67 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_66:                               # %.noexc59
                                        #   in Loop: Header=BB0_67 Depth=1
	addq	$32, %r12
	cmpq	56(%rsp), %r12                  # 8-byte Folded Reload
	je	.LBB0_89
.LBB0_67:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_71 Depth 2
	movq	(%r12), %rbx
	movq	%r12, 48(%rsp)                  # 8-byte Spill
	movq	8(%r12), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_79
# %bb.68:                               # %.lr.ph.i.i.i.i277.preheader
                                        #   in Loop: Header=BB0_67 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_71
	.p2align	4, 0x90
.LBB0_69:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i288
                                        #   in Loop: Header=BB0_71 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_70:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i294
                                        #   in Loop: Header=BB0_71 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_73
.LBB0_71:                               # %.lr.ph.i.i.i.i277
                                        #   Parent Loop BB0_67 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_69
# %bb.72:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i284
                                        #   in Loop: Header=BB0_71 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_70
	jmp	.LBB0_69
	.p2align	4, 0x90
.LBB0_73:                               # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i295
                                        #   in Loop: Header=BB0_67 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_79
# %bb.74:                               #   in Loop: Header=BB0_67 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_78
# %bb.75:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i300
                                        #   in Loop: Header=BB0_67 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_78
# %bb.76:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i306
                                        #   in Loop: Header=BB0_67 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_79
.LBB0_77:                               #   in Loop: Header=BB0_67 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%r15)
	movq	%rax, %r15
	movq	48(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB0_66
	.p2align	4, 0x90
.LBB0_78:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i304
                                        #   in Loop: Header=BB0_67 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_77
	.p2align	4, 0x90
.LBB0_79:                               # %.critedge.i308
                                        #   in Loop: Header=BB0_67 Depth=1
.Ltmp43:
	movq	%rcx, %r12
	movl	$56, %edi
	callq	_Znwm
.Ltmp44:
# %bb.80:                               # %.noexc587
                                        #   in Loop: Header=BB0_67 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	%r15, 48(%rax)
.Ltmp46:
	leaq	648(%rsp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp47:
# %bb.81:                               #   in Loop: Header=BB0_67 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	movq	48(%rsp), %r12                  # 8-byte Reload
	je	.LBB0_65
# %bb.82:                               #   in Loop: Header=BB0_67 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_88
# %bb.83:                               #   in Loop: Header=BB0_67 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_88
# %bb.84:                               #   in Loop: Header=BB0_67 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_86
# %bb.85:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i579
                                        #   in Loop: Header=BB0_67 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_87
.LBB0_86:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i583
                                        #   in Loop: Header=BB0_67 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_87:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i585
                                        #   in Loop: Header=BB0_67 Depth=1
	shrl	$31, %eax
.LBB0_88:                               #   in Loop: Header=BB0_67 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_66
.LBB0_89:                               # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit71
	leaq	344(%rsp), %r14
	movq	%r14, 328(%rsp)
	movabsq	$7307126079967227497, %rax      # imm = 0x6568207475706E69
	movq	%rax, 344(%rsp)
	movl	$1952999273, 352(%rsp)          # imm = 0x74686769
	movq	$12, 336(%rsp)
	movb	$0, 356(%rsp)
	movq	56(%r15), %rcx
	movq	%rax, (%rcx)
	movl	$1952999273, 8(%rcx)            # imm = 0x74686769
	movq	336(%rsp), %rax
	movq	%rax, 64(%r15)
	movq	56(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	328(%rsp), %rax
	movq	$0, 336(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rbx                  # 8-byte Reload
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r15), %eax
	testq	%rax, %rax
	je	.LBB0_92
# %bb.90:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp55:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp56:
# %bb.91:                               # %.noexc596
	movb	$0, 288(%r15)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r15), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r15)
	jmp	.LBB0_94
.LBB0_92:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r15), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r15)
	movq	280(%r15), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r15)
	testq	%rax, %rax
	je	.LBB0_94
# %bb.93:
.Ltmp58:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp59:
.LBB0_94:                               # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i316
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp61:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp62:
# %bb.95:                               # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i318
	cmpb	$0, 288(%r15)
	jne	.LBB0_359
# %bb.96:                               # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit73
	movq	328(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_98
# %bb.97:
	callq	_ZdlPv
.LBB0_98:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74
	movq	$8, (%rsp)
	movq	$.L.str.6, 8(%rsp)
.Ltmp67:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp68:
# %bb.99:                               # %.noexc83
	movq	%rax, %rbx
	movq	%rax, %r15
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp69:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp70:
# %bb.100:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i77
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r15, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r15)
	jne	.LBB0_103
# %bb.101:
	leaq	600(%rsp), %rdi
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_103
# %bb.102:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_103:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i79
	movq	16(%r15), %rax
	movq	24(%r15), %rcx
	movq	%rcx, 56(%rsp)                  # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB0_129
# %bb.104:                              # %.lr.ph.i.i80
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_107
	.p2align	4, 0x90
.LBB0_105:                              #   in Loop: Header=BB0_107 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_106:                              # %.noexc86
                                        #   in Loop: Header=BB0_107 Depth=1
	movq	48(%rsp), %rax                  # 8-byte Reload
	addq	$32, %rax
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB0_129
.LBB0_107:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_111 Depth 2
	movq	(%rax), %rbx
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	movq	8(%rax), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_119
# %bb.108:                              # %.lr.ph.i.i.i.i325.preheader
                                        #   in Loop: Header=BB0_107 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_111
	.p2align	4, 0x90
.LBB0_109:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i336
                                        #   in Loop: Header=BB0_111 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_110:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i342
                                        #   in Loop: Header=BB0_111 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_113
.LBB0_111:                              # %.lr.ph.i.i.i.i325
                                        #   Parent Loop BB0_107 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_109
# %bb.112:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i332
                                        #   in Loop: Header=BB0_111 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_110
	jmp	.LBB0_109
	.p2align	4, 0x90
.LBB0_113:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i343
                                        #   in Loop: Header=BB0_107 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_119
# %bb.114:                              #   in Loop: Header=BB0_107 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_118
# %bb.115:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i348
                                        #   in Loop: Header=BB0_107 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_118
# %bb.116:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i354
                                        #   in Loop: Header=BB0_107 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_119
.LBB0_117:                              #   in Loop: Header=BB0_107 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%r15)
	movq	%rax, %r15
	jmp	.LBB0_106
	.p2align	4, 0x90
.LBB0_118:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i352
                                        #   in Loop: Header=BB0_107 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_117
	.p2align	4, 0x90
.LBB0_119:                              # %.critedge.i356
                                        #   in Loop: Header=BB0_107 Depth=1
.Ltmp72:
	movq	%rcx, %r12
	movl	$56, %edi
	callq	_Znwm
.Ltmp73:
# %bb.120:                              # %.noexc617
                                        #   in Loop: Header=BB0_107 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	%r15, 48(%rax)
.Ltmp75:
	leaq	648(%rsp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp76:
# %bb.121:                              #   in Loop: Header=BB0_107 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	je	.LBB0_105
# %bb.122:                              #   in Loop: Header=BB0_107 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_128
# %bb.123:                              #   in Loop: Header=BB0_107 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_128
# %bb.124:                              #   in Loop: Header=BB0_107 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_126
# %bb.125:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i609
                                        #   in Loop: Header=BB0_107 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_127
.LBB0_126:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i613
                                        #   in Loop: Header=BB0_107 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_127:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i615
                                        #   in Loop: Header=BB0_107 Depth=1
	shrl	$31, %eax
.LBB0_128:                              #   in Loop: Header=BB0_107 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_106
.LBB0_129:                              # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit98
	leaq	312(%rsp), %r14
	movq	%r14, 296(%rsp)
	movabsq	$7599578580769599081, %rax      # imm = 0x6977207475706E69
	movq	%rax, 312(%rsp)
	movl	$1752458345, 319(%rsp)          # imm = 0x68746469
	movq	$11, 304(%rsp)
	movb	$0, 323(%rsp)
	movq	56(%r15), %rcx
	movq	%rax, (%rcx)
	movl	$1752458345, 7(%rcx)            # imm = 0x68746469
	movq	304(%rsp), %rax
	movq	%rax, 64(%r15)
	movq	56(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	296(%rsp), %rax
	movq	$0, 304(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rbx                  # 8-byte Reload
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r15), %eax
	testq	%rax, %rax
	je	.LBB0_132
# %bb.130:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp84:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp85:
# %bb.131:                              # %.noexc626
	movb	$0, 288(%r15)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r15), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r15)
	jmp	.LBB0_134
.LBB0_132:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r15), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r15)
	movq	280(%r15), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r15)
	testq	%rax, %rax
	je	.LBB0_134
# %bb.133:
.Ltmp87:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp88:
.LBB0_134:                              # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i364
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp90:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp91:
# %bb.135:                              # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i366
	cmpb	$0, 288(%r15)
	jne	.LBB0_361
# %bb.136:                              # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit100
	movq	296(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_138
# %bb.137:
	callq	_ZdlPv
.LBB0_138:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit101
	movq	$13, (%rsp)
	movq	$.L.str.8, 8(%rsp)
.Ltmp96:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp97:
# %bb.139:                              # %.noexc110
	movq	%rax, %rbx
	movq	%rax, %r15
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp98:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp99:
# %bb.140:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i104
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r15, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r15)
	jne	.LBB0_143
# %bb.141:
	leaq	600(%rsp), %rdi
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_143
# %bb.142:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_143:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i106
	movq	16(%r15), %r12
	movq	24(%r15), %rax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	cmpq	%rax, %r12
	je	.LBB0_169
# %bb.144:                              # %.lr.ph.i.i107
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_147
	.p2align	4, 0x90
.LBB0_145:                              #   in Loop: Header=BB0_147 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_146:                              # %.noexc113
                                        #   in Loop: Header=BB0_147 Depth=1
	addq	$32, %r12
	cmpq	56(%rsp), %r12                  # 8-byte Folded Reload
	je	.LBB0_169
.LBB0_147:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_151 Depth 2
	movq	(%r12), %rbx
	movq	%r12, 48(%rsp)                  # 8-byte Spill
	movq	8(%r12), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_159
# %bb.148:                              # %.lr.ph.i.i.i.i373.preheader
                                        #   in Loop: Header=BB0_147 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_151
	.p2align	4, 0x90
.LBB0_149:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i384
                                        #   in Loop: Header=BB0_151 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_150:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i390
                                        #   in Loop: Header=BB0_151 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_153
.LBB0_151:                              # %.lr.ph.i.i.i.i373
                                        #   Parent Loop BB0_147 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_149
# %bb.152:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i380
                                        #   in Loop: Header=BB0_151 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_150
	jmp	.LBB0_149
	.p2align	4, 0x90
.LBB0_153:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i391
                                        #   in Loop: Header=BB0_147 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_159
# %bb.154:                              #   in Loop: Header=BB0_147 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_158
# %bb.155:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i396
                                        #   in Loop: Header=BB0_147 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_158
# %bb.156:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i402
                                        #   in Loop: Header=BB0_147 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_159
.LBB0_157:                              #   in Loop: Header=BB0_147 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%r15)
	movq	%rax, %r15
	movq	48(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB0_146
	.p2align	4, 0x90
.LBB0_158:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i400
                                        #   in Loop: Header=BB0_147 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_157
	.p2align	4, 0x90
.LBB0_159:                              # %.critedge.i404
                                        #   in Loop: Header=BB0_147 Depth=1
.Ltmp101:
	movq	%rcx, %r12
	movl	$56, %edi
	callq	_Znwm
.Ltmp102:
# %bb.160:                              # %.noexc647
                                        #   in Loop: Header=BB0_147 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	%r15, 48(%rax)
.Ltmp104:
	leaq	648(%rsp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp105:
# %bb.161:                              #   in Loop: Header=BB0_147 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	movq	48(%rsp), %r12                  # 8-byte Reload
	je	.LBB0_145
# %bb.162:                              #   in Loop: Header=BB0_147 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_168
# %bb.163:                              #   in Loop: Header=BB0_147 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_168
# %bb.164:                              #   in Loop: Header=BB0_147 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_166
# %bb.165:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i639
                                        #   in Loop: Header=BB0_147 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_167
.LBB0_166:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i643
                                        #   in Loop: Header=BB0_147 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_167:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i645
                                        #   in Loop: Header=BB0_147 Depth=1
	shrl	$31, %eax
.LBB0_168:                              #   in Loop: Header=BB0_147 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_146
.LBB0_169:                              # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit125
	leaq	280(%rsp), %r14
	movq	%r14, 264(%rsp)
	movabsq	$7503116162099733867, %rax      # imm = 0x68206C656E72656B
	movq	%rax, 280(%rsp)
	movabsq	$8388068008348098668, %rcx      # imm = 0x746867696568206C
	movq	%rcx, 285(%rsp)
	movq	$13, 272(%rsp)
	movb	$0, 293(%rsp)
	movq	56(%r15), %rdx
	movq	%rcx, 5(%rdx)
	movq	%rax, (%rdx)
	movq	272(%rsp), %rax
	movq	%rax, 64(%r15)
	movq	56(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	264(%rsp), %rax
	movq	$0, 272(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rbx                  # 8-byte Reload
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r15), %eax
	testq	%rax, %rax
	je	.LBB0_172
# %bb.170:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp113:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp114:
# %bb.171:                              # %.noexc656
	movb	$0, 288(%r15)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r15), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r15)
	jmp	.LBB0_174
.LBB0_172:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r15), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r15)
	movq	280(%r15), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r15)
	testq	%rax, %rax
	je	.LBB0_174
# %bb.173:
.Ltmp116:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp117:
.LBB0_174:                              # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i412
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp119:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp120:
# %bb.175:                              # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i414
	cmpb	$0, 288(%r15)
	jne	.LBB0_363
# %bb.176:                              # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit127
	movq	264(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_178
# %bb.177:
	callq	_ZdlPv
.LBB0_178:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit128
	movq	$12, (%rsp)
	movq	$.L.str.10, 8(%rsp)
.Ltmp125:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp126:
# %bb.179:                              # %.noexc137
	movq	%rax, %rbx
	movq	%rax, %r15
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp127:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp128:
# %bb.180:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i131
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r15, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r15)
	jne	.LBB0_183
# %bb.181:
	leaq	600(%rsp), %rdi
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_183
# %bb.182:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_183:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i133
	movq	16(%r15), %rax
	movq	24(%r15), %rcx
	movq	%rcx, 56(%rsp)                  # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB0_209
# %bb.184:                              # %.lr.ph.i.i134
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_187
	.p2align	4, 0x90
.LBB0_185:                              #   in Loop: Header=BB0_187 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_186:                              # %.noexc140
                                        #   in Loop: Header=BB0_187 Depth=1
	movq	48(%rsp), %rax                  # 8-byte Reload
	addq	$32, %rax
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB0_209
.LBB0_187:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_191 Depth 2
	movq	(%rax), %rbx
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	movq	8(%rax), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_199
# %bb.188:                              # %.lr.ph.i.i.i.i421.preheader
                                        #   in Loop: Header=BB0_187 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_191
	.p2align	4, 0x90
.LBB0_189:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i432
                                        #   in Loop: Header=BB0_191 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_190:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i438
                                        #   in Loop: Header=BB0_191 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_193
.LBB0_191:                              # %.lr.ph.i.i.i.i421
                                        #   Parent Loop BB0_187 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_189
# %bb.192:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i428
                                        #   in Loop: Header=BB0_191 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_190
	jmp	.LBB0_189
	.p2align	4, 0x90
.LBB0_193:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i439
                                        #   in Loop: Header=BB0_187 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_199
# %bb.194:                              #   in Loop: Header=BB0_187 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_198
# %bb.195:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i444
                                        #   in Loop: Header=BB0_187 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_198
# %bb.196:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i450
                                        #   in Loop: Header=BB0_187 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_199
.LBB0_197:                              #   in Loop: Header=BB0_187 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%r15)
	movq	%rax, %r15
	jmp	.LBB0_186
	.p2align	4, 0x90
.LBB0_198:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i448
                                        #   in Loop: Header=BB0_187 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_197
	.p2align	4, 0x90
.LBB0_199:                              # %.critedge.i452
                                        #   in Loop: Header=BB0_187 Depth=1
.Ltmp130:
	movq	%rcx, %r12
	movl	$56, %edi
	callq	_Znwm
.Ltmp131:
# %bb.200:                              # %.noexc677
                                        #   in Loop: Header=BB0_187 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	%r15, 48(%rax)
.Ltmp133:
	leaq	648(%rsp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp134:
# %bb.201:                              #   in Loop: Header=BB0_187 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	je	.LBB0_185
# %bb.202:                              #   in Loop: Header=BB0_187 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_208
# %bb.203:                              #   in Loop: Header=BB0_187 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_208
# %bb.204:                              #   in Loop: Header=BB0_187 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_206
# %bb.205:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i669
                                        #   in Loop: Header=BB0_187 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_207
.LBB0_206:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i673
                                        #   in Loop: Header=BB0_187 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_207:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i675
                                        #   in Loop: Header=BB0_187 Depth=1
	shrl	$31, %eax
.LBB0_208:                              #   in Loop: Header=BB0_187 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_186
.LBB0_209:                              # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit152
	leaq	248(%rsp), %r14
	movq	%r14, 232(%rsp)
	movabsq	$8583980072668652907, %rax      # imm = 0x77206C656E72656B
	movq	%rax, 248(%rsp)
	movl	$1752458345, 256(%rsp)          # imm = 0x68746469
	movq	$12, 240(%rsp)
	movb	$0, 260(%rsp)
	movq	56(%r15), %rcx
	movq	%rax, (%rcx)
	movl	$1752458345, 8(%rcx)            # imm = 0x68746469
	movq	240(%rsp), %rax
	movq	%rax, 64(%r15)
	movq	56(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	232(%rsp), %rax
	movq	$0, 240(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rbx                  # 8-byte Reload
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r15), %eax
	testq	%rax, %rax
	je	.LBB0_212
# %bb.210:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp142:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp143:
# %bb.211:                              # %.noexc686
	movb	$0, 288(%r15)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r15), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r15)
	jmp	.LBB0_214
.LBB0_212:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r15), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r15)
	movq	280(%r15), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r15)
	testq	%rax, %rax
	je	.LBB0_214
# %bb.213:
.Ltmp145:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp146:
.LBB0_214:                              # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i460
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp148:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp149:
# %bb.215:                              # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i462
	cmpb	$0, 288(%r15)
	jne	.LBB0_365
# %bb.216:                              # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit154
	movq	232(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_218
# %bb.217:
	callq	_ZdlPv
.LBB0_218:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit155
	movq	$12, (%rsp)
	movq	$.L.str.12, 8(%rsp)
.Ltmp154:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp155:
# %bb.219:                              # %.noexc164
	movq	%rax, %rbx
	movq	%rax, %r15
	leaq	16(%rax), %rdi
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp156:
	movq	%rsp, %rcx
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp157:
# %bb.220:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i158
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r15, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r15)
	jne	.LBB0_223
# %bb.221:
	leaq	600(%rsp), %rdi
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_223
# %bb.222:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_223:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i160
	movq	16(%r15), %rax
	movq	24(%r15), %rcx
	movq	%rcx, 56(%rsp)                  # 8-byte Spill
	cmpq	%rcx, %rax
	je	.LBB0_249
# %bb.224:                              # %.lr.ph.i.i161
	movq	%r15, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_227
	.p2align	4, 0x90
.LBB0_225:                              #   in Loop: Header=BB0_227 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_226:                              # %.noexc167
                                        #   in Loop: Header=BB0_227 Depth=1
	movq	48(%rsp), %rax                  # 8-byte Reload
	addq	$32, %rax
	cmpq	56(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB0_249
.LBB0_227:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_231 Depth 2
	movq	(%rax), %rbx
	movq	%rax, 48(%rsp)                  # 8-byte Spill
	movq	8(%rax), %rbp
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_239
# %bb.228:                              # %.lr.ph.i.i.i.i469.preheader
                                        #   in Loop: Header=BB0_227 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_231
	.p2align	4, 0x90
.LBB0_229:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i480
                                        #   in Loop: Header=BB0_231 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_230:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i486
                                        #   in Loop: Header=BB0_231 Depth=2
	testl	%r14d, %r14d
	movq	%r15, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_233
.LBB0_231:                              # %.lr.ph.i.i.i.i469
                                        #   Parent Loop BB0_227 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %r15
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%rbp, %r12
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_229
# %bb.232:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i476
                                        #   in Loop: Header=BB0_231 Depth=2
	movq	40(%r15), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_230
	jmp	.LBB0_229
	.p2align	4, 0x90
.LBB0_233:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i487
                                        #   in Loop: Header=BB0_227 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_239
# %bb.234:                              #   in Loop: Header=BB0_227 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%rbp, %rcx
	subq	%rdx, %rcx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB0_238
# %bb.235:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i492
                                        #   in Loop: Header=BB0_227 Depth=1
	testl	%r14d, %r14d
	movq	%r15, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_238
# %bb.236:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i498
                                        #   in Loop: Header=BB0_227 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_239
.LBB0_237:                              #   in Loop: Header=BB0_227 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %r15
	movq	40(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%r15)
	movq	%rax, %r15
	jmp	.LBB0_226
	.p2align	4, 0x90
.LBB0_238:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i496
                                        #   in Loop: Header=BB0_227 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_237
	.p2align	4, 0x90
.LBB0_239:                              # %.critedge.i500
                                        #   in Loop: Header=BB0_227 Depth=1
.Ltmp159:
	movq	%rcx, %r12
	movl	$56, %edi
	callq	_Znwm
.Ltmp160:
# %bb.240:                              # %.noexc707
                                        #   in Loop: Header=BB0_227 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%rbp, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r15                  # 8-byte Reload
	movq	%r15, 48(%rax)
.Ltmp162:
	leaq	648(%rsp), %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp163:
# %bb.241:                              #   in Loop: Header=BB0_227 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	je	.LBB0_225
# %bb.242:                              #   in Loop: Header=BB0_227 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_248
# %bb.243:                              #   in Loop: Header=BB0_227 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_248
# %bb.244:                              #   in Loop: Header=BB0_227 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_246
# %bb.245:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i699
                                        #   in Loop: Header=BB0_227 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_247
.LBB0_246:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i703
                                        #   in Loop: Header=BB0_227 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_247:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i705
                                        #   in Loop: Header=BB0_227 Depth=1
	shrl	$31, %eax
.LBB0_248:                              #   in Loop: Header=BB0_227 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_226
.LBB0_249:                              # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit179
	leaq	216(%rsp), %r14
	movq	%r14, 200(%rsp)
	movabsq	$7953753191868560751, %rax      # imm = 0x6E6168632074756F
	movq	%rax, 216(%rsp)
	movl	$1936483694, 224(%rsp)          # imm = 0x736C656E
	movq	$12, 208(%rsp)
	movb	$0, 228(%rsp)
	movq	56(%r15), %rcx
	movq	%rax, (%rcx)
	movl	$1936483694, 8(%rcx)            # imm = 0x736C656E
	movq	208(%rsp), %rax
	movq	%rax, 64(%r15)
	movq	56(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	200(%rsp), %rax
	movq	$0, 208(%rsp)
	movb	$0, (%rax)
	movq	64(%rsp), %rbx                  # 8-byte Reload
	addq	$256, %rbx                      # imm = 0x100
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 24(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 16(%rsp)
	movb	$0, 32(%rsp)
	movzbl	288(%r15), %eax
	testq	%rax, %rax
	je	.LBB0_252
# %bb.250:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp171:
	leaq	80(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp172:
# %bb.251:                              # %.noexc716
	movb	$0, 288(%r15)
	movaps	(%rsp), %xmm0
	movaps	%xmm0, 80(%rsp)
	movups	(%rbx), %xmm1
	movaps	%xmm1, (%rsp)
	movups	%xmm0, (%rbx)
	movq	280(%r15), %rax
	movaps	16(%rsp), %xmm0
	movq	$0, 16(%rsp)
	movq	%rax, 24(%rsp)
	movups	%xmm0, 272(%r15)
	jmp	.LBB0_254
.LBB0_252:
	movq	$0, 16(%rsp)
	movups	(%rbx), %xmm0
	movaps	%xmm0, 80(%rsp)
	movq	272(%r15), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, 272(%r15)
	movq	280(%r15), %rcx
	movq	%rcx, 104(%rsp)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, 280(%r15)
	testq	%rax, %rax
	je	.LBB0_254
# %bb.253:
.Ltmp174:
	leaq	80(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp175:
.LBB0_254:                              # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit.i508
	movzbl	32(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp177:
	leaq	80(%rsp), %rdi
	movq	%rsp, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp178:
# %bb.255:                              # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit.i510
	cmpb	$0, 288(%r15)
	jne	.LBB0_367
# %bb.256:                              # %_ZN8argparse8Argument4scanILc105EiEENSt9enable_ifIXsr3stdE15is_arithmetic_vIT0_EERS0_E4typeEv.exit181
	movq	200(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_258
# %bb.257:
	callq	_ZdlPv
.LBB0_258:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit182
	movq	$8, (%rsp)
	movq	$.L.str.14, 8(%rsp)
.Ltmp183:
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
.Ltmp184:
# %bb.259:                              # %.noexc191
	movq	%rax, %r12
	leaq	16(%rax), %rbx
	movq	528(%rsp), %rdx
	movq	536(%rsp), %rsi
.Ltmp185:
	movq	%rsp, %rcx
	movq	%rbx, %rdi
	callq	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp186:
# %bb.260:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm1EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit.i185
	movq	%rbx, 64(%rsp)                  # 8-byte Spill
	movq	%r12, %rdi
	leaq	624(%rsp), %rsi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	640(%rsp)
	testb	$2, 336(%r12)
	jne	.LBB0_263
# %bb.261:
	leaq	600(%rsp), %rdi
	movq	(%r12), %rdx
	cmpq	%rdi, %rdx
	je	.LBB0_263
# %bb.262:
	movq	%r12, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	616(%rsp)
	decq	640(%rsp)
.LBB0_263:                              # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit.i187
	movq	16(%r12), %r15
	movq	24(%r12), %rax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	cmpq	%rax, %r15
	je	.LBB0_289
# %bb.264:                              # %.lr.ph.i.i188
	movq	%r12, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB0_267
	.p2align	4, 0x90
.LBB0_265:                              #   in Loop: Header=BB0_267 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB0_266:                              # %.noexc194
                                        #   in Loop: Header=BB0_267 Depth=1
	addq	$32, %r15
	cmpq	56(%rsp), %r15                  # 8-byte Folded Reload
	je	.LBB0_289
.LBB0_267:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_271 Depth 2
	movq	(%r15), %rbx
	movq	%r15, 48(%rsp)                  # 8-byte Spill
	movq	8(%r15), %r15
	movq	664(%rsp), %rax
	leaq	656(%rsp), %rcx
	testq	%rax, %rax
	je	.LBB0_279
# %bb.268:                              # %.lr.ph.i.i.i.i517.preheader
                                        #   in Loop: Header=BB0_267 Depth=1
	leaq	656(%rsp), %r12
	jmp	.LBB0_271
	.p2align	4, 0x90
.LBB0_269:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i.i528
                                        #   in Loop: Header=BB0_271 Depth=2
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r12
	cmpq	$2147483647, %r12               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r12
	movl	%r12d, %r14d
.LBB0_270:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i.i534
                                        #   in Loop: Header=BB0_271 Depth=2
	testl	%r14d, %r14d
	movq	%rbp, %r12
	cmovsq	%r13, %r12
	movl	%r14d, %eax
	shrl	$31, %eax
	movq	16(%rbp,%rax,8), %rax
	testq	%rax, %rax
	je	.LBB0_273
.LBB0_271:                              # %.lr.ph.i.i.i.i517
                                        #   Parent Loop BB0_267 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r12, %r13
	movq	%rax, %rbp
	movq	32(%rax), %rdx
	movq	%rdx, %r12
	subq	%r15, %r12
	cmovaeq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB0_269
# %bb.272:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i.i524
                                        #   in Loop: Header=BB0_271 Depth=2
	movq	40(%rbp), %rdi
	movq	%rbx, %rsi
	callq	memcmp
	movl	%eax, %r14d
	testl	%eax, %eax
	jne	.LBB0_270
	jmp	.LBB0_269
	.p2align	4, 0x90
.LBB0_273:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit.i535
                                        #   in Loop: Header=BB0_267 Depth=1
	leaq	656(%rsp), %rax
	movq	%rax, %rcx
	cmpq	%rax, %r12
	je	.LBB0_279
# %bb.274:                              #   in Loop: Header=BB0_267 Depth=1
	testl	%r14d, %r14d
	movq	%rbp, %rax
	cmovsq	%r13, %rax
	movq	32(%rax), %rdx
	movq	%r15, %rcx
	subq	%rdx, %rcx
	cmovbq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB0_278
# %bb.275:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i540
                                        #   in Loop: Header=BB0_267 Depth=1
	testl	%r14d, %r14d
	movq	%rbp, %rax
	cmovsq	%r13, %rax
	movq	40(%rax), %rsi
	movq	%rbx, %rdi
	movq	%rcx, 72(%rsp)                  # 8-byte Spill
	callq	memcmp
	movq	72(%rsp), %rcx                  # 8-byte Reload
	testl	%eax, %eax
	je	.LBB0_278
# %bb.276:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i546
                                        #   in Loop: Header=BB0_267 Depth=1
	movq	%r12, %rcx
	testl	%eax, %eax
	js	.LBB0_279
.LBB0_277:                              #   in Loop: Header=BB0_267 Depth=1
	testl	%r14d, %r14d
	cmovsq	%r13, %rbp
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	%r12, 48(%rbp)
	movq	48(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB0_266
	.p2align	4, 0x90
.LBB0_278:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i544
                                        #   in Loop: Header=BB0_267 Depth=1
	cmpq	$-2147483647, %rcx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rcx
	movl	%ecx, %eax
	movq	%r12, %rcx
	testl	%eax, %eax
	jns	.LBB0_277
	.p2align	4, 0x90
.LBB0_279:                              # %.critedge.i548
                                        #   in Loop: Header=BB0_267 Depth=1
.Ltmp188:
	movq	%rcx, %rbp
	movl	$56, %edi
	callq	_Znwm
.Ltmp189:
# %bb.280:                              # %.noexc737
                                        #   in Loop: Header=BB0_267 Depth=1
	movq	%rax, %r13
	movq	%rax, %r14
	addq	$32, %r14
	movq	%r15, 32(%rax)
	movq	%rbx, 40(%rax)
	movq	40(%rsp), %r12                  # 8-byte Reload
	movq	%r12, 48(%rax)
.Ltmp191:
	leaq	648(%rsp), %rdi
	movq	%rbp, %rsi
	movq	%r14, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp192:
# %bb.281:                              #   in Loop: Header=BB0_267 Depth=1
	movq	%rdx, %rbx
	testq	%rdx, %rdx
	movq	48(%rsp), %r15                  # 8-byte Reload
	je	.LBB0_265
# %bb.282:                              #   in Loop: Header=BB0_267 Depth=1
	movq	%rax, %rcx
	movb	$1, %al
	testq	%rcx, %rcx
	jne	.LBB0_288
# %bb.283:                              #   in Loop: Header=BB0_267 Depth=1
	leaq	656(%rsp), %rcx
	cmpq	%rbx, %rcx
	je	.LBB0_288
# %bb.284:                              #   in Loop: Header=BB0_267 Depth=1
	movq	(%r14), %rax
	movq	32(%rbx), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB0_286
# %bb.285:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i729
                                        #   in Loop: Header=BB0_267 Depth=1
	movq	40(%rbx), %rsi
	movq	40(%r13), %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB0_287
.LBB0_286:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i733
                                        #   in Loop: Header=BB0_267 Depth=1
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB0_287:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i735
                                        #   in Loop: Header=BB0_267 Depth=1
	shrl	$31, %eax
.LBB0_288:                              #   in Loop: Header=BB0_267 Depth=1
	movzbl	%al, %edi
	movq	%r13, %rsi
	movq	%rbx, %rdx
	leaq	656(%rsp), %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	688(%rsp)
	jmp	.LBB0_266
.LBB0_289:                              # %_ZN8argparse14ArgumentParser12add_argumentIJPKcEEERNS_8ArgumentEDpT_.exit195
	leaq	176(%rsp), %r15
	movq	%r15, 160(%rsp)
	movq	$36, (%rsp)
.Ltmp200:
	leaq	160(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp201:
# %bb.290:                              # %.noexc198
	movq	%rax, 160(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 176(%rsp)
	movups	.L.str.15+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.15(%rip), %xmm0
	movups	%xmm0, (%rax)
	movl	$692265004, 32(%rax)            # imm = 0x2943202C
	movq	%rcx, 168(%rsp)
	movb	$0, (%rax,%rcx)
	movq	160(%rsp), %rcx
	cmpq	%r15, %rcx
	movq	64(%rsp), %rbx                  # 8-byte Reload
	je	.LBB0_294
# %bb.291:
	leaq	72(%r12), %rdx
	movq	56(%r12), %rax
	cmpq	%rdx, %rax
	je	.LBB0_297
# %bb.292:
	movq	72(%r12), %rdx
	movq	%rcx, 56(%r12)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 64(%r12)
	testq	%rax, %rax
	je	.LBB0_298
# %bb.293:
	movq	%rax, 160(%rsp)
	movq	%rdx, 176(%rsp)
	jmp	.LBB0_301
.LBB0_294:
	movq	168(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB0_300
# %bb.295:
	movq	56(%r12), %rdi
	cmpq	$1, %rdx
	jne	.LBB0_299
# %bb.296:
	movzbl	176(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB0_300
.LBB0_297:                              # %.thread.i.i204
	movq	%rcx, 56(%r12)
	movups	168(%rsp), %xmm0
	movups	%xmm0, 64(%r12)
.LBB0_298:
	movq	%r15, 160(%rsp)
	movq	%r15, %rax
	jmp	.LBB0_301
.LBB0_299:
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB0_300:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i203
	movq	168(%rsp), %rax
	movq	%rax, 64(%r12)
	movq	56(%r12), %rcx
	movb	$0, (%rcx,%rax)
	movq	160(%rsp), %rax
.LBB0_301:                              # %_ZN8argparse8Argument4helpENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.exit206
	movq	$0, 168(%rsp)
	movb	$0, (%rax)
	movb	$0, (%rsp)
.Ltmp203:
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	callq	_ZN8argparse8Argument13default_valueIbEERS0_OT_
.Ltmp204:
# %bb.302:
	movq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, (%rsp)
	movq	$0, 8(%rsp)
	movb	$1, 8(%rsp)
	movq	%r12, %rbx
	addq	$208, %rbx
	movq	208(%r12), %rax
	testq	%rax, %rax
	je	.LBB0_305
# %bb.303:
.Ltmp206:
	movl	$3, %edi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp207:
# %bb.304:
	movq	$0, (%rbx)
	movq	(%rsp), %rcx
	jmp	.LBB0_306
.LBB0_305:
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %ecx
.LBB0_306:                              # %_ZNSt3any5resetEv.exit7.i.i.i
	movq	%rbx, 80(%rsp)
.Ltmp209:
	movq	%rsp, %rsi
	leaq	80(%rsp), %rdx
	movl	$4, %edi
	callq	*%rcx
.Ltmp210:
# %bb.307:
	movq	(%rsp), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 320(%r12)
	testq	%rax, %rax
	je	.LBB0_309
# %bb.308:
.Ltmp212:
	movq	%rsp, %rsi
	movl	$3, %edi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp213:
.LBB0_309:
	movq	160(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB0_311
# %bb.310:
	callq	_ZdlPv
.LBB0_311:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit208
	movabsq	$2305843009213693944, %r14      # imm = 0x1FFFFFFFFFFFFFF8
	movl	196(%rsp), %eax                 # 4-byte Reload
	movslq	%eax, %rbx
	leaq	(,%rbx,8), %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	cmpq	%r14, %rcx
	ja	.LBB0_369
# %bb.312:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_.exit.i.i.i
	testl	%eax, %eax
	je	.LBB0_324
# %bb.313:                              # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i.i.i.i
	movq	%rbx, %rdi
	shlq	$5, %rdi
.Ltmp215:
	callq	_Znwm
.Ltmp216:
# %bb.314:                              # %.lr.ph.i.preheader
	addq	$7, %r14
	andq	%r14, %rbx
	movq	%rax, (%rsp)
	shlq	$5, %rbx
	addq	%rax, %rbx
	movq	%rbx, 16(%rsp)
	xorl	%r15d, %r15d
	xorl	%ebx, %ebx
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	%rax, %r12
	jmp	.LBB0_317
	.p2align	4, 0x90
.LBB0_315:                              #   in Loop: Header=BB0_317 Depth=1
	movzbl	(%r14), %eax
	movb	%al, (%r13)
.LBB0_316:                              #   in Loop: Header=BB0_317 Depth=1
	movq	80(%rsp), %rax
	movq	%rax, 8(%r12)
	movq	(%r12), %rcx
	movb	$0, (%rcx,%rax)
	addq	$32, %r12
	addq	$-32, %rbx
	addq	$8, %r15
	cmpq	%r15, 48(%rsp)                  # 8-byte Folded Reload
	je	.LBB0_325
.LBB0_317:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	880(%rsp), %rax                 # 8-byte Reload
	movq	(%rax,%r15), %r14
	leaq	16(%r12), %r13
	movq	%r13, (%r12)
	testq	%r14, %r14
	je	.LBB0_355
# %bb.318:                              #   in Loop: Header=BB0_317 Depth=1
	movq	%r14, %rdi
	callq	strlen
	movq	%rax, %rbp
	movq	%rax, 80(%rsp)
	cmpq	$16, %rax
	jb	.LBB0_321
# %bb.319:                              # %.noexc8.i.i.i
                                        #   in Loop: Header=BB0_317 Depth=1
.Ltmp217:
	movq	%r12, %rdi
	leaq	80(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp218:
# %bb.320:                              # %.noexc13.i
                                        #   in Loop: Header=BB0_317 Depth=1
	movq	%rax, %r13
	movq	%rax, (%r12)
	movq	80(%rsp), %rax
	movq	%rax, 16(%r12)
.LBB0_321:                              # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB0_317 Depth=1
	testq	%rbp, %rbp
	je	.LBB0_316
# %bb.322:                              # %._crit_edge.i.i.i.i.i.i
                                        #   in Loop: Header=BB0_317 Depth=1
	cmpq	$1, %rbp
	je	.LBB0_315
# %bb.323:                              #   in Loop: Header=BB0_317 Depth=1
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
	jmp	.LBB0_316
.LBB0_324:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit.i.i.i.thread
	movq	$0, (%rsp)
	shlq	$5, %rbx
	movq	%rbx, 16(%rsp)
	xorl	%r12d, %r12d
.LBB0_325:                              # %_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKPKcPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEET0_T_SE_SD_.exit
	movq	%r12, 8(%rsp)
.Ltmp229:
	leaq	392(%rsp), %rdi
	movq	%rsp, %rsi
	callq	_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Ltmp230:
# %bb.326:
	movq	(%rsp), %rbx
	movq	8(%rsp), %r14
	cmpq	%r14, %rbx
	jne	.LBB0_352
# %bb.327:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i
	testq	%rbx, %rbx
	je	.LBB0_329
.LBB0_328:
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB0_329:
	movq	120(%rsp), %rax                 # 8-byte Reload
	movl	$1, (%rax)
	cmpb	$0, 592(%rsp)
	je	.LBB0_371
# %bb.330:
.Ltmp232:
	leaq	392(%rsp), %rdi
	movl	$11, %esi
	movl	$.L.str.2, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp233:
# %bb.331:                              # %.noexc227
.Ltmp234:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp235:
# %bb.332:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 4(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_372
# %bb.333:
.Ltmp236:
	leaq	392(%rsp), %rdi
	movl	$9, %esi
	movl	$.L.str.4, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp237:
# %bb.334:                              # %.noexc233
.Ltmp238:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp239:
# %bb.335:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit235
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 8(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_373
# %bb.336:
.Ltmp240:
	leaq	392(%rsp), %rdi
	movl	$8, %esi
	movl	$.L.str.6, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp241:
# %bb.337:                              # %.noexc240
.Ltmp242:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp243:
# %bb.338:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit242
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 12(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_374
# %bb.339:
.Ltmp244:
	leaq	392(%rsp), %rdi
	movl	$13, %esi
	movl	$.L.str.8, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp245:
# %bb.340:                              # %.noexc247
.Ltmp246:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp247:
# %bb.341:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit249
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 16(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_375
# %bb.342:
.Ltmp248:
	leaq	392(%rsp), %rdi
	movl	$12, %esi
	movl	$.L.str.10, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp249:
# %bb.343:                              # %.noexc254
.Ltmp250:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp251:
# %bb.344:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit256
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 20(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_376
# %bb.345:
.Ltmp252:
	leaq	392(%rsp), %rdi
	movl	$12, %esi
	movl	$.L.str.12, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp253:
# %bb.346:                              # %.noexc261
.Ltmp254:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIiEET_v
.Ltmp255:
# %bb.347:                              # %_ZNK8argparse14ArgumentParser3getIiEET_St17basic_string_viewIcSt11char_traitsIcEE.exit263
	movq	120(%rsp), %rcx                 # 8-byte Reload
	movl	%eax, 24(%rcx)
	cmpb	$0, 592(%rsp)
	je	.LBB0_377
# %bb.348:
.Ltmp256:
	leaq	392(%rsp), %rdi
	movl	$8, %esi
	movl	$.L.str.14, %edx
	callq	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp257:
# %bb.349:                              # %.noexc268
.Ltmp258:
	movq	%rax, %rdi
	callq	_ZNK8argparse8Argument3getIbEET_v
.Ltmp259:
# %bb.350:                              # %_ZNK8argparse14ArgumentParser3getIbEET_St17basic_string_viewIcSt11char_traitsIcEE.exit
	movq	120(%rsp), %rbx                 # 8-byte Reload
	movb	%al, 28(%rbx)
	leaq	392(%rsp), %rdi
	callq	_ZN8argparse14ArgumentParserD2Ev
	movq	%rbx, %rax
	addq	$920, %rsp                      # imm = 0x398
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB0_351:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB0_352 Depth=1
	.cfi_def_cfa_offset 976
	addq	$16, %rbx
	cmpq	%r14, %rbx
	je	.LBB0_354
.LBB0_352:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB0_351
# %bb.353:                              #   in Loop: Header=BB0_352 Depth=1
	callq	_ZdlPv
	jmp	.LBB0_351
.LBB0_354:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i
	movq	(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB0_328
	jmp	.LBB0_329
.LBB0_355:                              # %.noexc.i.i.i
.Ltmp220:
	movl	$.L.str.33, %edi
	callq	_ZSt19__throw_logic_errorPKc
.Ltmp221:
# %bb.356:                              # %.noexc.i
.LBB0_357:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp35:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp36:
# %bb.358:                              # %.noexc272
.LBB0_359:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp64:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp65:
# %bb.360:                              # %.noexc319
.LBB0_361:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp93:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp94:
# %bb.362:                              # %.noexc367
.LBB0_363:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp122:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp123:
# %bb.364:                              # %.noexc415
.LBB0_365:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp151:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp152:
# %bb.366:                              # %.noexc463
.LBB0_367:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
.Ltmp180:
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Ltmp181:
# %bb.368:                              # %.noexc511
.LBB0_369:                              # %.noexc.i.i
.Ltmp284:
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp285:
# %bb.370:                              # %.noexc209
.LBB0_371:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp278:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp279:
	jmp	.LBB0_378
.LBB0_372:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp275:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp276:
	jmp	.LBB0_378
.LBB0_373:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp272:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp273:
	jmp	.LBB0_378
.LBB0_374:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp269:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp270:
	jmp	.LBB0_378
.LBB0_375:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp266:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp267:
	jmp	.LBB0_378
.LBB0_376:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp263:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp264:
	jmp	.LBB0_378
.LBB0_377:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp260:
	movl	$.L.str.113, %esi
	movq	%rax, %rdi
	callq	_ZNSt11logic_errorC1EPKc
.Ltmp261:
.LBB0_378:                              # %.invoke
.Ltmp281:
	movl	$_ZTISt11logic_error, %esi
	movl	$_ZNSt11logic_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp282:
# %bb.379:                              # %.cont
.LBB0_380:
.Ltmp176:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_381:
.Ltmp147:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_382:
.Ltmp118:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_383:
.Ltmp89:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_384:
.Ltmp60:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_385:
.Ltmp31:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_386:
.Ltmp262:
	jmp	.LBB0_393
.LBB0_387:
.Ltmp265:
	jmp	.LBB0_393
.LBB0_388:
.Ltmp268:
	jmp	.LBB0_393
.LBB0_389:
.Ltmp271:
	jmp	.LBB0_393
.LBB0_390:
.Ltmp274:
	jmp	.LBB0_393
.LBB0_391:
.Ltmp277:
	jmp	.LBB0_393
.LBB0_392:
.Ltmp280:
.LBB0_393:                              # %.body
	movq	%rax, %rbx
	movq	%r14, %rdi
	callq	__cxa_free_exception
	jmp	.LBB0_494
.LBB0_394:
.Ltmp214:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_395:
.Ltmp208:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_396:
.Ltmp173:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_397:
.Ltmp144:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_398:
.Ltmp115:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_399:
.Ltmp86:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_400:
.Ltmp57:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_401:
.Ltmp28:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_402:
.Ltmp231:
	movq	%rdx, %r14
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	jmp	.LBB0_488
.LBB0_403:
.Ltmp211:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_404:
.Ltmp205:
	movq	%rax, %rbx
	movq	160(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_406:
.Ltmp202:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_407:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i183
.Ltmp187:
	jmp	.LBB0_434
.LBB0_408:
.Ltmp182:
	movq	%rax, %rbx
	movq	200(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_410:
.Ltmp179:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_411:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i156
.Ltmp158:
	jmp	.LBB0_428
.LBB0_412:
.Ltmp153:
	movq	%rax, %rbx
	movq	232(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_414:
.Ltmp150:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_415:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i129
.Ltmp129:
	jmp	.LBB0_428
.LBB0_416:
.Ltmp124:
	movq	%rax, %rbx
	movq	264(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_418:
.Ltmp121:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_419:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i102
.Ltmp100:
	jmp	.LBB0_428
.LBB0_420:
.Ltmp95:
	movq	%rax, %rbx
	movq	296(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_422:
.Ltmp92:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_423:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i75
.Ltmp71:
	jmp	.LBB0_428
.LBB0_424:
.Ltmp66:
	movq	%rax, %rbx
	movq	328(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB0_430
	jmp	.LBB0_494
.LBB0_426:
.Ltmp63:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_427:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i48
.Ltmp42:
.LBB0_428:                              # %.body
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	_ZdlPv
	jmp	.LBB0_494
.LBB0_429:
.Ltmp37:
	movq	%rax, %rbx
	movq	128(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB0_494
.LBB0_430:
	callq	_ZdlPv
	jmp	.LBB0_494
.LBB0_431:
.Ltmp34:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_432:
.Ltmp25:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_433:                              # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i.i
.Ltmp10:
.LBB0_434:                              # %.body
	movq	%rax, %rbx
	movq	%r12, %rdi
	callq	_ZdlPv
	jmp	.LBB0_494
.LBB0_435:
.Ltmp5:
	movq	%rax, %rbx
	movq	888(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB0_437
# %bb.436:
	callq	_ZdlPv
.LBB0_437:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit213
	movq	360(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB0_495
# %bb.438:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB0_439:
.Ltmp2:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB0_440:
.Ltmp286:
	movq	%rdx, %r14
	movq	%rax, %rbx
	jmp	.LBB0_488
.LBB0_441:                              # %.loopexit.i
.Ltmp219:
	jmp	.LBB0_478
.LBB0_442:
.Ltmp193:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp194:
	callq	__cxa_rethrow
.Ltmp195:
# %bb.443:
.LBB0_444:
.Ltmp196:
	movq	%rax, %rbx
.Ltmp197:
	callq	__cxa_end_catch
.Ltmp198:
	jmp	.LBB0_494
.LBB0_445:
.Ltmp199:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_446:                              # %.loopexit
.Ltmp190:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_447:
.Ltmp164:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp165:
	callq	__cxa_rethrow
.Ltmp166:
# %bb.448:
.LBB0_449:
.Ltmp167:
	movq	%rax, %rbx
.Ltmp168:
	callq	__cxa_end_catch
.Ltmp169:
	jmp	.LBB0_494
.LBB0_450:
.Ltmp170:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_451:                              # %.loopexit.split-lp.loopexit
.Ltmp161:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_452:
.Ltmp135:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp136:
	callq	__cxa_rethrow
.Ltmp137:
# %bb.453:
.LBB0_454:
.Ltmp138:
	movq	%rax, %rbx
.Ltmp139:
	callq	__cxa_end_catch
.Ltmp140:
	jmp	.LBB0_494
.LBB0_455:
.Ltmp141:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_456:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp132:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_457:
.Ltmp106:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp107:
	callq	__cxa_rethrow
.Ltmp108:
# %bb.458:
.LBB0_459:
.Ltmp109:
	movq	%rax, %rbx
.Ltmp110:
	callq	__cxa_end_catch
.Ltmp111:
	jmp	.LBB0_494
.LBB0_460:
.Ltmp112:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_461:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp103:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_462:
.Ltmp77:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp78:
	callq	__cxa_rethrow
.Ltmp79:
# %bb.463:
.LBB0_464:
.Ltmp80:
	movq	%rax, %rbx
.Ltmp81:
	callq	__cxa_end_catch
.Ltmp82:
	jmp	.LBB0_494
.LBB0_465:
.Ltmp83:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_466:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp74:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_467:
.Ltmp48:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp49:
	callq	__cxa_rethrow
.Ltmp50:
# %bb.468:
.LBB0_469:
.Ltmp51:
	movq	%rax, %rbx
.Ltmp52:
	callq	__cxa_end_catch
.Ltmp53:
	jmp	.LBB0_494
.LBB0_470:
.Ltmp54:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_471:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp45:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_472:
.Ltmp16:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%r13, %rdi
	callq	_ZdlPv
.Ltmp17:
	callq	__cxa_rethrow
.Ltmp18:
# %bb.473:
.LBB0_474:
.Ltmp19:
	movq	%rax, %rbx
.Ltmp20:
	callq	__cxa_end_catch
.Ltmp21:
	jmp	.LBB0_494
.LBB0_475:
.Ltmp22:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_476:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit
.Ltmp13:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_477:                              # %.loopexit.split-lp.i
.Ltmp222:
.LBB0_478:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	testq	%rbx, %rbx
	jne	.LBB0_481
.LBB0_479:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit.i
.Ltmp223:
	callq	__cxa_rethrow
.Ltmp224:
# %bb.480:
.LBB0_481:                              # %.lr.ph.i.i.i.preheader
	movq	56(%rsp), %rbx                  # 8-byte Reload
	jmp	.LBB0_483
	.p2align	4, 0x90
.LBB0_482:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB0_483 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r12
	je	.LBB0_479
.LBB0_483:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB0_482
# %bb.484:                              #   in Loop: Header=BB0_483 Depth=1
	callq	_ZdlPv
	jmp	.LBB0_482
.LBB0_485:                              # %.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp
.Ltmp283:
	movq	%rax, %rbx
	jmp	.LBB0_494
.LBB0_486:
.Ltmp225:
	movq	%rdx, %r14
	movq	%rax, %rbx
.Ltmp226:
	callq	__cxa_end_catch
.Ltmp227:
# %bb.487:                              # %.body557
	movq	56(%rsp), %rdi                  # 8-byte Reload
	callq	_ZdlPv
.LBB0_488:                              # %.body211
	cmpl	$2, %r14d
	jne	.LBB0_494
# %bb.489:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	(%rax), %rcx
	movq	%rax, %rdi
	callq	*16(%rcx)
.Ltmp287:
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp288:
# %bb.490:
.Ltmp289:
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp290:
# %bb.491:                              # %_ZNSolsEPFRSoS_E.exit
.Ltmp291:
	leaq	392(%rsp), %rsi
	movl	$_ZSt4cerr, %edi
	callq	_ZN8argparselsERSoRKNS_14ArgumentParserE
.Ltmp292:
# %bb.492:
	movl	$1, %edi
	callq	exit
.LBB0_493:
.Ltmp293:
	movq	%rax, %rbx
.Ltmp294:
	callq	__cxa_end_catch
.Ltmp295:
.LBB0_494:
	leaq	392(%rsp), %rdi
	callq	_ZN8argparse14ArgumentParserD2Ev
.LBB0_495:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB0_496:
.Ltmp296:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB0_497:
.Ltmp228:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end0:
	.size	_Z12parse_inputsiPPc, .Lfunc_end0-_Z12parse_inputsiPPc
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table0:
.Lexception0:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase0-.Lttbaseref0
.Lttbaseref0:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end0-.Lcst_begin0
.Lcst_begin0:
	.uleb128 .Ltmp0-.Lfunc_begin0           # >> Call Site 1 <<
	.uleb128 .Ltmp1-.Ltmp0                  #   Call between .Ltmp0 and .Ltmp1
	.uleb128 .Ltmp2-.Lfunc_begin0           #     jumps to .Ltmp2
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp3-.Lfunc_begin0           # >> Call Site 2 <<
	.uleb128 .Ltmp4-.Ltmp3                  #   Call between .Ltmp3 and .Ltmp4
	.uleb128 .Ltmp5-.Lfunc_begin0           #     jumps to .Ltmp5
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp6-.Lfunc_begin0           # >> Call Site 3 <<
	.uleb128 .Ltmp7-.Ltmp6                  #   Call between .Ltmp6 and .Ltmp7
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp8-.Lfunc_begin0           # >> Call Site 4 <<
	.uleb128 .Ltmp9-.Ltmp8                  #   Call between .Ltmp8 and .Ltmp9
	.uleb128 .Ltmp10-.Lfunc_begin0          #     jumps to .Ltmp10
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp11-.Lfunc_begin0          # >> Call Site 5 <<
	.uleb128 .Ltmp12-.Ltmp11                #   Call between .Ltmp11 and .Ltmp12
	.uleb128 .Ltmp13-.Lfunc_begin0          #     jumps to .Ltmp13
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp14-.Lfunc_begin0          # >> Call Site 6 <<
	.uleb128 .Ltmp15-.Ltmp14                #   Call between .Ltmp14 and .Ltmp15
	.uleb128 .Ltmp16-.Lfunc_begin0          #     jumps to .Ltmp16
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp23-.Lfunc_begin0          # >> Call Site 7 <<
	.uleb128 .Ltmp24-.Ltmp23                #   Call between .Ltmp23 and .Ltmp24
	.uleb128 .Ltmp25-.Lfunc_begin0          #     jumps to .Ltmp25
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp24-.Lfunc_begin0          # >> Call Site 8 <<
	.uleb128 .Ltmp26-.Ltmp24                #   Call between .Ltmp24 and .Ltmp26
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp26-.Lfunc_begin0          # >> Call Site 9 <<
	.uleb128 .Ltmp27-.Ltmp26                #   Call between .Ltmp26 and .Ltmp27
	.uleb128 .Ltmp28-.Lfunc_begin0          #     jumps to .Ltmp28
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp29-.Lfunc_begin0          # >> Call Site 10 <<
	.uleb128 .Ltmp30-.Ltmp29                #   Call between .Ltmp29 and .Ltmp30
	.uleb128 .Ltmp31-.Lfunc_begin0          #     jumps to .Ltmp31
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp32-.Lfunc_begin0          # >> Call Site 11 <<
	.uleb128 .Ltmp33-.Ltmp32                #   Call between .Ltmp32 and .Ltmp33
	.uleb128 .Ltmp34-.Lfunc_begin0          #     jumps to .Ltmp34
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp38-.Lfunc_begin0          # >> Call Site 12 <<
	.uleb128 .Ltmp39-.Ltmp38                #   Call between .Ltmp38 and .Ltmp39
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp40-.Lfunc_begin0          # >> Call Site 13 <<
	.uleb128 .Ltmp41-.Ltmp40                #   Call between .Ltmp40 and .Ltmp41
	.uleb128 .Ltmp42-.Lfunc_begin0          #     jumps to .Ltmp42
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp43-.Lfunc_begin0          # >> Call Site 14 <<
	.uleb128 .Ltmp44-.Ltmp43                #   Call between .Ltmp43 and .Ltmp44
	.uleb128 .Ltmp45-.Lfunc_begin0          #     jumps to .Ltmp45
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp46-.Lfunc_begin0          # >> Call Site 15 <<
	.uleb128 .Ltmp47-.Ltmp46                #   Call between .Ltmp46 and .Ltmp47
	.uleb128 .Ltmp48-.Lfunc_begin0          #     jumps to .Ltmp48
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp55-.Lfunc_begin0          # >> Call Site 16 <<
	.uleb128 .Ltmp56-.Ltmp55                #   Call between .Ltmp55 and .Ltmp56
	.uleb128 .Ltmp57-.Lfunc_begin0          #     jumps to .Ltmp57
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp58-.Lfunc_begin0          # >> Call Site 17 <<
	.uleb128 .Ltmp59-.Ltmp58                #   Call between .Ltmp58 and .Ltmp59
	.uleb128 .Ltmp60-.Lfunc_begin0          #     jumps to .Ltmp60
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp61-.Lfunc_begin0          # >> Call Site 18 <<
	.uleb128 .Ltmp62-.Ltmp61                #   Call between .Ltmp61 and .Ltmp62
	.uleb128 .Ltmp63-.Lfunc_begin0          #     jumps to .Ltmp63
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp67-.Lfunc_begin0          # >> Call Site 19 <<
	.uleb128 .Ltmp68-.Ltmp67                #   Call between .Ltmp67 and .Ltmp68
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp69-.Lfunc_begin0          # >> Call Site 20 <<
	.uleb128 .Ltmp70-.Ltmp69                #   Call between .Ltmp69 and .Ltmp70
	.uleb128 .Ltmp71-.Lfunc_begin0          #     jumps to .Ltmp71
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp72-.Lfunc_begin0          # >> Call Site 21 <<
	.uleb128 .Ltmp73-.Ltmp72                #   Call between .Ltmp72 and .Ltmp73
	.uleb128 .Ltmp74-.Lfunc_begin0          #     jumps to .Ltmp74
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp75-.Lfunc_begin0          # >> Call Site 22 <<
	.uleb128 .Ltmp76-.Ltmp75                #   Call between .Ltmp75 and .Ltmp76
	.uleb128 .Ltmp77-.Lfunc_begin0          #     jumps to .Ltmp77
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp84-.Lfunc_begin0          # >> Call Site 23 <<
	.uleb128 .Ltmp85-.Ltmp84                #   Call between .Ltmp84 and .Ltmp85
	.uleb128 .Ltmp86-.Lfunc_begin0          #     jumps to .Ltmp86
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp87-.Lfunc_begin0          # >> Call Site 24 <<
	.uleb128 .Ltmp88-.Ltmp87                #   Call between .Ltmp87 and .Ltmp88
	.uleb128 .Ltmp89-.Lfunc_begin0          #     jumps to .Ltmp89
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp90-.Lfunc_begin0          # >> Call Site 25 <<
	.uleb128 .Ltmp91-.Ltmp90                #   Call between .Ltmp90 and .Ltmp91
	.uleb128 .Ltmp92-.Lfunc_begin0          #     jumps to .Ltmp92
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp96-.Lfunc_begin0          # >> Call Site 26 <<
	.uleb128 .Ltmp97-.Ltmp96                #   Call between .Ltmp96 and .Ltmp97
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp98-.Lfunc_begin0          # >> Call Site 27 <<
	.uleb128 .Ltmp99-.Ltmp98                #   Call between .Ltmp98 and .Ltmp99
	.uleb128 .Ltmp100-.Lfunc_begin0         #     jumps to .Ltmp100
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp101-.Lfunc_begin0         # >> Call Site 28 <<
	.uleb128 .Ltmp102-.Ltmp101              #   Call between .Ltmp101 and .Ltmp102
	.uleb128 .Ltmp103-.Lfunc_begin0         #     jumps to .Ltmp103
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp104-.Lfunc_begin0         # >> Call Site 29 <<
	.uleb128 .Ltmp105-.Ltmp104              #   Call between .Ltmp104 and .Ltmp105
	.uleb128 .Ltmp106-.Lfunc_begin0         #     jumps to .Ltmp106
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp113-.Lfunc_begin0         # >> Call Site 30 <<
	.uleb128 .Ltmp114-.Ltmp113              #   Call between .Ltmp113 and .Ltmp114
	.uleb128 .Ltmp115-.Lfunc_begin0         #     jumps to .Ltmp115
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp116-.Lfunc_begin0         # >> Call Site 31 <<
	.uleb128 .Ltmp117-.Ltmp116              #   Call between .Ltmp116 and .Ltmp117
	.uleb128 .Ltmp118-.Lfunc_begin0         #     jumps to .Ltmp118
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp119-.Lfunc_begin0         # >> Call Site 32 <<
	.uleb128 .Ltmp120-.Ltmp119              #   Call between .Ltmp119 and .Ltmp120
	.uleb128 .Ltmp121-.Lfunc_begin0         #     jumps to .Ltmp121
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp125-.Lfunc_begin0         # >> Call Site 33 <<
	.uleb128 .Ltmp126-.Ltmp125              #   Call between .Ltmp125 and .Ltmp126
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp127-.Lfunc_begin0         # >> Call Site 34 <<
	.uleb128 .Ltmp128-.Ltmp127              #   Call between .Ltmp127 and .Ltmp128
	.uleb128 .Ltmp129-.Lfunc_begin0         #     jumps to .Ltmp129
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp130-.Lfunc_begin0         # >> Call Site 35 <<
	.uleb128 .Ltmp131-.Ltmp130              #   Call between .Ltmp130 and .Ltmp131
	.uleb128 .Ltmp132-.Lfunc_begin0         #     jumps to .Ltmp132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp133-.Lfunc_begin0         # >> Call Site 36 <<
	.uleb128 .Ltmp134-.Ltmp133              #   Call between .Ltmp133 and .Ltmp134
	.uleb128 .Ltmp135-.Lfunc_begin0         #     jumps to .Ltmp135
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp142-.Lfunc_begin0         # >> Call Site 37 <<
	.uleb128 .Ltmp143-.Ltmp142              #   Call between .Ltmp142 and .Ltmp143
	.uleb128 .Ltmp144-.Lfunc_begin0         #     jumps to .Ltmp144
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp145-.Lfunc_begin0         # >> Call Site 38 <<
	.uleb128 .Ltmp146-.Ltmp145              #   Call between .Ltmp145 and .Ltmp146
	.uleb128 .Ltmp147-.Lfunc_begin0         #     jumps to .Ltmp147
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp148-.Lfunc_begin0         # >> Call Site 39 <<
	.uleb128 .Ltmp149-.Ltmp148              #   Call between .Ltmp148 and .Ltmp149
	.uleb128 .Ltmp150-.Lfunc_begin0         #     jumps to .Ltmp150
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp154-.Lfunc_begin0         # >> Call Site 40 <<
	.uleb128 .Ltmp155-.Ltmp154              #   Call between .Ltmp154 and .Ltmp155
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp156-.Lfunc_begin0         # >> Call Site 41 <<
	.uleb128 .Ltmp157-.Ltmp156              #   Call between .Ltmp156 and .Ltmp157
	.uleb128 .Ltmp158-.Lfunc_begin0         #     jumps to .Ltmp158
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp159-.Lfunc_begin0         # >> Call Site 42 <<
	.uleb128 .Ltmp160-.Ltmp159              #   Call between .Ltmp159 and .Ltmp160
	.uleb128 .Ltmp161-.Lfunc_begin0         #     jumps to .Ltmp161
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp162-.Lfunc_begin0         # >> Call Site 43 <<
	.uleb128 .Ltmp163-.Ltmp162              #   Call between .Ltmp162 and .Ltmp163
	.uleb128 .Ltmp164-.Lfunc_begin0         #     jumps to .Ltmp164
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp171-.Lfunc_begin0         # >> Call Site 44 <<
	.uleb128 .Ltmp172-.Ltmp171              #   Call between .Ltmp171 and .Ltmp172
	.uleb128 .Ltmp173-.Lfunc_begin0         #     jumps to .Ltmp173
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp174-.Lfunc_begin0         # >> Call Site 45 <<
	.uleb128 .Ltmp175-.Ltmp174              #   Call between .Ltmp174 and .Ltmp175
	.uleb128 .Ltmp176-.Lfunc_begin0         #     jumps to .Ltmp176
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp177-.Lfunc_begin0         # >> Call Site 46 <<
	.uleb128 .Ltmp178-.Ltmp177              #   Call between .Ltmp177 and .Ltmp178
	.uleb128 .Ltmp179-.Lfunc_begin0         #     jumps to .Ltmp179
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp183-.Lfunc_begin0         # >> Call Site 47 <<
	.uleb128 .Ltmp184-.Ltmp183              #   Call between .Ltmp183 and .Ltmp184
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp185-.Lfunc_begin0         # >> Call Site 48 <<
	.uleb128 .Ltmp186-.Ltmp185              #   Call between .Ltmp185 and .Ltmp186
	.uleb128 .Ltmp187-.Lfunc_begin0         #     jumps to .Ltmp187
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp188-.Lfunc_begin0         # >> Call Site 49 <<
	.uleb128 .Ltmp189-.Ltmp188              #   Call between .Ltmp188 and .Ltmp189
	.uleb128 .Ltmp190-.Lfunc_begin0         #     jumps to .Ltmp190
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp191-.Lfunc_begin0         # >> Call Site 50 <<
	.uleb128 .Ltmp192-.Ltmp191              #   Call between .Ltmp191 and .Ltmp192
	.uleb128 .Ltmp193-.Lfunc_begin0         #     jumps to .Ltmp193
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp200-.Lfunc_begin0         # >> Call Site 51 <<
	.uleb128 .Ltmp201-.Ltmp200              #   Call between .Ltmp200 and .Ltmp201
	.uleb128 .Ltmp202-.Lfunc_begin0         #     jumps to .Ltmp202
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp201-.Lfunc_begin0         # >> Call Site 52 <<
	.uleb128 .Ltmp203-.Ltmp201              #   Call between .Ltmp201 and .Ltmp203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp203-.Lfunc_begin0         # >> Call Site 53 <<
	.uleb128 .Ltmp204-.Ltmp203              #   Call between .Ltmp203 and .Ltmp204
	.uleb128 .Ltmp205-.Lfunc_begin0         #     jumps to .Ltmp205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp206-.Lfunc_begin0         # >> Call Site 54 <<
	.uleb128 .Ltmp207-.Ltmp206              #   Call between .Ltmp206 and .Ltmp207
	.uleb128 .Ltmp208-.Lfunc_begin0         #     jumps to .Ltmp208
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp209-.Lfunc_begin0         # >> Call Site 55 <<
	.uleb128 .Ltmp210-.Ltmp209              #   Call between .Ltmp209 and .Ltmp210
	.uleb128 .Ltmp211-.Lfunc_begin0         #     jumps to .Ltmp211
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp212-.Lfunc_begin0         # >> Call Site 56 <<
	.uleb128 .Ltmp213-.Ltmp212              #   Call between .Ltmp212 and .Ltmp213
	.uleb128 .Ltmp214-.Lfunc_begin0         #     jumps to .Ltmp214
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp215-.Lfunc_begin0         # >> Call Site 57 <<
	.uleb128 .Ltmp216-.Ltmp215              #   Call between .Ltmp215 and .Ltmp216
	.uleb128 .Ltmp286-.Lfunc_begin0         #     jumps to .Ltmp286
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp217-.Lfunc_begin0         # >> Call Site 58 <<
	.uleb128 .Ltmp218-.Ltmp217              #   Call between .Ltmp217 and .Ltmp218
	.uleb128 .Ltmp219-.Lfunc_begin0         #     jumps to .Ltmp219
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp218-.Lfunc_begin0         # >> Call Site 59 <<
	.uleb128 .Ltmp229-.Ltmp218              #   Call between .Ltmp218 and .Ltmp229
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp229-.Lfunc_begin0         # >> Call Site 60 <<
	.uleb128 .Ltmp230-.Ltmp229              #   Call between .Ltmp229 and .Ltmp230
	.uleb128 .Ltmp231-.Lfunc_begin0         #     jumps to .Ltmp231
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp232-.Lfunc_begin0         # >> Call Site 61 <<
	.uleb128 .Ltmp259-.Ltmp232              #   Call between .Ltmp232 and .Ltmp259
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp220-.Lfunc_begin0         # >> Call Site 62 <<
	.uleb128 .Ltmp221-.Ltmp220              #   Call between .Ltmp220 and .Ltmp221
	.uleb128 .Ltmp222-.Lfunc_begin0         #     jumps to .Ltmp222
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp221-.Lfunc_begin0         # >> Call Site 63 <<
	.uleb128 .Ltmp35-.Ltmp221               #   Call between .Ltmp221 and .Ltmp35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp35-.Lfunc_begin0          # >> Call Site 64 <<
	.uleb128 .Ltmp36-.Ltmp35                #   Call between .Ltmp35 and .Ltmp36
	.uleb128 .Ltmp37-.Lfunc_begin0          #     jumps to .Ltmp37
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp36-.Lfunc_begin0          # >> Call Site 65 <<
	.uleb128 .Ltmp64-.Ltmp36                #   Call between .Ltmp36 and .Ltmp64
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp64-.Lfunc_begin0          # >> Call Site 66 <<
	.uleb128 .Ltmp65-.Ltmp64                #   Call between .Ltmp64 and .Ltmp65
	.uleb128 .Ltmp66-.Lfunc_begin0          #     jumps to .Ltmp66
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp65-.Lfunc_begin0          # >> Call Site 67 <<
	.uleb128 .Ltmp93-.Ltmp65                #   Call between .Ltmp65 and .Ltmp93
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp93-.Lfunc_begin0          # >> Call Site 68 <<
	.uleb128 .Ltmp94-.Ltmp93                #   Call between .Ltmp93 and .Ltmp94
	.uleb128 .Ltmp95-.Lfunc_begin0          #     jumps to .Ltmp95
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp94-.Lfunc_begin0          # >> Call Site 69 <<
	.uleb128 .Ltmp122-.Ltmp94               #   Call between .Ltmp94 and .Ltmp122
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp122-.Lfunc_begin0         # >> Call Site 70 <<
	.uleb128 .Ltmp123-.Ltmp122              #   Call between .Ltmp122 and .Ltmp123
	.uleb128 .Ltmp124-.Lfunc_begin0         #     jumps to .Ltmp124
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp123-.Lfunc_begin0         # >> Call Site 71 <<
	.uleb128 .Ltmp151-.Ltmp123              #   Call between .Ltmp123 and .Ltmp151
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp151-.Lfunc_begin0         # >> Call Site 72 <<
	.uleb128 .Ltmp152-.Ltmp151              #   Call between .Ltmp151 and .Ltmp152
	.uleb128 .Ltmp153-.Lfunc_begin0         #     jumps to .Ltmp153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp152-.Lfunc_begin0         # >> Call Site 73 <<
	.uleb128 .Ltmp180-.Ltmp152              #   Call between .Ltmp152 and .Ltmp180
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp180-.Lfunc_begin0         # >> Call Site 74 <<
	.uleb128 .Ltmp181-.Ltmp180              #   Call between .Ltmp180 and .Ltmp181
	.uleb128 .Ltmp182-.Lfunc_begin0         #     jumps to .Ltmp182
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp284-.Lfunc_begin0         # >> Call Site 75 <<
	.uleb128 .Ltmp285-.Ltmp284              #   Call between .Ltmp284 and .Ltmp285
	.uleb128 .Ltmp286-.Lfunc_begin0         #     jumps to .Ltmp286
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp285-.Lfunc_begin0         # >> Call Site 76 <<
	.uleb128 .Ltmp278-.Ltmp285              #   Call between .Ltmp285 and .Ltmp278
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp278-.Lfunc_begin0         # >> Call Site 77 <<
	.uleb128 .Ltmp279-.Ltmp278              #   Call between .Ltmp278 and .Ltmp279
	.uleb128 .Ltmp280-.Lfunc_begin0         #     jumps to .Ltmp280
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp279-.Lfunc_begin0         # >> Call Site 78 <<
	.uleb128 .Ltmp275-.Ltmp279              #   Call between .Ltmp279 and .Ltmp275
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp275-.Lfunc_begin0         # >> Call Site 79 <<
	.uleb128 .Ltmp276-.Ltmp275              #   Call between .Ltmp275 and .Ltmp276
	.uleb128 .Ltmp277-.Lfunc_begin0         #     jumps to .Ltmp277
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp276-.Lfunc_begin0         # >> Call Site 80 <<
	.uleb128 .Ltmp272-.Ltmp276              #   Call between .Ltmp276 and .Ltmp272
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp272-.Lfunc_begin0         # >> Call Site 81 <<
	.uleb128 .Ltmp273-.Ltmp272              #   Call between .Ltmp272 and .Ltmp273
	.uleb128 .Ltmp274-.Lfunc_begin0         #     jumps to .Ltmp274
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp273-.Lfunc_begin0         # >> Call Site 82 <<
	.uleb128 .Ltmp269-.Ltmp273              #   Call between .Ltmp273 and .Ltmp269
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp269-.Lfunc_begin0         # >> Call Site 83 <<
	.uleb128 .Ltmp270-.Ltmp269              #   Call between .Ltmp269 and .Ltmp270
	.uleb128 .Ltmp271-.Lfunc_begin0         #     jumps to .Ltmp271
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp270-.Lfunc_begin0         # >> Call Site 84 <<
	.uleb128 .Ltmp266-.Ltmp270              #   Call between .Ltmp270 and .Ltmp266
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp266-.Lfunc_begin0         # >> Call Site 85 <<
	.uleb128 .Ltmp267-.Ltmp266              #   Call between .Ltmp266 and .Ltmp267
	.uleb128 .Ltmp268-.Lfunc_begin0         #     jumps to .Ltmp268
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp267-.Lfunc_begin0         # >> Call Site 86 <<
	.uleb128 .Ltmp263-.Ltmp267              #   Call between .Ltmp267 and .Ltmp263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp263-.Lfunc_begin0         # >> Call Site 87 <<
	.uleb128 .Ltmp264-.Ltmp263              #   Call between .Ltmp263 and .Ltmp264
	.uleb128 .Ltmp265-.Lfunc_begin0         #     jumps to .Ltmp265
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp264-.Lfunc_begin0         # >> Call Site 88 <<
	.uleb128 .Ltmp260-.Ltmp264              #   Call between .Ltmp264 and .Ltmp260
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp260-.Lfunc_begin0         # >> Call Site 89 <<
	.uleb128 .Ltmp261-.Ltmp260              #   Call between .Ltmp260 and .Ltmp261
	.uleb128 .Ltmp262-.Lfunc_begin0         #     jumps to .Ltmp262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp281-.Lfunc_begin0         # >> Call Site 90 <<
	.uleb128 .Ltmp282-.Ltmp281              #   Call between .Ltmp281 and .Ltmp282
	.uleb128 .Ltmp283-.Lfunc_begin0         #     jumps to .Ltmp283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp282-.Lfunc_begin0         # >> Call Site 91 <<
	.uleb128 .Ltmp194-.Ltmp282              #   Call between .Ltmp282 and .Ltmp194
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp194-.Lfunc_begin0         # >> Call Site 92 <<
	.uleb128 .Ltmp195-.Ltmp194              #   Call between .Ltmp194 and .Ltmp195
	.uleb128 .Ltmp196-.Lfunc_begin0         #     jumps to .Ltmp196
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp197-.Lfunc_begin0         # >> Call Site 93 <<
	.uleb128 .Ltmp198-.Ltmp197              #   Call between .Ltmp197 and .Ltmp198
	.uleb128 .Ltmp199-.Lfunc_begin0         #     jumps to .Ltmp199
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp198-.Lfunc_begin0         # >> Call Site 94 <<
	.uleb128 .Ltmp165-.Ltmp198              #   Call between .Ltmp198 and .Ltmp165
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp165-.Lfunc_begin0         # >> Call Site 95 <<
	.uleb128 .Ltmp166-.Ltmp165              #   Call between .Ltmp165 and .Ltmp166
	.uleb128 .Ltmp167-.Lfunc_begin0         #     jumps to .Ltmp167
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp168-.Lfunc_begin0         # >> Call Site 96 <<
	.uleb128 .Ltmp169-.Ltmp168              #   Call between .Ltmp168 and .Ltmp169
	.uleb128 .Ltmp170-.Lfunc_begin0         #     jumps to .Ltmp170
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp169-.Lfunc_begin0         # >> Call Site 97 <<
	.uleb128 .Ltmp136-.Ltmp169              #   Call between .Ltmp169 and .Ltmp136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp136-.Lfunc_begin0         # >> Call Site 98 <<
	.uleb128 .Ltmp137-.Ltmp136              #   Call between .Ltmp136 and .Ltmp137
	.uleb128 .Ltmp138-.Lfunc_begin0         #     jumps to .Ltmp138
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp139-.Lfunc_begin0         # >> Call Site 99 <<
	.uleb128 .Ltmp140-.Ltmp139              #   Call between .Ltmp139 and .Ltmp140
	.uleb128 .Ltmp141-.Lfunc_begin0         #     jumps to .Ltmp141
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp140-.Lfunc_begin0         # >> Call Site 100 <<
	.uleb128 .Ltmp107-.Ltmp140              #   Call between .Ltmp140 and .Ltmp107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp107-.Lfunc_begin0         # >> Call Site 101 <<
	.uleb128 .Ltmp108-.Ltmp107              #   Call between .Ltmp107 and .Ltmp108
	.uleb128 .Ltmp109-.Lfunc_begin0         #     jumps to .Ltmp109
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp110-.Lfunc_begin0         # >> Call Site 102 <<
	.uleb128 .Ltmp111-.Ltmp110              #   Call between .Ltmp110 and .Ltmp111
	.uleb128 .Ltmp112-.Lfunc_begin0         #     jumps to .Ltmp112
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp111-.Lfunc_begin0         # >> Call Site 103 <<
	.uleb128 .Ltmp78-.Ltmp111               #   Call between .Ltmp111 and .Ltmp78
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp78-.Lfunc_begin0          # >> Call Site 104 <<
	.uleb128 .Ltmp79-.Ltmp78                #   Call between .Ltmp78 and .Ltmp79
	.uleb128 .Ltmp80-.Lfunc_begin0          #     jumps to .Ltmp80
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp81-.Lfunc_begin0          # >> Call Site 105 <<
	.uleb128 .Ltmp82-.Ltmp81                #   Call between .Ltmp81 and .Ltmp82
	.uleb128 .Ltmp83-.Lfunc_begin0          #     jumps to .Ltmp83
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp82-.Lfunc_begin0          # >> Call Site 106 <<
	.uleb128 .Ltmp49-.Ltmp82                #   Call between .Ltmp82 and .Ltmp49
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp49-.Lfunc_begin0          # >> Call Site 107 <<
	.uleb128 .Ltmp50-.Ltmp49                #   Call between .Ltmp49 and .Ltmp50
	.uleb128 .Ltmp51-.Lfunc_begin0          #     jumps to .Ltmp51
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp52-.Lfunc_begin0          # >> Call Site 108 <<
	.uleb128 .Ltmp53-.Ltmp52                #   Call between .Ltmp52 and .Ltmp53
	.uleb128 .Ltmp54-.Lfunc_begin0          #     jumps to .Ltmp54
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp53-.Lfunc_begin0          # >> Call Site 109 <<
	.uleb128 .Ltmp17-.Ltmp53                #   Call between .Ltmp53 and .Ltmp17
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp17-.Lfunc_begin0          # >> Call Site 110 <<
	.uleb128 .Ltmp18-.Ltmp17                #   Call between .Ltmp17 and .Ltmp18
	.uleb128 .Ltmp19-.Lfunc_begin0          #     jumps to .Ltmp19
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp20-.Lfunc_begin0          # >> Call Site 111 <<
	.uleb128 .Ltmp21-.Ltmp20                #   Call between .Ltmp20 and .Ltmp21
	.uleb128 .Ltmp22-.Lfunc_begin0          #     jumps to .Ltmp22
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp21-.Lfunc_begin0          # >> Call Site 112 <<
	.uleb128 .Ltmp223-.Ltmp21               #   Call between .Ltmp21 and .Ltmp223
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp223-.Lfunc_begin0         # >> Call Site 113 <<
	.uleb128 .Ltmp224-.Ltmp223              #   Call between .Ltmp223 and .Ltmp224
	.uleb128 .Ltmp225-.Lfunc_begin0         #     jumps to .Ltmp225
	.byte	3                               #   On action: 2
	.uleb128 .Ltmp226-.Lfunc_begin0         # >> Call Site 114 <<
	.uleb128 .Ltmp227-.Ltmp226              #   Call between .Ltmp226 and .Ltmp227
	.uleb128 .Ltmp228-.Lfunc_begin0         #     jumps to .Ltmp228
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp227-.Lfunc_begin0         # >> Call Site 115 <<
	.uleb128 .Ltmp287-.Ltmp227              #   Call between .Ltmp227 and .Ltmp287
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp287-.Lfunc_begin0         # >> Call Site 116 <<
	.uleb128 .Ltmp292-.Ltmp287              #   Call between .Ltmp287 and .Ltmp292
	.uleb128 .Ltmp293-.Lfunc_begin0         #     jumps to .Ltmp293
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp294-.Lfunc_begin0         # >> Call Site 117 <<
	.uleb128 .Ltmp295-.Ltmp294              #   Call between .Ltmp294 and .Ltmp295
	.uleb128 .Ltmp296-.Lfunc_begin0         #     jumps to .Ltmp296
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp295-.Lfunc_begin0         # >> Call Site 118 <<
	.uleb128 .Lfunc_end0-.Ltmp295           #   Call between .Ltmp295 and .Lfunc_end0
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end0:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	2                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 1
	.byte	1                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	_ZTISt9exception                # TypeInfo 2
	.long	0                               # TypeInfo 1
.Lttbase0:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	leaq	16(%rdi), %r12
	movq	%r12, (%rdi)
	testq	%rsi, %rsi
	je	.LBB1_8
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen
	movq	%rax, %r15
	movq	%rax, (%rsp)
	cmpq	$16, %rax
	jb	.LBB1_3
# %bb.2:                                # %.noexc8
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, %r12
	movq	%rax, (%rbx)
	movq	(%rsp), %rax
	movq	%rax, 16(%rbx)
.LBB1_3:                                # %._crit_edge.i.i.i
	testq	%r15, %r15
	je	.LBB1_7
# %bb.4:                                # %._crit_edge.i.i.i
	cmpq	$1, %r15
	jne	.LBB1_6
# %bb.5:
	movzbl	(%r14), %eax
	movb	%al, (%r12)
	jmp	.LBB1_7
.LBB1_6:
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB1_7:
	movq	(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB1_8:                                # %.noexc
	.cfi_def_cfa_offset 48
	movl	$.L.str.33, %edi
	callq	_ZSt19__throw_logic_errorPKc
.Lfunc_end1:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_, .Lfunc_end1-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo,"axG",@progbits,_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo,comdat
	.weak	_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo # -- Begin function _ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo
	.p2align	4, 0x90
	.type	_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo,@function
_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo: # @_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo
.Lfunc_begin1:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception1
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$216, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, 136(%rsp)                  # 8-byte Spill
	movl	%ecx, %ebp
	movq	%rdi, %rbx
	addq	$16, %rdi
	movq	%rdi, (%rbx)
	movq	(%rsi), %rcx
	leaq	16(%rsi), %rax
	cmpq	%rax, %rcx
	je	.LBB2_2
# %bb.1:
	movq	%rcx, (%rbx)
	movq	(%rax), %rcx
	movq	%rcx, 16(%rbx)
	jmp	.LBB2_3
.LBB2_2:
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rdi)
.LBB2_3:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rsi), %rcx
	movq	%rcx, 8(%rbx)
	movq	%rax, (%rsi)
	movq	$0, 8(%rsi)
	movb	$0, 16(%rsi)
	leaq	48(%rbx), %rsi
	movq	%rsi, 32(%rbx)
	movq	(%rdx), %rcx
	leaq	16(%rdx), %rax
	cmpq	%rax, %rcx
	movq	%rdi, 208(%rsp)                 # 8-byte Spill
	movq	%rsi, 200(%rsp)                 # 8-byte Spill
	je	.LBB2_5
# %bb.4:
	movq	%rcx, 32(%rbx)
	movq	(%rax), %rcx
	movq	%rcx, 48(%rbx)
	jmp	.LBB2_6
.LBB2_5:
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rsi)
.LBB2_6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit30
	movq	8(%rdx), %rcx
	movq	%rcx, 40(%rbx)
	movq	%rax, (%rdx)
	movq	$0, 8(%rdx)
	movb	$0, 16(%rdx)
	leaq	80(%rbx), %rax
	movq	%rax, 192(%rsp)                 # 8-byte Spill
	movq	%rax, 64(%rbx)
	movq	$0, 72(%rbx)
	movb	$0, 80(%rbx)
	leaq	112(%rbx), %rax
	movq	%rax, 184(%rsp)                 # 8-byte Spill
	movq	%rax, 96(%rbx)
	movq	$0, 104(%rbx)
	movb	$0, 112(%rbx)
	movb	%r8b, 128(%rbx)
	leaq	152(%rbx), %rax
	movq	%rax, 176(%rsp)                 # 8-byte Spill
	movq	%rax, 136(%rbx)
	movw	$45, 152(%rbx)
	movq	$1, 144(%rbx)
	leaq	184(%rbx), %rax
	movq	%rax, 168(%rsp)                 # 8-byte Spill
	movq	%rax, 168(%rbx)
	movw	$61, 184(%rbx)
	movq	$1, 176(%rbx)
	movb	$0, 200(%rbx)
	leaq	208(%rbx), %rax
	movq	%rax, 216(%rbx)
	movq	%rax, 160(%rsp)                 # 8-byte Spill
	movq	%rax, 208(%rbx)
	movq	$0, 224(%rbx)
	leaq	232(%rbx), %rax
	movq	%rax, 240(%rbx)
	movq	%rax, 152(%rsp)                 # 8-byte Spill
	movq	%rax, 232(%rbx)
	movq	$0, 248(%rbx)
	leaq	264(%rbx), %rax
	movl	$0, 264(%rbx)
	movq	$0, 272(%rbx)
	movq	%rax, 280(%rbx)
	movq	%rax, 288(%rbx)
	movq	$0, 296(%rbx)
	leaq	304(%rbx), %r15
	leaq	320(%rbx), %r14
	movq	%r14, 304(%rbx)
	movq	(%rbx), %r12
	movq	8(%rbx), %r13
	movq	%r13, 56(%rsp)
	movq	%r14, %rax
	cmpq	$16, %r13
	jb	.LBB2_9
# %bb.7:                                # %.noexc6.i
.Ltmp297:
	leaq	56(%rsp), %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp298:
# %bb.8:                                # %.noexc36
	movq	%rax, (%r15)
	movq	56(%rsp), %rcx
	movq	%rcx, (%r14)
.LBB2_9:                                # %._crit_edge.i.i.i.i35
	testq	%r13, %r13
	je	.LBB2_13
# %bb.10:                               # %._crit_edge.i.i.i.i35
	cmpq	$1, %r13
	jne	.LBB2_12
# %bb.11:
	movzbl	(%r12), %ecx
	movb	%cl, (%rax)
	jmp	.LBB2_13
.LBB2_12:
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB2_13:
	movq	%r15, 144(%rsp)                 # 8-byte Spill
	movq	56(%rsp), %rax
	movq	%rax, 312(%rbx)
	movq	304(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	leaq	336(%rbx), %r15
	movq	%r15, 344(%rbx)
	movq	%r15, 336(%rbx)
	movq	$0, 352(%rbx)
	leaq	368(%rbx), %rax
	movl	$0, 368(%rbx)
	movq	$0, 376(%rbx)
	movq	%rax, 384(%rbx)
	movq	%rax, 392(%rbx)
	movq	$0, 400(%rbx)
	leaq	416(%rbx), %rax
	movl	$0, 416(%rbx)
	movq	$0, 424(%rbx)
	movq	%rax, 432(%rbx)
	movq	%rax, 440(%rbx)
	xorps	%xmm0, %xmm0
	movups	%xmm0, 448(%rbx)
	movups	%xmm0, 464(%rbx)
	movb	$0, 480(%rbx)
	testb	$1, %bpl
	je	.LBB2_41
# %bb.14:
.Ltmp300:
	movl	$.L.str.27, %esi
	movl	$.L.str.28, %edx
	movq	%rbx, %rdi
	callq	_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_
.Ltmp301:
# %bb.15:
	movq	%rax, %r12
	movq	%r14, 16(%rsp)                  # 8-byte Spill
	movq	%rbx, 56(%rsp)
	movq	136(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 64(%rsp)
	leaq	240(%r12), %rdi
.Ltmp302:
	leaq	56(%rsp), %rsi
	callq	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
.Ltmp303:
# %bb.16:                               # %_ZN8argparse8Argument6actionIZNS_14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS_17default_argumentsEbRSoEUlRKT_E_JEEENSt9enable_ifIXsr3stdE14is_invocable_vISB_DpT0_KS8_EERS0_E4typeEOSB_DpOSG_.exit
	movl	%ebp, %r14d
	movb	$0, 7(%rsp)
.Ltmp305:
	leaq	7(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN8argparse8Argument13default_valueIbEERS0_OT_
.Ltmp306:
# %bb.17:                               # %.noexc8.i38
	movq	%rax, %r13
	leaq	40(%rsp), %rbp
	movq	%rbp, 24(%rsp)
	movq	$28, 8(%rsp)
.Ltmp308:
	leaq	24(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp309:
# %bb.18:                               # %.noexc40
	movq	%r13, %r12
	movq	%rax, 24(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 40(%rsp)
	movups	.L.str.29+12(%rip), %xmm0
	movups	%xmm0, 12(%rax)
	movups	.L.str.29(%rip), %xmm0
	movups	%xmm0, (%rax)
	movq	%rcx, 32(%rsp)
	movq	24(%rsp), %rax
	movb	$0, (%rax,%rcx)
	movq	24(%rsp), %rcx
	cmpq	%rbp, %rcx
	je	.LBB2_22
# %bb.19:
	leaq	56(%r13), %rdx
	movq	40(%r12), %rax
	cmpq	%rdx, %rax
	movl	%r14d, %ebp
	je	.LBB2_25
# %bb.20:
	movq	56(%r12), %rdx
	movq	%rcx, 40(%r12)
	movups	32(%rsp), %xmm0
	movups	%xmm0, 48(%r12)
	testq	%rax, %rax
	movq	16(%rsp), %r14                  # 8-byte Reload
	je	.LBB2_26
# %bb.21:
	movq	%rax, 24(%rsp)
	movq	%rdx, 40(%rsp)
	jmp	.LBB2_29
.LBB2_22:
	movq	32(%rsp), %rdx
	testq	%rdx, %rdx
	movl	%r14d, %ebp
	movq	16(%rsp), %r14                  # 8-byte Reload
	je	.LBB2_28
# %bb.23:
	movq	40(%r12), %rdi
	cmpq	$1, %rdx
	jne	.LBB2_27
# %bb.24:
	movzbl	40(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB2_28
.LBB2_25:                               # %.thread.i.i
	movq	%rcx, 40(%r12)
	movups	32(%rsp), %xmm0
	movups	%xmm0, 48(%r12)
	movq	16(%rsp), %r14                  # 8-byte Reload
.LBB2_26:
	leaq	40(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB2_29
.LBB2_27:
	leaq	40(%rsp), %rsi
	callq	memcpy@PLT
.LBB2_28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i
	movq	32(%rsp), %rax
	movq	%rax, 48(%r12)
	movq	40(%r12), %rcx
	movb	$0, (%rcx,%rax)
	movq	24(%rsp), %rax
.LBB2_29:
	movq	$0, 32(%rsp)
	movb	$0, (%rax)
	movq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, 120(%rsp)
	movq	$0, 128(%rsp)
	movb	$1, 128(%rsp)
	addq	$192, %r13
	leaq	120(%rsp), %rax
	cmpq	%rax, %r13
	je	.LBB2_33
# %bb.30:
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB2_34
# %bb.31:
.Ltmp311:
	movl	$3, %edi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp312:
# %bb.32:
	movq	$0, (%r13)
	movq	120(%rsp), %rcx
	jmp	.LBB2_35
.LBB2_33:                               # %.thread
	xorps	%xmm0, %xmm0
	movups	%xmm0, 304(%r12)
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %eax
	leaq	40(%rsp), %r12
	jmp	.LBB2_37
.LBB2_34:
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %ecx
.LBB2_35:                               # %_ZNSt3any5resetEv.exit7.i.i
	movq	%r13, 8(%rsp)
.Ltmp314:
	leaq	120(%rsp), %rsi
	leaq	8(%rsp), %rdx
	movl	$4, %edi
	callq	*%rcx
.Ltmp315:
# %bb.36:
	movq	120(%rsp), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 304(%r12)
	testq	%rax, %rax
	leaq	40(%rsp), %r12
	je	.LBB2_39
.LBB2_37:
.Ltmp317:
	leaq	120(%rsp), %rsi
	movl	$3, %edi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp318:
# %bb.38:
	movq	$0, 120(%rsp)
.LBB2_39:                               # %_ZNSt3anyD2Ev.exit
	movq	24(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB2_41
# %bb.40:
	callq	_ZdlPv
.LBB2_41:
	testb	$2, %bpl
	je	.LBB2_69
# %bb.42:
.Ltmp320:
	movl	$.L.str.30, %esi
	movl	$.L.str.31, %edx
	movq	%rbx, %rdi
	callq	_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_
.Ltmp321:
# %bb.43:
	movq	%rax, %r12
	movq	%rbx, 56(%rsp)
	movq	136(%rsp), %rax                 # 8-byte Reload
	movq	%rax, 64(%rsp)
	leaq	240(%r12), %rdi
.Ltmp323:
	leaq	56(%rsp), %rsi
	callq	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
.Ltmp324:
# %bb.44:                               # %_ZN8argparse8Argument6actionIZNS_14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS_17default_argumentsEbRSoEUlRKT_E0_JEEENSt9enable_ifIXsr3stdE14is_invocable_vISB_DpT0_KS8_EERS0_E4typeEOSB_DpOSG_.exit
	movb	$0, 7(%rsp)
.Ltmp326:
	leaq	7(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZN8argparse8Argument13default_valueIbEERS0_OT_
.Ltmp327:
# %bb.45:                               # %.noexc8.i47
	movq	%rax, %r13
	leaq	104(%rsp), %r12
	movq	%r12, 88(%rsp)
	movq	$36, 8(%rsp)
.Ltmp329:
	leaq	88(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp330:
# %bb.46:                               # %.noexc49
	movq	%r13, %rbx
	movq	%rax, 88(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 104(%rsp)
	movups	.L.str.32+16(%rip), %xmm0
	movups	%xmm0, 16(%rax)
	movups	.L.str.32(%rip), %xmm0
	movups	%xmm0, (%rax)
	movl	$1937009016, 32(%rax)           # imm = 0x73746978
	movq	%rcx, 96(%rsp)
	movb	$0, (%rax,%rcx)
	movq	88(%rsp), %rcx
	cmpq	%r12, %rcx
	je	.LBB2_50
# %bb.47:
	leaq	56(%r13), %rdx
	movq	40(%rbx), %rax
	cmpq	%rdx, %rax
	je	.LBB2_53
# %bb.48:
	movq	56(%rbx), %rdx
	movq	%rcx, 40(%rbx)
	movups	96(%rsp), %xmm0
	movups	%xmm0, 48(%rbx)
	testq	%rax, %rax
	je	.LBB2_54
# %bb.49:
	movq	%rax, 88(%rsp)
	movq	%rdx, 104(%rsp)
	jmp	.LBB2_57
.LBB2_50:
	movq	96(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB2_56
# %bb.51:
	movq	40(%rbx), %rdi
	cmpq	$1, %rdx
	jne	.LBB2_55
# %bb.52:
	movzbl	104(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB2_56
.LBB2_53:                               # %.thread.i.i55
	movq	%rcx, 40(%rbx)
	movups	96(%rsp), %xmm0
	movups	%xmm0, 48(%rbx)
.LBB2_54:
	movq	%r12, 88(%rsp)
	movq	%r12, %rax
	jmp	.LBB2_57
.LBB2_55:
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB2_56:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i54
	movq	96(%rsp), %rax
	movq	%rax, 48(%rbx)
	movq	40(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	88(%rsp), %rax
.LBB2_57:
	movq	$0, 96(%rsp)
	movb	$0, (%rax)
	movq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, 72(%rsp)
	movq	$0, 80(%rsp)
	movb	$1, 80(%rsp)
	addq	$192, %r13
	leaq	72(%rsp), %rax
	cmpq	%rax, %r13
	je	.LBB2_61
# %bb.58:
	movq	(%r13), %rax
	testq	%rax, %rax
	je	.LBB2_62
# %bb.59:
.Ltmp332:
	movl	$3, %edi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp333:
# %bb.60:
	movq	$0, (%r13)
	movq	72(%rsp), %rcx
	jmp	.LBB2_63
.LBB2_61:                               # %.thread91
	xorps	%xmm0, %xmm0
	movups	%xmm0, 304(%rbx)
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %eax
	jmp	.LBB2_65
.LBB2_62:
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %ecx
.LBB2_63:                               # %_ZNSt3any5resetEv.exit7.i.i63
	movq	%r13, 8(%rsp)
.Ltmp335:
	leaq	72(%rsp), %rsi
	leaq	8(%rsp), %rdx
	movl	$4, %edi
	callq	*%rcx
.Ltmp336:
# %bb.64:
	movq	72(%rsp), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 304(%rbx)
	testq	%rax, %rax
	je	.LBB2_67
.LBB2_65:
.Ltmp338:
	leaq	72(%rsp), %rsi
	movl	$3, %edi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp339:
# %bb.66:
	movq	$0, 72(%rsp)
.LBB2_67:                               # %_ZNSt3anyD2Ev.exit67
	movq	88(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB2_69
# %bb.68:
	callq	_ZdlPv
.LBB2_69:
	addq	$216, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB2_70:
	.cfi_def_cfa_offset 272
.Ltmp334:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_71:
.Ltmp313:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_72:
.Ltmp337:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_73:
.Ltmp316:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_74:
.Ltmp340:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_75:
.Ltmp319:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB2_76:
.Ltmp331:
	jmp	.LBB2_84
.LBB2_77:
.Ltmp328:
	jmp	.LBB2_84
.LBB2_78:
.Ltmp325:
	jmp	.LBB2_84
.LBB2_79:
.Ltmp310:
	jmp	.LBB2_85
.LBB2_80:
.Ltmp307:
	jmp	.LBB2_85
.LBB2_81:
.Ltmp304:
	jmp	.LBB2_85
.LBB2_82:
.Ltmp299:
	movq	%rax, %r12
	jmp	.LBB2_89
.LBB2_83:
.Ltmp322:
.LBB2_84:
	movq	%r14, 16(%rsp)                  # 8-byte Spill
.LBB2_85:
	movq	%rax, %r12
	leaq	360(%rbx), %r13
	leaq	408(%rbx), %rbp
	leaq	456(%rbx), %rdi
	callq	_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev
	movq	%rbp, %rdi
	callq	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev
	movq	%r13, %rdi
	callq	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev
	movq	(%r15), %rdi
	cmpq	%r15, %rdi
	je	.LBB2_87
	.p2align	4, 0x90
.LBB2_86:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r13
	callq	_ZdlPv
	movq	%r13, %rdi
	cmpq	%r15, %r13
	jne	.LBB2_86
.LBB2_87:                               # %_ZNSt7__cxx1110_List_baseISt17reference_wrapperIN8argparse14ArgumentParserEESaIS4_EED2Ev.exit
	movq	144(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %rdi
	cmpq	16(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB2_89
# %bb.88:
	callq	_ZdlPv
.LBB2_89:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit72
	leaq	256(%rbx), %rdi
	callq	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev
	movq	152(%rsp), %rdi                 # 8-byte Reload
	callq	_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev
	movq	160(%rsp), %rdi                 # 8-byte Reload
	callq	_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev
	movq	168(%rbx), %rdi
	cmpq	168(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_96
# %bb.90:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73
	movq	136(%rbx), %rdi
	cmpq	176(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_97
.LBB2_91:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit74
	movq	96(%rbx), %rdi
	cmpq	184(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_98
.LBB2_92:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit75
	movq	64(%rbx), %rdi
	cmpq	192(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_99
.LBB2_93:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76
	movq	32(%rbx), %rdi
	cmpq	200(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_100
.LBB2_94:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit77
	movq	(%rbx), %rdi
	cmpq	208(%rsp), %rdi                 # 8-byte Folded Reload
	jne	.LBB2_101
.LBB2_95:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit78
	movq	%r12, %rdi
	callq	_Unwind_Resume@PLT
.LBB2_96:
	callq	_ZdlPv
	movq	136(%rbx), %rdi
	cmpq	176(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB2_91
.LBB2_97:
	callq	_ZdlPv
	movq	96(%rbx), %rdi
	cmpq	184(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB2_92
.LBB2_98:
	callq	_ZdlPv
	movq	64(%rbx), %rdi
	cmpq	192(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB2_93
.LBB2_99:
	callq	_ZdlPv
	movq	32(%rbx), %rdi
	cmpq	200(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB2_94
.LBB2_100:
	callq	_ZdlPv
	movq	(%rbx), %rdi
	cmpq	208(%rsp), %rdi                 # 8-byte Folded Reload
	je	.LBB2_95
.LBB2_101:
	callq	_ZdlPv
	movq	%r12, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end2:
	.size	_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo, .Lfunc_end2-_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo,"aG",@progbits,_ZN8argparse14ArgumentParserC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSo,comdat
	.p2align	2, 0x0
GCC_except_table2:
.Lexception1:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase1-.Lttbaseref1
.Lttbaseref1:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end1-.Lcst_begin1
.Lcst_begin1:
	.uleb128 .Ltmp297-.Lfunc_begin1         # >> Call Site 1 <<
	.uleb128 .Ltmp298-.Ltmp297              #   Call between .Ltmp297 and .Ltmp298
	.uleb128 .Ltmp299-.Lfunc_begin1         #     jumps to .Ltmp299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp298-.Lfunc_begin1         # >> Call Site 2 <<
	.uleb128 .Ltmp300-.Ltmp298              #   Call between .Ltmp298 and .Ltmp300
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp300-.Lfunc_begin1         # >> Call Site 3 <<
	.uleb128 .Ltmp301-.Ltmp300              #   Call between .Ltmp300 and .Ltmp301
	.uleb128 .Ltmp322-.Lfunc_begin1         #     jumps to .Ltmp322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp302-.Lfunc_begin1         # >> Call Site 4 <<
	.uleb128 .Ltmp303-.Ltmp302              #   Call between .Ltmp302 and .Ltmp303
	.uleb128 .Ltmp304-.Lfunc_begin1         #     jumps to .Ltmp304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp305-.Lfunc_begin1         # >> Call Site 5 <<
	.uleb128 .Ltmp306-.Ltmp305              #   Call between .Ltmp305 and .Ltmp306
	.uleb128 .Ltmp307-.Lfunc_begin1         #     jumps to .Ltmp307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp308-.Lfunc_begin1         # >> Call Site 6 <<
	.uleb128 .Ltmp309-.Ltmp308              #   Call between .Ltmp308 and .Ltmp309
	.uleb128 .Ltmp310-.Lfunc_begin1         #     jumps to .Ltmp310
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp309-.Lfunc_begin1         # >> Call Site 7 <<
	.uleb128 .Ltmp311-.Ltmp309              #   Call between .Ltmp309 and .Ltmp311
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp311-.Lfunc_begin1         # >> Call Site 8 <<
	.uleb128 .Ltmp312-.Ltmp311              #   Call between .Ltmp311 and .Ltmp312
	.uleb128 .Ltmp313-.Lfunc_begin1         #     jumps to .Ltmp313
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp314-.Lfunc_begin1         # >> Call Site 9 <<
	.uleb128 .Ltmp315-.Ltmp314              #   Call between .Ltmp314 and .Ltmp315
	.uleb128 .Ltmp316-.Lfunc_begin1         #     jumps to .Ltmp316
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp317-.Lfunc_begin1         # >> Call Site 10 <<
	.uleb128 .Ltmp318-.Ltmp317              #   Call between .Ltmp317 and .Ltmp318
	.uleb128 .Ltmp319-.Lfunc_begin1         #     jumps to .Ltmp319
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp320-.Lfunc_begin1         # >> Call Site 11 <<
	.uleb128 .Ltmp321-.Ltmp320              #   Call between .Ltmp320 and .Ltmp321
	.uleb128 .Ltmp322-.Lfunc_begin1         #     jumps to .Ltmp322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp323-.Lfunc_begin1         # >> Call Site 12 <<
	.uleb128 .Ltmp324-.Ltmp323              #   Call between .Ltmp323 and .Ltmp324
	.uleb128 .Ltmp325-.Lfunc_begin1         #     jumps to .Ltmp325
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp326-.Lfunc_begin1         # >> Call Site 13 <<
	.uleb128 .Ltmp327-.Ltmp326              #   Call between .Ltmp326 and .Ltmp327
	.uleb128 .Ltmp328-.Lfunc_begin1         #     jumps to .Ltmp328
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp329-.Lfunc_begin1         # >> Call Site 14 <<
	.uleb128 .Ltmp330-.Ltmp329              #   Call between .Ltmp329 and .Ltmp330
	.uleb128 .Ltmp331-.Lfunc_begin1         #     jumps to .Ltmp331
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp330-.Lfunc_begin1         # >> Call Site 15 <<
	.uleb128 .Ltmp332-.Ltmp330              #   Call between .Ltmp330 and .Ltmp332
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp332-.Lfunc_begin1         # >> Call Site 16 <<
	.uleb128 .Ltmp333-.Ltmp332              #   Call between .Ltmp332 and .Ltmp333
	.uleb128 .Ltmp334-.Lfunc_begin1         #     jumps to .Ltmp334
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp335-.Lfunc_begin1         # >> Call Site 17 <<
	.uleb128 .Ltmp336-.Ltmp335              #   Call between .Ltmp335 and .Ltmp336
	.uleb128 .Ltmp337-.Lfunc_begin1         #     jumps to .Ltmp337
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp338-.Lfunc_begin1         # >> Call Site 18 <<
	.uleb128 .Ltmp339-.Ltmp338              #   Call between .Ltmp338 and .Ltmp339
	.uleb128 .Ltmp340-.Lfunc_begin1         #     jumps to .Ltmp340
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp339-.Lfunc_begin1         # >> Call Site 19 <<
	.uleb128 .Lfunc_end2-.Ltmp339           #   Call between .Ltmp339 and .Lfunc_end2
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end1:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase1:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparselsERSoRKNS_14ArgumentParserE,"axG",@progbits,_ZN8argparselsERSoRKNS_14ArgumentParserE,comdat
	.weak	_ZN8argparselsERSoRKNS_14ArgumentParserE # -- Begin function _ZN8argparselsERSoRKNS_14ArgumentParserE
	.p2align	4, 0x90
	.type	_ZN8argparselsERSoRKNS_14ArgumentParserE,@function
_ZN8argparselsERSoRKNS_14ArgumentParserE: # @_ZN8argparselsERSoRKNS_14ArgumentParserE
.Lfunc_begin2:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception2
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	orl	$32, 24(%rdi,%rax)
	movq	%rsi, %r14
	cmpq	$0, 296(%rsi)
	je	.LBB3_1
# %bb.2:
	leaq	264(%r14), %r13
	movq	280(%r14), %r12
	cmpq	%r13, %r12
	je	.LBB3_3
# %bb.23:                               # %.lr.ph.i.preheader
	xorl	%ebp, %ebp
	.p2align	4, 0x90
.LBB3_24:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	48(%r12), %rdi
	addq	$16, %rdi
	callq	_ZNK8argparse8Argument20get_arguments_lengthEv
	movq	%rax, %r15
	cmpq	%rax, %rbp
	cmovaq	%rbp, %r15
	movq	%r12, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	movq	%rax, %r12
	movq	%r15, %rbp
	cmpq	%r13, %rax
	jne	.LBB3_24
	jmp	.LBB3_4
.LBB3_1:
	xorl	%r15d, %r15d
.LBB3_7:                                # %_ZNK8argparse14ArgumentParser30get_length_of_longest_argumentEv.exit
	leaq	8(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZNK8argparse14ArgumentParser5usageB5cxx11Ev
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp341:
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp342:
# %bb.8:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp343:
	movl	$.L.str.83, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp344:
# %bb.9:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_11
# %bb.10:
	callq	_ZdlPv
.LBB3_11:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB3_13
# %bb.12:
	movq	64(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.83, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.LBB3_13:
	leaq	208(%r14), %r12
	cmpq	%r12, 208(%r14)
	je	.LBB3_16
# %bb.14:
	movl	$.L.str.84, %esi
	movl	$22, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r12), %r13
	cmpq	%r12, %r13
	je	.LBB3_16
	.p2align	4, 0x90
.LBB3_28:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	leaq	16(%r13), %rsi
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	%r15, 16(%rbx,%rax)
	movq	%rbx, %rdi
	callq	_ZN8argparselsERSoRKNS_8ArgumentE
	movq	(%r13), %r13
	cmpq	%r12, %r13
	jne	.LBB3_28
.LBB3_16:                               # %._crit_edge
	leaq	232(%r14), %rbp
	cmpq	%rbp, 232(%r14)
	je	.LBB3_19
# %bb.17:
	xorl	%edx, %edx
	cmpq	%r12, (%r12)
	setne	%dl
	movl	$.L.str.22, %eax
	movl	$.L.str.68, %esi
	cmovneq	%rax, %rsi
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.85, %esi
	movl	$20, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%rbp), %r13
	cmpq	%rbp, %r13
	je	.LBB3_19
	.p2align	4, 0x90
.LBB3_29:                               # %.lr.ph83
                                        # =>This Inner Loop Header: Depth=1
	leaq	16(%r13), %rsi
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	%r15, 16(%rbx,%rax)
	movq	%rbx, %rdi
	callq	_ZN8argparselsERSoRKNS_8ArgumentE
	movq	(%r13), %r13
	cmpq	%rbp, %r13
	jne	.LBB3_29
.LBB3_19:                               # %._crit_edge84
	leaq	368(%r14), %r13
	movq	384(%r14), %rax
	cmpq	%r13, %rax
	je	.LBB3_36
	.p2align	4, 0x90
.LBB3_21:                               # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	48(%rax), %rcx
	movq	16(%rcx), %rcx
	cmpb	$0, 480(%rcx)
	je	.LBB3_30
# %bb.22:                               #   in Loop: Header=BB3_21 Depth=1
	movq	%rax, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	cmpq	%r13, %rax
	jne	.LBB3_21
.LBB3_36:                               # %_ZSt6any_ofISt23_Rb_tree_const_iteratorISt4pairIKSt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEEEZNS9_lsERSoRKSA_EUlRT_E_EbSI_SI_T0_.exit.thread
	cmpq	$0, 104(%r14)
	je	.LBB3_38
# %bb.37:
	movb	$10, 8(%rsp)
	leaq	8(%rsp), %rsi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	96(%r14), %rsi
	movq	104(%r14), %rdx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.83, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.LBB3_38:
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB3_30:                               # %_ZSt6any_ofISt23_Rb_tree_const_iteratorISt4pairIKSt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEEEZNS9_lsERSoRKSA_EUlRT_E_EbSI_SI_T0_.exit
	.cfi_def_cfa_offset 96
	cmpq	%r13, %rax
	je	.LBB3_36
# %bb.31:
	xorq	208(%r14), %r12
	xorq	232(%r14), %rbp
	xorl	%edx, %edx
	orq	%r12, %rbp
	setne	%dl
	movl	$.L.str.22, %eax
	movl	$.L.str.68, %esi
	cmovneq	%rax, %rsi
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.86, %esi
	movl	$13, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	384(%r14), %r12
	cmpq	%r13, %r12
	je	.LBB3_36
# %bb.32:                               # %.lr.ph88
	addl	$-2, %r15d
	movslq	%r15d, %r15
	jmp	.LBB3_33
	.p2align	4, 0x90
.LBB3_35:                               #   in Loop: Header=BB3_33 Depth=1
	movq	%r12, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	movq	%rax, %r12
	cmpq	%r13, %rax
	je	.LBB3_36
.LBB3_33:                               # =>This Inner Loop Header: Depth=1
	movq	48(%r12), %rax
	movq	16(%rax), %rax
	cmpb	$0, 480(%rax)
	jne	.LBB3_35
# %bb.34:                               #   in Loop: Header=BB3_33 Depth=1
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	$2, 16(%rbx,%rax)
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%rbx), %rax
	movq	-24(%rax), %rax
	movq	%r15, 16(%rbx,%rax)
	movq	32(%r12), %rdx
	movq	40(%r12), %rsi
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	48(%r12), %rax
	movq	16(%rax), %rax
	movq	64(%rax), %rsi
	movq	72(%rax), %rdx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	$.L.str.22, %esi
	movl	$1, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	jmp	.LBB3_35
.LBB3_3:
	xorl	%r15d, %r15d
.LBB3_4:                                # %._crit_edge.i
	leaq	368(%r14), %r12
	movq	384(%r14), %rax
	cmpq	%r12, %rax
	je	.LBB3_7
	.p2align	4, 0x90
.LBB3_5:                                # %.lr.ph37.i
                                        # =>This Inner Loop Header: Depth=1
	movq	32(%rax), %rcx
	cmpq	%rcx, %r15
	cmovbeq	%rcx, %r15
	movq	%rax, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	cmpq	%r12, %rax
	jne	.LBB3_5
	jmp	.LBB3_7
.LBB3_25:
.Ltmp345:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB3_27
# %bb.26:
	callq	_ZdlPv
.LBB3_27:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end3:
	.size	_ZN8argparselsERSoRKNS_14ArgumentParserE, .Lfunc_end3-_ZN8argparselsERSoRKNS_14ArgumentParserE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparselsERSoRKNS_14ArgumentParserE,"aG",@progbits,_ZN8argparselsERSoRKNS_14ArgumentParserE,comdat
	.p2align	2, 0x0
GCC_except_table3:
.Lexception2:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end2-.Lcst_begin2
.Lcst_begin2:
	.uleb128 .Lfunc_begin2-.Lfunc_begin2    # >> Call Site 1 <<
	.uleb128 .Ltmp341-.Lfunc_begin2         #   Call between .Lfunc_begin2 and .Ltmp341
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp341-.Lfunc_begin2         # >> Call Site 2 <<
	.uleb128 .Ltmp344-.Ltmp341              #   Call between .Ltmp341 and .Ltmp344
	.uleb128 .Ltmp345-.Lfunc_begin2         #     jumps to .Ltmp345
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp344-.Lfunc_begin2         # >> Call Site 3 <<
	.uleb128 .Lfunc_end3-.Ltmp344           #   Call between .Ltmp344 and .Lfunc_end3
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end2:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.__clang_call_terminate,"axG",@progbits,__clang_call_terminate,comdat
	.hidden	__clang_call_terminate          # -- Begin function __clang_call_terminate
	.weak	__clang_call_terminate
	.p2align	4, 0x90
	.type	__clang_call_terminate,@function
__clang_call_terminate:                 # @__clang_call_terminate
# %bb.0:
	pushq	%rax
	callq	__cxa_begin_catch
	callq	_ZSt9terminatev
.Lfunc_end4:
	.size	__clang_call_terminate, .Lfunc_end4-__clang_call_terminate
                                        # -- End function
	.section	.text._ZN8argparse14ArgumentParserD2Ev,"axG",@progbits,_ZN8argparse14ArgumentParserD2Ev,comdat
	.weak	_ZN8argparse14ArgumentParserD2Ev # -- Begin function _ZN8argparse14ArgumentParserD2Ev
	.p2align	4, 0x90
	.type	_ZN8argparse14ArgumentParserD2Ev,@function
_ZN8argparse14ArgumentParserD2Ev:       # @_ZN8argparse14ArgumentParserD2Ev
.Lfunc_begin3:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception3
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	456(%rdi), %r14
	movq	464(%rdi), %r15
	cmpq	%r15, %r14
	jne	.LBB5_1
# %bb.5:                                # %_ZSt8_DestroyIPN8argparse14ArgumentParser22MutuallyExclusiveGroupES2_EvT_S4_RSaIT0_E.exit.i
	testq	%r14, %r14
	je	.LBB5_7
.LBB5_6:
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB5_7:                                # %_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev.exit
	leaq	408(%rbx), %rdi
	movq	424(%rbx), %rsi
.Ltmp346:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
.Ltmp347:
# %bb.8:                                # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev.exit
	leaq	360(%rbx), %rdi
	movq	376(%rbx), %rsi
.Ltmp349:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
.Ltmp350:
# %bb.9:                                # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev.exit
	leaq	336(%rbx), %r14
	movq	336(%rbx), %rdi
	cmpq	%r14, %rdi
	je	.LBB5_11
	.p2align	4, 0x90
.LBB5_10:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rdi), %r15
	callq	_ZdlPv
	movq	%r15, %rdi
	cmpq	%r14, %r15
	jne	.LBB5_10
.LBB5_11:                               # %_ZNSt7__cxx1110_List_baseISt17reference_wrapperIN8argparse14ArgumentParserEESaIS4_EED2Ev.exit
	movq	304(%rbx), %rdi
	leaq	320(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_13
# %bb.12:
	callq	_ZdlPv
.LBB5_13:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	leaq	256(%rbx), %rdi
	movq	272(%rbx), %rsi
.Ltmp352:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
.Ltmp353:
# %bb.14:                               # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev.exit
	leaq	232(%rbx), %r15
	movq	232(%rbx), %r14
	cmpq	%r15, %r14
	je	.LBB5_16
	.p2align	4, 0x90
.LBB5_15:                               # %.lr.ph.i.i4
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	leaq	16(%r14), %rdi
	callq	_ZN8argparse8ArgumentD2Ev
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r12, %r14
	cmpq	%r15, %r12
	jne	.LBB5_15
.LBB5_16:                               # %_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev.exit
	leaq	208(%rbx), %r15
	movq	208(%rbx), %r14
	cmpq	%r15, %r14
	je	.LBB5_18
	.p2align	4, 0x90
.LBB5_17:                               # %.lr.ph.i.i8
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r12
	leaq	16(%r14), %rdi
	callq	_ZN8argparse8ArgumentD2Ev
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r12, %r14
	cmpq	%r15, %r12
	jne	.LBB5_17
.LBB5_18:                               # %_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev.exit9
	movq	168(%rbx), %rdi
	leaq	184(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_20
# %bb.19:
	callq	_ZdlPv
.LBB5_20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	movq	136(%rbx), %rdi
	leaq	152(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_22
# %bb.21:
	callq	_ZdlPv
.LBB5_22:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit11
	movq	96(%rbx), %rdi
	leaq	112(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_24
# %bb.23:
	callq	_ZdlPv
.LBB5_24:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
	movq	64(%rbx), %rdi
	leaq	80(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_26
# %bb.25:
	callq	_ZdlPv
.LBB5_26:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit13
	movq	32(%rbx), %rdi
	leaq	48(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB5_28
# %bb.27:
	callq	_ZdlPv
.LBB5_28:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	movq	(%rbx), %rdi
	addq	$16, %rbx
	addq	$8, %rsp
	cmpq	%rbx, %rdi
	je	.LBB5_29
# %bb.33:
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
	.p2align	4, 0x90
.LBB5_3:                                # %_ZSt8_DestroyIN8argparse14ArgumentParser22MutuallyExclusiveGroupEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB5_1 Depth=1
	.cfi_def_cfa_offset 48
	addq	$40, %r14
	cmpq	%r15, %r14
	je	.LBB5_4
.LBB5_1:                                # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	16(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB5_3
# %bb.2:                                #   in Loop: Header=BB5_1 Depth=1
	callq	_ZdlPv
	jmp	.LBB5_3
.LBB5_4:                                # %_ZSt8_DestroyIPN8argparse14ArgumentParser22MutuallyExclusiveGroupES2_EvT_S4_RSaIT0_E.exitthread-pre-split.i
	movq	456(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB5_6
	jmp	.LBB5_7
.LBB5_29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit15
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB5_32:
	.cfi_def_cfa_offset 48
.Ltmp354:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB5_31:
.Ltmp351:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB5_30:
.Ltmp348:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end5:
	.size	_ZN8argparse14ArgumentParserD2Ev, .Lfunc_end5-_ZN8argparse14ArgumentParserD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse14ArgumentParserD2Ev,"aG",@progbits,_ZN8argparse14ArgumentParserD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table5:
.Lexception3:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase2-.Lttbaseref2
.Lttbaseref2:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end3-.Lcst_begin3
.Lcst_begin3:
	.uleb128 .Ltmp346-.Lfunc_begin3         # >> Call Site 1 <<
	.uleb128 .Ltmp347-.Ltmp346              #   Call between .Ltmp346 and .Ltmp347
	.uleb128 .Ltmp348-.Lfunc_begin3         #     jumps to .Ltmp348
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp349-.Lfunc_begin3         # >> Call Site 2 <<
	.uleb128 .Ltmp350-.Ltmp349              #   Call between .Ltmp349 and .Ltmp350
	.uleb128 .Ltmp351-.Lfunc_begin3         #     jumps to .Ltmp351
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp352-.Lfunc_begin3         # >> Call Site 3 <<
	.uleb128 .Ltmp353-.Ltmp352              #   Call between .Ltmp352 and .Ltmp353
	.uleb128 .Ltmp354-.Lfunc_begin3         #     jumps to .Ltmp354
	.byte	1                               #   On action: 1
.Lcst_end3:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase2:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function main
.LCPI6_0:
	.long	0x3f800000                      # float 1
	.long	0x3f800000                      # float 1
	.long	0x3f800000                      # float 1
	.long	0x3f800000                      # float 1
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin4:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception4
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$584, %rsp                      # imm = 0x248
	.cfi_def_cfa_offset 640
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rdx
	movl	%edi, %esi
	.cfi_escape 0x2e, 0x00
	leaq	320(%rsp), %rdi
	callq	_Z12parse_inputsiPPc
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.16, %esi
	movl	$9, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	320(%rsp), %r12d
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	%r12d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	324(%rsp), %r15d
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	328(%rsp), %ebp
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%ebp, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	332(%rsp), %r14d
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	_ZNSolsEi
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.18, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.19, %esi
	movl	$9, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	344(%rsp), %r13d
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	%r13d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%r15d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	336(%rsp), %esi
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%esi, 48(%rsp)                  # 4-byte Spill
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	340(%rsp), %esi
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%esi, 44(%rsp)                  # 4-byte Spill
	callq	_ZNSolsEi
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.18, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.20, %esi
	movl	$9, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	%r12d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movq	%r13, 72(%rsp)                  # 8-byte Spill
	movl	%r13d, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%ebp, %esi
	callq	_ZNSolsEi
	movq	%rax, %rbx
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movl	%r14d, %esi
	callq	_ZNSolsEi
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.18, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.21, %esi
	movl	$13, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movzbl	348(%rsp), %ebx
	.cfi_escape 0x2e, 0x00
	movzbl	%bl, %esi
	movl	$_ZSt4cout, %edi
	callq	_ZNSo9_M_insertIbEERSoT_
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.22, %esi
	movl	$1, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movl	%ebp, 20(%rsp)                  # 4-byte Spill
	imull	%r12d, %ebp
	movl	%r14d, 16(%rsp)                 # 4-byte Spill
	imull	%r14d, %ebp
	movl	%ebp, %eax
	movl	%r15d, 52(%rsp)                 # 4-byte Spill
	imull	%r15d, %eax
	testl	%eax, %eax
	js	.LBB6_242
# %bb.1:                                # %_ZNSt6vectorIfSaIfEE17_S_check_init_lenEmRKS0_.exit.i
	movb	%bl, 7(%rsp)                    # 1-byte Spill
	je	.LBB6_2
# %bb.3:                                # %.lr.ph.i.i.preheader.i.i.i.i.i
	movslq	%eax, %r14
	leaq	(,%r14,4), %rbx
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Znwm
	movq	%rax, %r15
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
	movq	%r15, %rax
	movq	%r15, 8(%rsp)                   # 8-byte Spill
	leaq	(%r15,%r14,4), %r13
	jmp	.LBB6_4
.LBB6_2:
	xorl	%eax, %eax
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	xorl	%r13d, %r13d
.LBB6_4:                                # %_ZNSt6vectorIfSaIfEEC2EmRKS0_.exit
	movq	72(%rsp), %rax                  # 8-byte Reload
	movl	%eax, %ecx
	imull	52(%rsp), %ecx                  # 4-byte Folded Reload
	movl	48(%rsp), %eax                  # 4-byte Reload
	imull	44(%rsp), %eax                  # 4-byte Folded Reload
	imull	%ecx, %eax
	testl	%eax, %eax
	js	.LBB6_5
# %bb.7:                                # %_ZNSt6vectorIfSaIfEE17_S_check_init_lenEmRKS0_.exit.i164
	movl	%r12d, 156(%rsp)                # 4-byte Spill
	je	.LBB6_8
# %bb.9:                                # %.lr.ph.i.i.preheader.i.i.i.i.i167
	movslq	%eax, %rbx
	shlq	$2, %rbx
.Ltmp355:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Znwm
.Ltmp356:
# %bb.10:                               # %.noexc171
	movq	%rax, %r12
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
	movq	%r12, %rax
	movq	%r12, 32(%rsp)                  # 8-byte Spill
	addq	%rbx, %r12
	imull	72(%rsp), %ebp                  # 4-byte Folded Reload
	testl	%ebp, %ebp
	js	.LBB6_12
.LBB6_14:                               # %_ZNSt6vectorIfSaIfEE17_S_check_init_lenEmRKS0_.exit.i174
	movl	%ebp, 40(%rsp)                  # 4-byte Spill
	je	.LBB6_15
# %bb.16:                               # %.lr.ph.i.i.preheader.i.i.i.i.i177
	movslq	%ebp, %rbx
	shlq	$2, %rbx
.Ltmp357:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Znwm
.Ltmp358:
# %bb.17:                               # %.lr.ph.i.i.preheader.i.i.i.i.i187
	movq	%rax, %rbp
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
.Ltmp359:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Znwm
.Ltmp360:
# %bb.18:                               # %.lr.ph.i.i.preheader.i.i.i.i.i197
	movq	%rax, %r14
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
.Ltmp362:
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	movq	%rbp, 56(%rsp)                  # 8-byte Spill
	callq	_Znwm
.Ltmp363:
# %bb.19:                               # %.noexc201
	movq	%rax, %r15
	addq	%rbx, %rbp
	movq	%r14, 24(%rsp)                  # 8-byte Spill
	addq	%rbx, %r14
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	memset@PLT
	movq	%r15, %rax
	movq	%r15, 64(%rsp)                  # 8-byte Spill
	addq	%rbx, %r15
	cmpq	%r13, 8(%rsp)                   # 8-byte Folded Reload
	jne	.LBB6_21
	jmp	.LBB6_26
.LBB6_8:
	xorl	%eax, %eax
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	xorl	%r12d, %r12d
	imull	72(%rsp), %ebp                  # 4-byte Folded Reload
	testl	%ebp, %ebp
	jns	.LBB6_14
.LBB6_12:
.Ltmp624:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp625:
# %bb.13:                               # %.noexc180
.LBB6_15:
	xorl	%r14d, %r14d
	xorl	%eax, %eax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	xorl	%eax, %eax
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	xorl	%ebp, %ebp
	xorl	%eax, %eax
	movq	%rax, 64(%rsp)                  # 8-byte Spill
	xorl	%r15d, %r15d
	cmpq	%r13, 8(%rsp)                   # 8-byte Folded Reload
	je	.LBB6_26
.LBB6_21:                               # %.lr.ph.i.i.preheader
	movq	%r13, %rcx
	movq	8(%rsp), %rax                   # 8-byte Reload
	subq	%rax, %rcx
	addq	$-4, %rcx
	cmpq	$28, %rcx
	jb	.LBB6_25
# %bb.22:                               # %vector.ph
	shrq	$2, %rcx
	incq	%rcx
	movq	%rcx, %rdx
	andq	$-8, %rdx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	leaq	(%rdi,%rdx,4), %rax
	xorl	%esi, %esi
	movaps	.LCPI6_0(%rip), %xmm0           # xmm0 = [1.0E+0,1.0E+0,1.0E+0,1.0E+0]
	.p2align	4, 0x90
.LBB6_23:                               # %vector.body
                                        # =>This Inner Loop Header: Depth=1
	movups	%xmm0, (%rdi,%rsi,4)
	movups	%xmm0, 16(%rdi,%rsi,4)
	addq	$8, %rsi
	cmpq	%rsi, %rdx
	jne	.LBB6_23
# %bb.24:                               # %middle.block
	cmpq	%rdx, %rcx
	je	.LBB6_26
	.p2align	4, 0x90
.LBB6_25:                               # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movl	$1065353216, (%rax)             # imm = 0x3F800000
	addq	$4, %rax
	cmpq	%r13, %rax
	jne	.LBB6_25
.LBB6_26:                               # %_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEdEvT_S7_RKT0_.exit
	movq	32(%rsp), %rdi                  # 8-byte Reload
	cmpq	%r12, %rdi
	je	.LBB6_28
# %bb.27:                               # %.lr.ph.i.i204.preheader
	movq	%r12, %rdx
	subq	%rdi, %rdx
	addq	$-4, %rdx
	andq	$-4, %rdx
	addq	$4, %rdx
	.cfi_escape 0x2e, 0x00
	xorl	%esi, %esi
	callq	memset@PLT
.LBB6_28:                               # %_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEdEvT_S7_RKT0_.exit207
	movq	24(%rsp), %rdi                  # 8-byte Reload
	cmpq	%r14, %rdi
	je	.LBB6_30
# %bb.29:                               # %.lr.ph.i.i209.preheader
	movq	%r14, %rdx
	subq	%rdi, %rdx
	addq	$-4, %rdx
	andq	$-4, %rdx
	addq	$4, %rdx
	.cfi_escape 0x2e, 0x00
	xorl	%esi, %esi
	callq	memset@PLT
.LBB6_30:                               # %_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPfSt6vectorIfSaIfEEEEdEvT_S7_RKT0_.exit212
	subq	8(%rsp), %r13                   # 8-byte Folded Reload
.Ltmp365:
	.cfi_escape 0x2e, 0x00
	leaq	120(%rsp), %rdi
	movq	%r13, %rsi
	callq	hipMalloc
.Ltmp366:
# %bb.31:                               # %_ZL9hipMallocIfE10hipError_tPPT_m.exit
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_32
# %bb.42:
.Ltmp376:
	subq	32(%rsp), %r12                  # 8-byte Folded Reload
	.cfi_escape 0x2e, 0x00
	leaq	112(%rsp), %rdi
	movq	%r12, %rsi
	callq	hipMalloc
.Ltmp377:
# %bb.43:                               # %_ZL9hipMallocIfE10hipError_tPPT_m.exit217
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_44
# %bb.50:
.Ltmp387:
	subq	56(%rsp), %rbp                  # 8-byte Folded Reload
	.cfi_escape 0x2e, 0x00
	leaq	104(%rsp), %rdi
	movq	%rbp, %rsi
	callq	hipMalloc
.Ltmp388:
# %bb.51:                               # %_ZL9hipMallocIfE10hipError_tPPT_m.exit223
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_52
# %bb.58:
.Ltmp398:
	subq	24(%rsp), %r14                  # 8-byte Folded Reload
	.cfi_escape 0x2e, 0x00
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	callq	hipMalloc
.Ltmp399:
# %bb.59:                               # %_ZL9hipMallocIfE10hipError_tPPT_m.exit229
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_60
# %bb.66:
.Ltmp409:
	movq	%r15, %rsi
	subq	64(%rsp), %rsi                  # 8-byte Folded Reload
	.cfi_escape 0x2e, 0x00
	leaq	96(%rsp), %rdi
	movq	%rsi, %rbp
	callq	hipMalloc
.Ltmp410:
# %bb.67:                               # %_ZL9hipMallocIfE10hipError_tPPT_m.exit235
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_68
# %bb.74:
.Ltmp420:
	.cfi_escape 0x2e, 0x00
	leaq	88(%rsp), %rdi
	callq	hipStreamCreate
.Ltmp421:
# %bb.75:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_76
# %bb.82:
	movq	120(%rsp), %rdi
.Ltmp431:
	.cfi_escape 0x2e, 0x00
	movq	8(%rsp), %rsi                   # 8-byte Reload
	movq	%r13, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
.Ltmp432:
# %bb.83:
	movl	%eax, %ebx
	testl	%eax, %eax
	movq	32(%rsp), %rsi                  # 8-byte Reload
	jne	.LBB6_84
# %bb.90:
	movq	112(%rsp), %rdi
.Ltmp442:
	.cfi_escape 0x2e, 0x00
	movq	%r12, %rdx
	movl	$1, %ecx
	movq	8(%rsp), %r13                   # 8-byte Reload
	callq	hipMemcpy
.Ltmp443:
# %bb.91:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_92
# %bb.98:
	movq	80(%rsp), %rdi
.Ltmp453:
	.cfi_escape 0x2e, 0x00
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	%r14, %rdx
	movl	$1, %ecx
	callq	hipMemcpy
.Ltmp454:
# %bb.99:
	movl	%eax, %ebx
	testl	%eax, %eax
	movq	64(%rsp), %r14                  # 8-byte Reload
	jne	.LBB6_100
# %bb.106:
	movabsq	$4294967296, %r12               # imm = 0x100000000
	addq	72(%rsp), %r12                  # 8-byte Folded Reload
.Ltmp464:
	.cfi_escape 0x2e, 0x00
	movabsq	$4294967516, %rdx               # imm = 0x1000000DC
	movq	%r12, %rdi
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration
.Ltmp465:
# %bb.107:
	testl	%eax, %eax
	jne	.LBB6_110
# %bb.108:
	movq	120(%rsp), %rax
	movq	112(%rsp), %rcx
	movq	104(%rsp), %rdx
	xorps	%xmm0, %xmm0
	movaps	%xmm0, 352(%rsp)
	movl	$0, 368(%rsp)
	movaps	%xmm0, 256(%rsp)
	movl	$0, 272(%rsp)
	movaps	%xmm0, 288(%rsp)
	movl	$0, 304(%rsp)
	movq	%rax, 144(%rsp)
	movq	%rcx, 136(%rsp)
	movq	%rdx, 128(%rsp)
	movl	20(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 220(%rsp)
	movl	16(%rsp), %ecx                  # 4-byte Reload
	movl	%ecx, 216(%rsp)
	movl	156(%rsp), %edx                 # 4-byte Reload
	movl	%edx, 212(%rsp)
	movq	72(%rsp), %rdx                  # 8-byte Reload
	movl	%edx, 208(%rsp)
	movl	52(%rsp), %edx                  # 4-byte Reload
	movl	%edx, 204(%rsp)
	movl	%eax, 200(%rsp)
	movl	%ecx, 196(%rsp)
	movl	$1, 192(%rsp)
	movl	$1, 188(%rsp)
	movl	$1, 184(%rsp)
	movl	$1, 180(%rsp)
	movl	$1, 176(%rsp)
	movl	$1, 172(%rsp)
	movl	48(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 168(%rsp)
	movl	44(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 164(%rsp)
	movl	$1, 160(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 400(%rsp)
	leaq	136(%rsp), %rax
	movq	%rax, 408(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 416(%rsp)
	leaq	352(%rsp), %rax
	movq	%rax, 424(%rsp)
	leaq	256(%rsp), %rax
	movq	%rax, 432(%rsp)
	leaq	288(%rsp), %rax
	movq	%rax, 440(%rsp)
	leaq	220(%rsp), %rax
	movq	%rax, 448(%rsp)
	leaq	216(%rsp), %rax
	movq	%rax, 456(%rsp)
	leaq	212(%rsp), %rax
	movq	%rax, 464(%rsp)
	leaq	208(%rsp), %rax
	movq	%rax, 472(%rsp)
	leaq	204(%rsp), %rax
	movq	%rax, 480(%rsp)
	leaq	200(%rsp), %rax
	movq	%rax, 488(%rsp)
	leaq	196(%rsp), %rax
	movq	%rax, 496(%rsp)
	leaq	192(%rsp), %rax
	movq	%rax, 504(%rsp)
	leaq	188(%rsp), %rax
	movq	%rax, 512(%rsp)
	leaq	184(%rsp), %rax
	movq	%rax, 520(%rsp)
	leaq	180(%rsp), %rax
	movq	%rax, 528(%rsp)
	leaq	176(%rsp), %rax
	movq	%rax, 536(%rsp)
	leaq	172(%rsp), %rax
	movq	%rax, 544(%rsp)
	leaq	168(%rsp), %rax
	movq	%rax, 552(%rsp)
	leaq	164(%rsp), %rax
	movq	%rax, 560(%rsp)
	leaq	160(%rsp), %rax
	movq	%rax, 568(%rsp)
.Ltmp466:
	.cfi_escape 0x2e, 0x00
	leaq	240(%rsp), %rdi
	leaq	224(%rsp), %rsi
	leaq	392(%rsp), %rdx
	leaq	384(%rsp), %rcx
	callq	__hipPopCallConfiguration
.Ltmp467:
# %bb.109:                              # %.noexc256
	movq	240(%rsp), %rsi
	movl	248(%rsp), %edx
	movq	224(%rsp), %rcx
	movl	232(%rsp), %r8d
.Ltmp468:
	.cfi_escape 0x2e, 0x10
	leaq	400(%rsp), %r9
	movl	$_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii, %edi
	pushq	384(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	400(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp469:
.LBB6_110:
	movq	88(%rsp), %r9
.Ltmp471:
	.cfi_escape 0x2e, 0x00
	movabsq	$4294967516, %rdx               # imm = 0x1000000DC
	movq	%r12, %rdi
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r8d, %r8d
	callq	__hipPushCallConfiguration
.Ltmp472:
# %bb.111:
	testl	%eax, %eax
	jne	.LBB6_114
# %bb.112:
	movq	80(%rsp), %rax
	movq	%rax, 352(%rsp)
	movl	20(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 144(%rsp)
	movl	16(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 136(%rsp)
	movl	40(%rsp), %eax                  # 4-byte Reload
	movl	%eax, 128(%rsp)
	leaq	352(%rsp), %rax
	movq	%rax, 400(%rsp)
	leaq	144(%rsp), %rax
	movq	%rax, 408(%rsp)
	leaq	136(%rsp), %rax
	movq	%rax, 416(%rsp)
	leaq	128(%rsp), %rax
	movq	%rax, 424(%rsp)
.Ltmp473:
	.cfi_escape 0x2e, 0x00
	leaq	288(%rsp), %rdi
	leaq	256(%rsp), %rsi
	leaq	240(%rsp), %rdx
	leaq	224(%rsp), %rcx
	callq	__hipPopCallConfiguration
.Ltmp474:
# %bb.113:                              # %.noexc264
	movq	288(%rsp), %rsi
	movl	296(%rsp), %edx
	movq	256(%rsp), %rcx
	movl	264(%rsp), %r8d
.Ltmp475:
	.cfi_escape 0x2e, 0x10
	leaq	400(%rsp), %r9
	movl	$_Z7add_oneIfiEvPT_T0_S2_S2_, %edi
	pushq	224(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	248(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$16, %rsp
	.cfi_adjust_cfa_offset -16
.Ltmp476:
.LBB6_114:
.Ltmp478:
	.cfi_escape 0x2e, 0x00
	leaq	400(%rsp), %rdi
	callq	hipEventCreate
.Ltmp479:
# %bb.115:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_116
# %bb.121:
	movq	400(%rsp), %rdi
	movq	88(%rsp), %rsi
.Ltmp489:
	.cfi_escape 0x2e, 0x00
	callq	hipEventRecord
.Ltmp490:
# %bb.122:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_123
# %bb.129:
	movq	400(%rsp), %rsi
.Ltmp500:
	.cfi_escape 0x2e, 0x00
	xorl	%edi, %edi
	xorl	%edx, %edx
	callq	hipStreamWaitEvent
.Ltmp501:
# %bb.130:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_131
# %bb.137:
.Ltmp511:
	.cfi_escape 0x2e, 0x00
	movabsq	$4294967516, %rdx               # imm = 0x1000000DC
	movq	%r12, %rdi
	movl	$1, %esi
	movl	$1, %ecx
	xorl	%r8d, %r8d
	xorl	%r9d, %r9d
	callq	__hipPushCallConfiguration
.Ltmp512:
# %bb.138:
	testl	%eax, %eax
	jne	.LBB6_140
# %bb.139:
	cmpb	$0, 7(%rsp)                     # 1-byte Folded Reload
	movq	104(%rsp), %rdi
	movq	80(%rsp), %rsi
	movq	96(%rsp), %rdx
	movl	$_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_, %eax
	movl	$_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_, %r10d
	cmoveq	%rax, %r10
.Ltmp513:
	.cfi_escape 0x2e, 0x00
	movl	20(%rsp), %ecx                  # 4-byte Reload
	movl	16(%rsp), %r8d                  # 4-byte Reload
	movl	40(%rsp), %r9d                  # 4-byte Reload
	callq	*%r10
.Ltmp514:
.LBB6_140:
.Ltmp515:
	.cfi_escape 0x2e, 0x00
	callq	hipDeviceSynchronize
.Ltmp516:
# %bb.141:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_142
# %bb.148:
	movq	96(%rsp), %rsi
.Ltmp526:
	.cfi_escape 0x2e, 0x00
	movq	%r14, %rdi
	movq	%rbp, %rdx
	movl	$2, %ecx
	callq	hipMemcpy
.Ltmp527:
# %bb.149:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_150
# %bb.156:
	movq	120(%rsp), %rdi
.Ltmp537:
	.cfi_escape 0x2e, 0x00
	callq	hipFree
.Ltmp538:
# %bb.157:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_158
# %bb.164:
	movq	104(%rsp), %rdi
.Ltmp548:
	.cfi_escape 0x2e, 0x00
	callq	hipFree
.Ltmp549:
# %bb.165:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_166
# %bb.172:
	movq	80(%rsp), %rdi
.Ltmp559:
	.cfi_escape 0x2e, 0x00
	callq	hipFree
.Ltmp560:
# %bb.173:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_174
# %bb.180:
	movq	96(%rsp), %rdi
.Ltmp570:
	.cfi_escape 0x2e, 0x00
	callq	hipFree
.Ltmp571:
# %bb.181:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_182
# %bb.188:
	movq	112(%rsp), %rdi
.Ltmp581:
	.cfi_escape 0x2e, 0x00
	callq	hipFree
.Ltmp582:
# %bb.189:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_190
# %bb.196:
	movq	400(%rsp), %rdi
.Ltmp592:
	.cfi_escape 0x2e, 0x00
	callq	hipEventDestroy
.Ltmp593:
# %bb.197:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_198
# %bb.204:
	movq	88(%rsp), %rdi
.Ltmp603:
	.cfi_escape 0x2e, 0x00
	callq	hipStreamDestroy
.Ltmp604:
# %bb.205:
	movl	%eax, %ebx
	testl	%eax, %eax
	jne	.LBB6_206
# %bb.212:
.Ltmp614:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.24, %esi
	movl	$7, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp615:
# %bb.213:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit315.preheader
	cmpq	%r15, %r14
	je	.LBB6_218
# %bb.214:
	movq	%r14, %rbx
	.p2align	4, 0x90
.LBB6_215:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movss	(%rbx), %xmm0                   # xmm0 = mem[0],zero,zero,zero
	cvtss2sd	%xmm0, %xmm0
.Ltmp616:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	callq	_ZNSo9_M_insertIdEERSoT_
.Ltmp617:
# %bb.216:                              # %_ZNSolsEf.exit
                                        #   in Loop: Header=BB6_215 Depth=1
.Ltmp618:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.17, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp619:
# %bb.217:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit320
                                        #   in Loop: Header=BB6_215 Depth=1
	addq	$4, %rbx
	cmpq	%r15, %rbx
	jne	.LBB6_215
.LBB6_218:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit315._crit_edge
.Ltmp621:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cout, %edi
	movl	$.L.str.18, %esi
	movl	$2, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp622:
# %bb.219:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit317
	testq	%r14, %r14
	je	.LBB6_221
# %bb.220:
	.cfi_escape 0x2e, 0x00
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB6_221:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_223
# %bb.222:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB6_223:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit322
	movq	56(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_225
# %bb.224:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB6_225:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit324
	movq	32(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_227
# %bb.226:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
.LBB6_227:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit326
	testq	%r13, %r13
	je	.LBB6_229
# %bb.228:
	.cfi_escape 0x2e, 0x00
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB6_229:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit328
	xorl	%eax, %eax
	addq	$584, %rsp                      # imm = 0x248
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB6_242:                              # %.noexc
	.cfi_def_cfa_offset 640
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB6_5:
.Ltmp627:
	.cfi_escape 0x2e, 0x00
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp628:
# %bb.6:                                # %.noexc170
.LBB6_32:
.Ltmp367:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp368:
# %bb.33:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
.Ltmp369:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp370:
# %bb.34:
.Ltmp371:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp372:
# %bb.35:
.Ltmp373:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp374:
# %bb.36:                               # %_ZNSolsEPFRSoS_E.exit
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_44:
.Ltmp378:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp379:
# %bb.45:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit219
.Ltmp380:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp381:
# %bb.46:
.Ltmp382:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp383:
# %bb.47:
.Ltmp384:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp385:
# %bb.48:                               # %_ZNSolsEPFRSoS_E.exit221
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_52:
.Ltmp389:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp390:
# %bb.53:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit225
.Ltmp391:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp392:
# %bb.54:
.Ltmp393:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp394:
# %bb.55:
.Ltmp395:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp396:
# %bb.56:                               # %_ZNSolsEPFRSoS_E.exit227
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_60:
.Ltmp400:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp401:
# %bb.61:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit231
.Ltmp402:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp403:
# %bb.62:
.Ltmp404:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp405:
# %bb.63:
.Ltmp406:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp407:
# %bb.64:                               # %_ZNSolsEPFRSoS_E.exit233
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_68:
.Ltmp411:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp412:
# %bb.69:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit237
.Ltmp413:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp414:
# %bb.70:
.Ltmp415:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp416:
# %bb.71:
.Ltmp417:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp418:
# %bb.72:                               # %_ZNSolsEPFRSoS_E.exit239
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_76:
.Ltmp422:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp423:
# %bb.77:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit241
.Ltmp424:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp425:
# %bb.78:
.Ltmp426:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp427:
# %bb.79:
.Ltmp428:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp429:
# %bb.80:                               # %_ZNSolsEPFRSoS_E.exit243
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_84:
.Ltmp433:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp434:
# %bb.85:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit245
.Ltmp435:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp436:
# %bb.86:
.Ltmp437:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp438:
# %bb.87:
.Ltmp439:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp440:
# %bb.88:                               # %_ZNSolsEPFRSoS_E.exit247
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_92:
.Ltmp444:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp445:
# %bb.93:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit249
.Ltmp446:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp447:
# %bb.94:
.Ltmp448:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp449:
# %bb.95:
.Ltmp450:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp451:
# %bb.96:                               # %_ZNSolsEPFRSoS_E.exit251
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_100:
.Ltmp455:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp456:
# %bb.101:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit253
.Ltmp457:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp458:
# %bb.102:
.Ltmp459:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp460:
# %bb.103:
.Ltmp461:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp462:
# %bb.104:                              # %_ZNSolsEPFRSoS_E.exit255
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_116:
.Ltmp480:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp481:
# %bb.117:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit267
.Ltmp482:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp483:
# %bb.118:
.Ltmp484:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp485:
# %bb.119:
.Ltmp486:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp487:
# %bb.120:                              # %_ZNSolsEPFRSoS_E.exit269
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_123:
.Ltmp491:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp492:
# %bb.124:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit271
.Ltmp493:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp494:
# %bb.125:
.Ltmp495:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp496:
# %bb.126:
.Ltmp497:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp498:
# %bb.127:                              # %_ZNSolsEPFRSoS_E.exit273
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_131:
.Ltmp502:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp503:
# %bb.132:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit275
.Ltmp504:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp505:
# %bb.133:
.Ltmp506:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp507:
# %bb.134:
.Ltmp508:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp509:
# %bb.135:                              # %_ZNSolsEPFRSoS_E.exit277
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_142:
.Ltmp517:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp518:
# %bb.143:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit279
.Ltmp519:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp520:
# %bb.144:
.Ltmp521:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp522:
# %bb.145:
.Ltmp523:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp524:
# %bb.146:                              # %_ZNSolsEPFRSoS_E.exit281
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_150:
.Ltmp528:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp529:
# %bb.151:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit283
.Ltmp530:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp531:
# %bb.152:
.Ltmp532:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp533:
# %bb.153:
.Ltmp534:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp535:
# %bb.154:                              # %_ZNSolsEPFRSoS_E.exit285
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_158:
.Ltmp539:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp540:
# %bb.159:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit287
.Ltmp541:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp542:
# %bb.160:
.Ltmp543:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp544:
# %bb.161:
.Ltmp545:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp546:
# %bb.162:                              # %_ZNSolsEPFRSoS_E.exit289
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_166:
.Ltmp550:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp551:
# %bb.167:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit291
.Ltmp552:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp553:
# %bb.168:
.Ltmp554:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp555:
# %bb.169:
.Ltmp556:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp557:
# %bb.170:                              # %_ZNSolsEPFRSoS_E.exit293
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_174:
.Ltmp561:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp562:
# %bb.175:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit295
.Ltmp563:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp564:
# %bb.176:
.Ltmp565:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp566:
# %bb.177:
.Ltmp567:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp568:
# %bb.178:                              # %_ZNSolsEPFRSoS_E.exit297
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_182:
.Ltmp572:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp573:
# %bb.183:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit299
.Ltmp574:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp575:
# %bb.184:
.Ltmp576:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp577:
# %bb.185:
.Ltmp578:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp579:
# %bb.186:                              # %_ZNSolsEPFRSoS_E.exit301
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_190:
.Ltmp583:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp584:
# %bb.191:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit303
.Ltmp585:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp586:
# %bb.192:
.Ltmp587:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp588:
# %bb.193:
.Ltmp589:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp590:
# %bb.194:                              # %_ZNSolsEPFRSoS_E.exit305
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_198:
.Ltmp594:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp595:
# %bb.199:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit307
.Ltmp596:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp597:
# %bb.200:
.Ltmp598:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp599:
# %bb.201:
.Ltmp600:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp601:
# %bb.202:                              # %_ZNSolsEPFRSoS_E.exit309
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_206:
.Ltmp605:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movl	$.L.str.23, %esi
	movl	$19, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp606:
# %bb.207:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit311
.Ltmp607:
	.cfi_escape 0x2e, 0x00
	movl	%ebx, %edi
	callq	hipGetErrorString
.Ltmp608:
# %bb.208:
.Ltmp609:
	.cfi_escape 0x2e, 0x00
	movl	$_ZSt4cerr, %edi
	movq	%rax, %rsi
	callq	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc
.Ltmp610:
# %bb.209:
.Ltmp611:
	.cfi_escape 0x2e, 0x00
	movq	%rax, %rdi
	callq	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_
.Ltmp612:
# %bb.210:                              # %_ZNSolsEPFRSoS_E.exit313
	.cfi_escape 0x2e, 0x00
	callq	abort
.LBB6_40:                               # %_ZNSt6vectorIfSaIfEED2Ev.exit330.thread
.Ltmp364:
	movq	%rax, %rbx
	movq	%r14, %rdi
	jmp	.LBB6_234
.LBB6_39:                               # %_ZNSt6vectorIfSaIfEED2Ev.exit332.thread
.Ltmp361:
	movq	%rax, %rbx
	jmp	.LBB6_236
.LBB6_38:
.Ltmp626:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_239
	jmp	.LBB6_238
.LBB6_37:
.Ltmp629:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_241
	jmp	.LBB6_240
.LBB6_244:
.Ltmp477:
	jmp	.LBB6_231
.LBB6_243:
.Ltmp470:
	jmp	.LBB6_231
.LBB6_211:
.Ltmp613:
	jmp	.LBB6_231
.LBB6_203:
.Ltmp602:
	jmp	.LBB6_231
.LBB6_195:
.Ltmp591:
	jmp	.LBB6_231
.LBB6_187:
.Ltmp580:
	jmp	.LBB6_231
.LBB6_179:
.Ltmp569:
	jmp	.LBB6_231
.LBB6_171:
.Ltmp558:
	jmp	.LBB6_231
.LBB6_163:
.Ltmp547:
	jmp	.LBB6_231
.LBB6_155:
.Ltmp536:
	jmp	.LBB6_231
.LBB6_147:
.Ltmp525:
	jmp	.LBB6_231
.LBB6_136:
.Ltmp510:
	jmp	.LBB6_231
.LBB6_128:
.Ltmp499:
	jmp	.LBB6_231
.LBB6_230:
.Ltmp488:
	jmp	.LBB6_231
.LBB6_105:
.Ltmp463:
	jmp	.LBB6_231
.LBB6_97:
.Ltmp452:
	jmp	.LBB6_231
.LBB6_89:
.Ltmp441:
	jmp	.LBB6_231
.LBB6_81:
.Ltmp430:
	jmp	.LBB6_231
.LBB6_73:
.Ltmp419:
	jmp	.LBB6_231
.LBB6_65:
.Ltmp408:
	jmp	.LBB6_231
.LBB6_57:
.Ltmp397:
	jmp	.LBB6_231
.LBB6_49:
.Ltmp386:
	jmp	.LBB6_231
.LBB6_41:
.Ltmp375:
	jmp	.LBB6_231
.LBB6_245:
.Ltmp623:
	jmp	.LBB6_231
.LBB6_246:
.Ltmp620:
.LBB6_231:
	movq	%rax, %rbx
	movq	64(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB6_232
# %bb.233:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit330
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB6_234
.LBB6_235:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit332
	movq	56(%rsp), %rbp                  # 8-byte Reload
	testq	%rbp, %rbp
	jne	.LBB6_236
.LBB6_237:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit334
	movq	32(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB6_238
.LBB6_239:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit336
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	jne	.LBB6_240
.LBB6_241:                              # %_ZNSt6vectorIfSaIfEED2Ev.exit338
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB6_232:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_235
.LBB6_234:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	movq	56(%rsp), %rbp                  # 8-byte Reload
	testq	%rbp, %rbp
	je	.LBB6_237
.LBB6_236:
	.cfi_escape 0x2e, 0x00
	movq	%rbp, %rdi
	callq	_ZdlPv
	movq	32(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_239
.LBB6_238:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	movq	8(%rsp), %rdi                   # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB6_241
.LBB6_240:
	.cfi_escape 0x2e, 0x00
	callq	_ZdlPv
	.cfi_escape 0x2e, 0x00
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end6:
	.size	main, .Lfunc_end6-main
	.cfi_endproc
	.section	.gcc_except_table,"a",@progbits
	.p2align	2, 0x0
GCC_except_table6:
.Lexception4:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end4-.Lcst_begin4
.Lcst_begin4:
	.uleb128 .Lfunc_begin4-.Lfunc_begin4    # >> Call Site 1 <<
	.uleb128 .Ltmp355-.Lfunc_begin4         #   Call between .Lfunc_begin4 and .Ltmp355
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp355-.Lfunc_begin4         # >> Call Site 2 <<
	.uleb128 .Ltmp356-.Ltmp355              #   Call between .Ltmp355 and .Ltmp356
	.uleb128 .Ltmp629-.Lfunc_begin4         #     jumps to .Ltmp629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp356-.Lfunc_begin4         # >> Call Site 3 <<
	.uleb128 .Ltmp357-.Ltmp356              #   Call between .Ltmp356 and .Ltmp357
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp357-.Lfunc_begin4         # >> Call Site 4 <<
	.uleb128 .Ltmp358-.Ltmp357              #   Call between .Ltmp357 and .Ltmp358
	.uleb128 .Ltmp626-.Lfunc_begin4         #     jumps to .Ltmp626
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp358-.Lfunc_begin4         # >> Call Site 5 <<
	.uleb128 .Ltmp359-.Ltmp358              #   Call between .Ltmp358 and .Ltmp359
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp359-.Lfunc_begin4         # >> Call Site 6 <<
	.uleb128 .Ltmp360-.Ltmp359              #   Call between .Ltmp359 and .Ltmp360
	.uleb128 .Ltmp361-.Lfunc_begin4         #     jumps to .Ltmp361
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp360-.Lfunc_begin4         # >> Call Site 7 <<
	.uleb128 .Ltmp362-.Ltmp360              #   Call between .Ltmp360 and .Ltmp362
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp362-.Lfunc_begin4         # >> Call Site 8 <<
	.uleb128 .Ltmp363-.Ltmp362              #   Call between .Ltmp362 and .Ltmp363
	.uleb128 .Ltmp364-.Lfunc_begin4         #     jumps to .Ltmp364
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp363-.Lfunc_begin4         # >> Call Site 9 <<
	.uleb128 .Ltmp624-.Ltmp363              #   Call between .Ltmp363 and .Ltmp624
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp624-.Lfunc_begin4         # >> Call Site 10 <<
	.uleb128 .Ltmp625-.Ltmp624              #   Call between .Ltmp624 and .Ltmp625
	.uleb128 .Ltmp626-.Lfunc_begin4         #     jumps to .Ltmp626
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp625-.Lfunc_begin4         # >> Call Site 11 <<
	.uleb128 .Ltmp365-.Ltmp625              #   Call between .Ltmp625 and .Ltmp365
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp365-.Lfunc_begin4         # >> Call Site 12 <<
	.uleb128 .Ltmp366-.Ltmp365              #   Call between .Ltmp365 and .Ltmp366
	.uleb128 .Ltmp375-.Lfunc_begin4         #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp376-.Lfunc_begin4         # >> Call Site 13 <<
	.uleb128 .Ltmp377-.Ltmp376              #   Call between .Ltmp376 and .Ltmp377
	.uleb128 .Ltmp386-.Lfunc_begin4         #     jumps to .Ltmp386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp387-.Lfunc_begin4         # >> Call Site 14 <<
	.uleb128 .Ltmp388-.Ltmp387              #   Call between .Ltmp387 and .Ltmp388
	.uleb128 .Ltmp397-.Lfunc_begin4         #     jumps to .Ltmp397
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp398-.Lfunc_begin4         # >> Call Site 15 <<
	.uleb128 .Ltmp399-.Ltmp398              #   Call between .Ltmp398 and .Ltmp399
	.uleb128 .Ltmp408-.Lfunc_begin4         #     jumps to .Ltmp408
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp409-.Lfunc_begin4         # >> Call Site 16 <<
	.uleb128 .Ltmp410-.Ltmp409              #   Call between .Ltmp409 and .Ltmp410
	.uleb128 .Ltmp419-.Lfunc_begin4         #     jumps to .Ltmp419
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp420-.Lfunc_begin4         # >> Call Site 17 <<
	.uleb128 .Ltmp421-.Ltmp420              #   Call between .Ltmp420 and .Ltmp421
	.uleb128 .Ltmp430-.Lfunc_begin4         #     jumps to .Ltmp430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp431-.Lfunc_begin4         # >> Call Site 18 <<
	.uleb128 .Ltmp432-.Ltmp431              #   Call between .Ltmp431 and .Ltmp432
	.uleb128 .Ltmp441-.Lfunc_begin4         #     jumps to .Ltmp441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp442-.Lfunc_begin4         # >> Call Site 19 <<
	.uleb128 .Ltmp443-.Ltmp442              #   Call between .Ltmp442 and .Ltmp443
	.uleb128 .Ltmp452-.Lfunc_begin4         #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp453-.Lfunc_begin4         # >> Call Site 20 <<
	.uleb128 .Ltmp454-.Ltmp453              #   Call between .Ltmp453 and .Ltmp454
	.uleb128 .Ltmp463-.Lfunc_begin4         #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp464-.Lfunc_begin4         # >> Call Site 21 <<
	.uleb128 .Ltmp469-.Ltmp464              #   Call between .Ltmp464 and .Ltmp469
	.uleb128 .Ltmp470-.Lfunc_begin4         #     jumps to .Ltmp470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp471-.Lfunc_begin4         # >> Call Site 22 <<
	.uleb128 .Ltmp476-.Ltmp471              #   Call between .Ltmp471 and .Ltmp476
	.uleb128 .Ltmp477-.Lfunc_begin4         #     jumps to .Ltmp477
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp478-.Lfunc_begin4         # >> Call Site 23 <<
	.uleb128 .Ltmp479-.Ltmp478              #   Call between .Ltmp478 and .Ltmp479
	.uleb128 .Ltmp488-.Lfunc_begin4         #     jumps to .Ltmp488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp489-.Lfunc_begin4         # >> Call Site 24 <<
	.uleb128 .Ltmp490-.Ltmp489              #   Call between .Ltmp489 and .Ltmp490
	.uleb128 .Ltmp499-.Lfunc_begin4         #     jumps to .Ltmp499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp500-.Lfunc_begin4         # >> Call Site 25 <<
	.uleb128 .Ltmp501-.Ltmp500              #   Call between .Ltmp500 and .Ltmp501
	.uleb128 .Ltmp510-.Lfunc_begin4         #     jumps to .Ltmp510
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp511-.Lfunc_begin4         # >> Call Site 26 <<
	.uleb128 .Ltmp514-.Ltmp511              #   Call between .Ltmp511 and .Ltmp514
	.uleb128 .Ltmp623-.Lfunc_begin4         #     jumps to .Ltmp623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp515-.Lfunc_begin4         # >> Call Site 27 <<
	.uleb128 .Ltmp516-.Ltmp515              #   Call between .Ltmp515 and .Ltmp516
	.uleb128 .Ltmp525-.Lfunc_begin4         #     jumps to .Ltmp525
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp526-.Lfunc_begin4         # >> Call Site 28 <<
	.uleb128 .Ltmp527-.Ltmp526              #   Call between .Ltmp526 and .Ltmp527
	.uleb128 .Ltmp536-.Lfunc_begin4         #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp537-.Lfunc_begin4         # >> Call Site 29 <<
	.uleb128 .Ltmp538-.Ltmp537              #   Call between .Ltmp537 and .Ltmp538
	.uleb128 .Ltmp547-.Lfunc_begin4         #     jumps to .Ltmp547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp548-.Lfunc_begin4         # >> Call Site 30 <<
	.uleb128 .Ltmp549-.Ltmp548              #   Call between .Ltmp548 and .Ltmp549
	.uleb128 .Ltmp558-.Lfunc_begin4         #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp559-.Lfunc_begin4         # >> Call Site 31 <<
	.uleb128 .Ltmp560-.Ltmp559              #   Call between .Ltmp559 and .Ltmp560
	.uleb128 .Ltmp569-.Lfunc_begin4         #     jumps to .Ltmp569
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp570-.Lfunc_begin4         # >> Call Site 32 <<
	.uleb128 .Ltmp571-.Ltmp570              #   Call between .Ltmp570 and .Ltmp571
	.uleb128 .Ltmp580-.Lfunc_begin4         #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp581-.Lfunc_begin4         # >> Call Site 33 <<
	.uleb128 .Ltmp582-.Ltmp581              #   Call between .Ltmp581 and .Ltmp582
	.uleb128 .Ltmp591-.Lfunc_begin4         #     jumps to .Ltmp591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp592-.Lfunc_begin4         # >> Call Site 34 <<
	.uleb128 .Ltmp593-.Ltmp592              #   Call between .Ltmp592 and .Ltmp593
	.uleb128 .Ltmp602-.Lfunc_begin4         #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp603-.Lfunc_begin4         # >> Call Site 35 <<
	.uleb128 .Ltmp604-.Ltmp603              #   Call between .Ltmp603 and .Ltmp604
	.uleb128 .Ltmp613-.Lfunc_begin4         #     jumps to .Ltmp613
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp614-.Lfunc_begin4         # >> Call Site 36 <<
	.uleb128 .Ltmp615-.Ltmp614              #   Call between .Ltmp614 and .Ltmp615
	.uleb128 .Ltmp623-.Lfunc_begin4         #     jumps to .Ltmp623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp616-.Lfunc_begin4         # >> Call Site 37 <<
	.uleb128 .Ltmp619-.Ltmp616              #   Call between .Ltmp616 and .Ltmp619
	.uleb128 .Ltmp620-.Lfunc_begin4         #     jumps to .Ltmp620
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp621-.Lfunc_begin4         # >> Call Site 38 <<
	.uleb128 .Ltmp622-.Ltmp621              #   Call between .Ltmp621 and .Ltmp622
	.uleb128 .Ltmp623-.Lfunc_begin4         #     jumps to .Ltmp623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp622-.Lfunc_begin4         # >> Call Site 39 <<
	.uleb128 .Ltmp627-.Ltmp622              #   Call between .Ltmp622 and .Ltmp627
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp627-.Lfunc_begin4         # >> Call Site 40 <<
	.uleb128 .Ltmp628-.Ltmp627              #   Call between .Ltmp627 and .Ltmp628
	.uleb128 .Ltmp629-.Lfunc_begin4         #     jumps to .Ltmp629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp367-.Lfunc_begin4         # >> Call Site 41 <<
	.uleb128 .Ltmp374-.Ltmp367              #   Call between .Ltmp367 and .Ltmp374
	.uleb128 .Ltmp375-.Lfunc_begin4         #     jumps to .Ltmp375
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp378-.Lfunc_begin4         # >> Call Site 42 <<
	.uleb128 .Ltmp385-.Ltmp378              #   Call between .Ltmp378 and .Ltmp385
	.uleb128 .Ltmp386-.Lfunc_begin4         #     jumps to .Ltmp386
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp389-.Lfunc_begin4         # >> Call Site 43 <<
	.uleb128 .Ltmp396-.Ltmp389              #   Call between .Ltmp389 and .Ltmp396
	.uleb128 .Ltmp397-.Lfunc_begin4         #     jumps to .Ltmp397
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp400-.Lfunc_begin4         # >> Call Site 44 <<
	.uleb128 .Ltmp407-.Ltmp400              #   Call between .Ltmp400 and .Ltmp407
	.uleb128 .Ltmp408-.Lfunc_begin4         #     jumps to .Ltmp408
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp411-.Lfunc_begin4         # >> Call Site 45 <<
	.uleb128 .Ltmp418-.Ltmp411              #   Call between .Ltmp411 and .Ltmp418
	.uleb128 .Ltmp419-.Lfunc_begin4         #     jumps to .Ltmp419
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp422-.Lfunc_begin4         # >> Call Site 46 <<
	.uleb128 .Ltmp429-.Ltmp422              #   Call between .Ltmp422 and .Ltmp429
	.uleb128 .Ltmp430-.Lfunc_begin4         #     jumps to .Ltmp430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp433-.Lfunc_begin4         # >> Call Site 47 <<
	.uleb128 .Ltmp440-.Ltmp433              #   Call between .Ltmp433 and .Ltmp440
	.uleb128 .Ltmp441-.Lfunc_begin4         #     jumps to .Ltmp441
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp444-.Lfunc_begin4         # >> Call Site 48 <<
	.uleb128 .Ltmp451-.Ltmp444              #   Call between .Ltmp444 and .Ltmp451
	.uleb128 .Ltmp452-.Lfunc_begin4         #     jumps to .Ltmp452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp455-.Lfunc_begin4         # >> Call Site 49 <<
	.uleb128 .Ltmp462-.Ltmp455              #   Call between .Ltmp455 and .Ltmp462
	.uleb128 .Ltmp463-.Lfunc_begin4         #     jumps to .Ltmp463
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp480-.Lfunc_begin4         # >> Call Site 50 <<
	.uleb128 .Ltmp487-.Ltmp480              #   Call between .Ltmp480 and .Ltmp487
	.uleb128 .Ltmp488-.Lfunc_begin4         #     jumps to .Ltmp488
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp491-.Lfunc_begin4         # >> Call Site 51 <<
	.uleb128 .Ltmp498-.Ltmp491              #   Call between .Ltmp491 and .Ltmp498
	.uleb128 .Ltmp499-.Lfunc_begin4         #     jumps to .Ltmp499
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp502-.Lfunc_begin4         # >> Call Site 52 <<
	.uleb128 .Ltmp509-.Ltmp502              #   Call between .Ltmp502 and .Ltmp509
	.uleb128 .Ltmp510-.Lfunc_begin4         #     jumps to .Ltmp510
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp517-.Lfunc_begin4         # >> Call Site 53 <<
	.uleb128 .Ltmp524-.Ltmp517              #   Call between .Ltmp517 and .Ltmp524
	.uleb128 .Ltmp525-.Lfunc_begin4         #     jumps to .Ltmp525
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp528-.Lfunc_begin4         # >> Call Site 54 <<
	.uleb128 .Ltmp535-.Ltmp528              #   Call between .Ltmp528 and .Ltmp535
	.uleb128 .Ltmp536-.Lfunc_begin4         #     jumps to .Ltmp536
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp539-.Lfunc_begin4         # >> Call Site 55 <<
	.uleb128 .Ltmp546-.Ltmp539              #   Call between .Ltmp539 and .Ltmp546
	.uleb128 .Ltmp547-.Lfunc_begin4         #     jumps to .Ltmp547
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp550-.Lfunc_begin4         # >> Call Site 56 <<
	.uleb128 .Ltmp557-.Ltmp550              #   Call between .Ltmp550 and .Ltmp557
	.uleb128 .Ltmp558-.Lfunc_begin4         #     jumps to .Ltmp558
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp561-.Lfunc_begin4         # >> Call Site 57 <<
	.uleb128 .Ltmp568-.Ltmp561              #   Call between .Ltmp561 and .Ltmp568
	.uleb128 .Ltmp569-.Lfunc_begin4         #     jumps to .Ltmp569
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp572-.Lfunc_begin4         # >> Call Site 58 <<
	.uleb128 .Ltmp579-.Ltmp572              #   Call between .Ltmp572 and .Ltmp579
	.uleb128 .Ltmp580-.Lfunc_begin4         #     jumps to .Ltmp580
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp583-.Lfunc_begin4         # >> Call Site 59 <<
	.uleb128 .Ltmp590-.Ltmp583              #   Call between .Ltmp583 and .Ltmp590
	.uleb128 .Ltmp591-.Lfunc_begin4         #     jumps to .Ltmp591
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp594-.Lfunc_begin4         # >> Call Site 60 <<
	.uleb128 .Ltmp601-.Ltmp594              #   Call between .Ltmp594 and .Ltmp601
	.uleb128 .Ltmp602-.Lfunc_begin4         #     jumps to .Ltmp602
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp605-.Lfunc_begin4         # >> Call Site 61 <<
	.uleb128 .Ltmp612-.Ltmp605              #   Call between .Ltmp605 and .Ltmp612
	.uleb128 .Ltmp613-.Lfunc_begin4         #     jumps to .Ltmp613
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp612-.Lfunc_begin4         # >> Call Site 62 <<
	.uleb128 .Lfunc_end6-.Ltmp612           #   Call between .Ltmp612 and .Lfunc_end6
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,"axG",@progbits,_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,comdat
	.weak	_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii # -- Begin function _Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.p2align	4, 0x90
	.type	_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,@function
_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii: # @_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.cfi_startproc
# %bb.0:
	subq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 288
	movq	%rdi, 88(%rsp)
	movq	%rsi, 80(%rsp)
	movq	%rdx, 72(%rsp)
	movl	%ecx, 20(%rsp)
	movl	%r8d, 16(%rsp)
	movl	%r9d, 12(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 96(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 112(%rsp)
	leaq	288(%rsp), %rax
	movq	%rax, 120(%rsp)
	leaq	312(%rsp), %rax
	movq	%rax, 128(%rsp)
	leaq	336(%rsp), %rax
	movq	%rax, 136(%rsp)
	leaq	20(%rsp), %rax
	movq	%rax, 144(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 152(%rsp)
	leaq	12(%rsp), %rax
	movq	%rax, 160(%rsp)
	leaq	360(%rsp), %rax
	movq	%rax, 168(%rsp)
	leaq	368(%rsp), %rax
	movq	%rax, 176(%rsp)
	leaq	376(%rsp), %rax
	movq	%rax, 184(%rsp)
	leaq	384(%rsp), %rax
	movq	%rax, 192(%rsp)
	leaq	392(%rsp), %rax
	movq	%rax, 200(%rsp)
	leaq	400(%rsp), %rax
	movq	%rax, 208(%rsp)
	leaq	408(%rsp), %rax
	movq	%rax, 216(%rsp)
	leaq	416(%rsp), %rax
	movq	%rax, 224(%rsp)
	leaq	424(%rsp), %rax
	movq	%rax, 232(%rsp)
	leaq	432(%rsp), %rax
	movq	%rax, 240(%rsp)
	leaq	440(%rsp), %rax
	movq	%rax, 248(%rsp)
	leaq	448(%rsp), %rax
	movq	%rax, 256(%rsp)
	leaq	456(%rsp), %rax
	movq	%rax, 264(%rsp)
	leaq	56(%rsp), %rdi
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	callq	__hipPopCallConfiguration
	movq	56(%rsp), %rsi
	movl	64(%rsp), %edx
	movq	40(%rsp), %rcx
	movl	48(%rsp), %r8d
	leaq	96(%rsp), %r9
	movl	$_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii, %edi
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	40(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$296, %rsp                      # imm = 0x128
	.cfi_adjust_cfa_offset -296
	retq
.Lfunc_end7:
	.size	_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii, .Lfunc_end7-_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.cfi_endproc
                                        # -- End function
	.section	.text._Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_,"axG",@progbits,_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_,comdat
	.weak	_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_ # -- Begin function _Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_
	.p2align	4, 0x90
	.type	_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_,@function
_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_: # @_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_
	.cfi_startproc
# %bb.0:
	subq	$120, %rsp
	.cfi_def_cfa_offset 128
	movq	%rdi, 72(%rsp)
	movl	%esi, 20(%rsp)
	movl	%edx, 16(%rsp)
	movl	%ecx, 12(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 80(%rsp)
	leaq	20(%rsp), %rax
	movq	%rax, 88(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 96(%rsp)
	leaq	12(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	56(%rsp), %rdi
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	callq	__hipPopCallConfiguration
	movq	56(%rsp), %rsi
	movl	64(%rsp), %edx
	movq	40(%rsp), %rcx
	movl	48(%rsp), %r8d
	leaq	80(%rsp), %r9
	movl	$_Z7add_oneIfiEvPT_T0_S2_S2_, %edi
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	40(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$136, %rsp
	.cfi_adjust_cfa_offset -136
	retq
.Lfunc_end8:
	.size	_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_, .Lfunc_end8-_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_
	.cfi_endproc
                                        # -- End function
	.section	.text._Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,"axG",@progbits,_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,comdat
	.weak	_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_ # -- Begin function _Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.p2align	4, 0x90
	.type	_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,@function
_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_: # @_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.cfi_startproc
# %bb.0:
	subq	$152, %rsp
	.cfi_def_cfa_offset 160
	movq	%rdi, 88(%rsp)
	movq	%rsi, 80(%rsp)
	movq	%rdx, 72(%rsp)
	movl	%ecx, 20(%rsp)
	movl	%r8d, 16(%rsp)
	movl	%r9d, 12(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 96(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 112(%rsp)
	leaq	20(%rsp), %rax
	movq	%rax, 120(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 128(%rsp)
	leaq	12(%rsp), %rax
	movq	%rax, 136(%rsp)
	leaq	56(%rsp), %rdi
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	callq	__hipPopCallConfiguration
	movq	56(%rsp), %rsi
	movl	64(%rsp), %edx
	movq	40(%rsp), %rcx
	movl	48(%rsp), %r8d
	leaq	96(%rsp), %r9
	movl	$_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_, %edi
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	40(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$168, %rsp
	.cfi_adjust_cfa_offset -168
	retq
.Lfunc_end9:
	.size	_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_, .Lfunc_end9-_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,"axG",@progbits,_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,comdat
	.weak	_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_ # -- Begin function _Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.p2align	4, 0x90
	.type	_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,@function
_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_: # @_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.cfi_startproc
# %bb.0:
	subq	$152, %rsp
	.cfi_def_cfa_offset 160
	movq	%rdi, 88(%rsp)
	movq	%rsi, 80(%rsp)
	movq	%rdx, 72(%rsp)
	movl	%ecx, 20(%rsp)
	movl	%r8d, 16(%rsp)
	movl	%r9d, 12(%rsp)
	leaq	88(%rsp), %rax
	movq	%rax, 96(%rsp)
	leaq	80(%rsp), %rax
	movq	%rax, 104(%rsp)
	leaq	72(%rsp), %rax
	movq	%rax, 112(%rsp)
	leaq	20(%rsp), %rax
	movq	%rax, 120(%rsp)
	leaq	16(%rsp), %rax
	movq	%rax, 128(%rsp)
	leaq	12(%rsp), %rax
	movq	%rax, 136(%rsp)
	leaq	56(%rsp), %rdi
	leaq	40(%rsp), %rsi
	leaq	32(%rsp), %rdx
	leaq	24(%rsp), %rcx
	callq	__hipPopCallConfiguration
	movq	56(%rsp), %rsi
	movl	64(%rsp), %edx
	movq	40(%rsp), %rcx
	movl	48(%rsp), %r8d
	leaq	96(%rsp), %r9
	movl	$_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_, %edi
	pushq	24(%rsp)
	.cfi_adjust_cfa_offset 8
	pushq	40(%rsp)
	.cfi_adjust_cfa_offset 8
	callq	hipLaunchKernel
	addq	$168, %rsp
	.cfi_adjust_cfa_offset -168
	retq
.Lfunc_end10:
	.size	_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_, .Lfunc_end10-_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_,"axG",@progbits,_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_,comdat
	.weak	_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_ # -- Begin function _ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_
	.p2align	4, 0x90
	.type	_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_,@function
_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_: # @_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_
.Lfunc_begin5:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception5
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen
	movq	%rax, (%rsp)
	movq	%r15, 8(%rsp)
	movq	%r14, %rdi
	callq	strlen
	movq	%rax, 16(%rsp)
	movq	%r14, 24(%rsp)
	movl	$360, %edi                      # imm = 0x168
	callq	_Znwm
	movq	%rax, %r15
	leaq	16(%rax), %r14
	movq	136(%rbx), %rdx
	movq	144(%rbx), %rsi
.Ltmp630:
	movq	%rsp, %rcx
	movq	%r14, %rdi
	callq	_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Ltmp631:
# %bb.1:                                # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE7emplaceIJRNS_12basic_stringIcSt11char_traitsIcESaIcEEESt5arrayISt17basic_string_viewIcS8_ELm2EEEEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_.exit
	leaq	232(%rbx), %rsi
	movq	%r15, %rdi
	callq	_ZNSt8__detail15_List_node_base7_M_hookEPS0_
	incq	248(%rbx)
	testb	$2, 336(%r15)
	jne	.LBB11_5
# %bb.2:
	leaq	208(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB11_5
# %bb.3:
	movq	(%r15), %rdx
	cmpq	%rdi, %rdx
	je	.LBB11_5
# %bb.4:
	movq	%r15, %rsi
	callq	_ZNSt8__detail15_List_node_base11_M_transferEPS0_S1_
	incq	224(%rbx)
	decq	248(%rbx)
.LBB11_5:                               # %_ZNSt7__cxx114listIN8argparse8ArgumentESaIS2_EE6spliceESt20_List_const_iteratorIS2_ERS4_S6_.exit
	movq	%r15, 32(%rsp)
	movq	16(%r15), %r13
	movq	24(%r15), %rbp
	cmpq	%rbp, %r13
	je	.LBB11_8
# %bb.6:                                # %.lr.ph.i
	addq	$256, %rbx                      # imm = 0x100
	movq	%rsp, %r15
	leaq	32(%rsp), %r12
	.p2align	4, 0x90
.LBB11_7:                               # =>This Inner Loop Header: Depth=1
	movq	(%r13), %rax
	movq	8(%r13), %rcx
	movq	%rcx, (%rsp)
	movq	%rax, 8(%rsp)
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_
	addq	$32, %r13
	cmpq	%rbp, %r13
	jne	.LBB11_7
.LBB11_8:                               # %_ZN8argparse14ArgumentParser14index_argumentESt14_List_iteratorINS_8ArgumentEE.exit
	movq	%r14, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB11_9:                               # %_ZNSt15__allocated_ptrISaISt10_List_nodeIN8argparse8ArgumentEEEED2Ev.exit10.i.i
	.cfi_def_cfa_offset 96
.Ltmp632:
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end11:
	.size	_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_, .Lfunc_end11-_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_,"aG",@progbits,_ZN8argparse14ArgumentParser12add_argumentIJPKcS3_EEERNS_8ArgumentEDpT_,comdat
	.p2align	2, 0x0
GCC_except_table11:
.Lexception5:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end5-.Lcst_begin5
.Lcst_begin5:
	.uleb128 .Lfunc_begin5-.Lfunc_begin5    # >> Call Site 1 <<
	.uleb128 .Ltmp630-.Lfunc_begin5         #   Call between .Lfunc_begin5 and .Ltmp630
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp630-.Lfunc_begin5         # >> Call Site 2 <<
	.uleb128 .Ltmp631-.Ltmp630              #   Call between .Ltmp630 and .Ltmp631
	.uleb128 .Ltmp632-.Lfunc_begin5         #     jumps to .Ltmp632
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp631-.Lfunc_begin5         # >> Call Site 3 <<
	.uleb128 .Lfunc_end11-.Ltmp631          #   Call between .Ltmp631 and .Lfunc_end11
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse8Argument13default_valueIbEERS0_OT_,"axG",@progbits,_ZN8argparse8Argument13default_valueIbEERS0_OT_,comdat
	.weak	_ZN8argparse8Argument13default_valueIbEERS0_OT_ # -- Begin function _ZN8argparse8Argument13default_valueIbEERS0_OT_
	.p2align	4, 0x90
	.type	_ZN8argparse8Argument13default_valueIbEERS0_OT_,@function
_ZN8argparse8Argument13default_valueIbEERS0_OT_: # @_ZN8argparse8Argument13default_valueIbEERS0_OT_
.Lfunc_begin6:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception6
# %bb.0:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$48, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	$0, 304(%rdi)
	xorl	%r13d, %r13d
	cmpb	$0, (%rsi)
	movl	$.L.str.42, %eax
	movl	$.L.str.41, %esi
	cmoveq	%rax, %rsi
	sete	%r13b
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	leaq	4(%r13), %r12
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	%r12, 16(%rsp)
	movb	$0, 28(%rsp,%r13)
	movq	120(%rbx), %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
	movq	16(%rsp), %rax
	movq	%rax, 128(%rbx)
	movq	120(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB12_2
# %bb.1:
	callq	_ZdlPv
.LBB12_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movzbl	(%r14), %r8d
	leaq	8(%rsp), %r12
	movl	$vsnprintf, %esi
	movl	$16, %edx
	movl	$.L.str.43, %ecx
	movq	%r12, %rdi
	xorl	%eax, %eax
	callq	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
	leaq	168(%rbx), %rcx
	cmpb	$0, 184(%rbx)
	je	.LBB12_16
# %bb.3:
	movq	8(%rsp), %rsi
	cmpq	%r15, %rsi
	je	.LBB12_4
# %bb.9:
	movq	152(%rbx), %rax
	cmpq	%rcx, %rax
	je	.LBB12_10
# %bb.12:
	movq	168(%rbx), %rcx
	movq	%rsi, 152(%rbx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rbx)
	testq	%rax, %rax
	je	.LBB12_11
# %bb.13:
	movq	%rax, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB12_14
.LBB12_16:
	movq	%rcx, 152(%rbx)
	movq	8(%rsp), %rax
	leaq	24(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB12_17
# %bb.18:
	movq	%rax, 152(%rbx)
	movq	24(%rsp), %rax
	movq	%rax, 168(%rbx)
	jmp	.LBB12_19
.LBB12_4:
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB12_8
# %bb.5:
	movq	152(%rbx), %rdi
	cmpq	$1, %rdx
	jne	.LBB12_7
# %bb.6:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB12_8
.LBB12_10:                              # %.thread.i.i
	movq	%rsi, 152(%rbx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 160(%rbx)
.LBB12_11:
	movq	%r15, 8(%rsp)
	movq	%r15, %rax
	jmp	.LBB12_14
.LBB12_17:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rcx)
.LBB12_19:                              # %_ZNSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSIS5_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS6_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES9_ISt6__and_IJSt9is_scalarIS5_ESA_IS5_NSt5decayISD_E4typeEEEEESt16is_constructibleIS5_JSD_EESt13is_assignableIRS5_SD_EEERS6_E4typeEOSD_.exit.thread
	movq	16(%rsp), %rax
	movq	%rax, 160(%rbx)
	movb	$1, 184(%rbx)
	jmp	.LBB12_20
.LBB12_7:
	callq	memcpy@PLT
.LBB12_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i
	movq	16(%rsp), %rax
	movq	%rax, 160(%rbx)
	movq	152(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB12_14:                              # %_ZNSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEaSIS5_EENSt9enable_ifIX7__and_vISt6__not_ISt7is_sameIS6_NSt9remove_cvINSt16remove_referenceIT_E4typeEE4typeEEES9_ISt6__and_IJSt9is_scalarIS5_ESA_IS5_NSt5decayISD_E4typeEEEEESt16is_constructibleIS5_JSD_EESt13is_assignableIRS5_SD_EEERS6_E4typeEOSD_.exit
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB12_20
# %bb.15:
	callq	_ZdlPv
.LBB12_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	leaq	104(%rbx), %r15
	movq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, 8(%rsp)
	movq	$0, 16(%rsp)
	movzbl	(%r14), %eax
	movb	%al, 16(%rsp)
	cmpq	%r15, %r12
	je	.LBB12_21
# %bb.22:
	movq	(%r15), %rax
	testq	%rax, %rax
	je	.LBB12_23
# %bb.24:
.Ltmp633:
	movl	$3, %edi
	movq	%r15, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp634:
# %bb.25:
	movq	$0, (%r15)
	movq	8(%rsp), %rcx
	jmp	.LBB12_26
.LBB12_21:
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %eax
	jmp	.LBB12_28
.LBB12_23:
	movl	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %ecx
.LBB12_26:                              # %_ZNSt3any5resetEv.exit7.i.i
	movq	%r15, 40(%rsp)
.Ltmp636:
	leaq	8(%rsp), %rsi
	leaq	40(%rsp), %rdx
	movl	$4, %edi
	callq	*%rcx
.Ltmp637:
# %bb.27:                               # %_ZNSt3anyaSEOS_.exit.i
	movq	8(%rsp), %rax
	testq	%rax, %rax
	je	.LBB12_29
.LBB12_28:                              # %_ZNSt3anyaSEOS_.exit.thread.i
.Ltmp639:
	leaq	8(%rsp), %rsi
	movl	$3, %edi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp640:
.LBB12_29:                              # %_ZNSt3anyaSIbEENSt9enable_ifIXsr21is_copy_constructibleINS1_IXntsr7is_sameINSt5decayIT_E4typeES_EE5valueES5_E4typeEEE5valueERS_E4typeEOS3_.exit
	movq	%rbx, %rax
	addq	$48, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB12_30:
	.cfi_def_cfa_offset 96
.Ltmp635:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB12_31:
.Ltmp638:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB12_32:
.Ltmp641:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end12:
	.size	_ZN8argparse8Argument13default_valueIbEERS0_OT_, .Lfunc_end12-_ZN8argparse8Argument13default_valueIbEERS0_OT_
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse8Argument13default_valueIbEERS0_OT_,"aG",@progbits,_ZN8argparse8Argument13default_valueIbEERS0_OT_,comdat
	.p2align	2, 0x0
GCC_except_table12:
.Lexception6:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase3-.Lttbaseref3
.Lttbaseref3:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end6-.Lcst_begin6
.Lcst_begin6:
	.uleb128 .Lfunc_begin6-.Lfunc_begin6    # >> Call Site 1 <<
	.uleb128 .Ltmp633-.Lfunc_begin6         #   Call between .Lfunc_begin6 and .Ltmp633
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp633-.Lfunc_begin6         # >> Call Site 2 <<
	.uleb128 .Ltmp634-.Ltmp633              #   Call between .Ltmp633 and .Ltmp634
	.uleb128 .Ltmp635-.Lfunc_begin6         #     jumps to .Ltmp635
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp636-.Lfunc_begin6         # >> Call Site 3 <<
	.uleb128 .Ltmp637-.Ltmp636              #   Call between .Ltmp636 and .Ltmp637
	.uleb128 .Ltmp638-.Lfunc_begin6         #     jumps to .Ltmp638
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp639-.Lfunc_begin6         # >> Call Site 4 <<
	.uleb128 .Ltmp640-.Ltmp639              #   Call between .Ltmp639 and .Ltmp640
	.uleb128 .Ltmp641-.Lfunc_begin6         #     jumps to .Ltmp641
	.byte	1                               #   On action: 1
.Lcst_end6:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase3:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3anyD2Ev,"axG",@progbits,_ZNSt3anyD2Ev,comdat
	.weak	_ZNSt3anyD2Ev                   # -- Begin function _ZNSt3anyD2Ev
	.p2align	4, 0x90
	.type	_ZNSt3anyD2Ev,@function
_ZNSt3anyD2Ev:                          # @_ZNSt3anyD2Ev
.Lfunc_begin7:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception7
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	(%rdi), %rax
	testq	%rax, %rax
	je	.LBB13_3
# %bb.1:
.Ltmp642:
	movq	%rdi, %rbx
	movl	$3, %edi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp643:
# %bb.2:
	movq	$0, (%rbx)
.LBB13_3:                               # %_ZNSt3any5resetEv.exit
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB13_4:
	.cfi_def_cfa_offset 16
.Ltmp644:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end13:
	.size	_ZNSt3anyD2Ev, .Lfunc_end13-_ZNSt3anyD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3anyD2Ev,"aG",@progbits,_ZNSt3anyD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table13:
.Lexception7:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase4-.Lttbaseref4
.Lttbaseref4:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end7-.Lcst_begin7
.Lcst_begin7:
	.uleb128 .Ltmp642-.Lfunc_begin7         # >> Call Site 1 <<
	.uleb128 .Ltmp643-.Ltmp642              #   Call between .Ltmp642 and .Ltmp643
	.uleb128 .Ltmp644-.Lfunc_begin7         #     jumps to .Ltmp644
	.byte	1                               #   On action: 1
.Lcst_end7:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase4:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev,"axG",@progbits,_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev,comdat
	.weak	_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev # -- Begin function _ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev,@function
_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev: # @_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	je	.LBB14_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	movq	%rdi, %r14
	jmp	.LBB14_2
	.p2align	4, 0x90
.LBB14_4:                               # %_ZSt8_DestroyIN8argparse14ArgumentParser22MutuallyExclusiveGroupEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB14_2 Depth=1
	addq	$40, %rbx
	cmpq	%r15, %rbx
	je	.LBB14_5
.LBB14_2:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	16(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB14_4
# %bb.3:                                #   in Loop: Header=BB14_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB14_4
.LBB14_5:                               # %_ZSt8_DestroyIPN8argparse14ArgumentParser22MutuallyExclusiveGroupES2_EvT_S4_RSaIT0_E.exitthread-pre-split
	movq	(%r14), %rbx
.LBB14_6:                               # %_ZSt8_DestroyIPN8argparse14ArgumentParser22MutuallyExclusiveGroupES2_EvT_S4_RSaIT0_E.exit
	testq	%rbx, %rbx
	je	.LBB14_7
# %bb.8:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB14_7:                               # %_ZNSt12_Vector_baseIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end14:
	.size	_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev, .Lfunc_end14-_ZNSt6vectorIN8argparse14ArgumentParser22MutuallyExclusiveGroupESaIS2_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev,"axG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev,comdat
	.weak	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev # -- Begin function _ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev,@function
_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev: # @_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev
.Lfunc_begin8:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception8
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rsi
.Ltmp645:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
.Ltmp646:
# %bb.1:                                # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EED2Ev.exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB15_2:
	.cfi_def_cfa_offset 16
.Ltmp647:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end15:
	.size	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev, .Lfunc_end15-_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev,"aG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table15:
.Lexception8:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase5-.Lttbaseref5
.Lttbaseref5:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end8-.Lcst_begin8
.Lcst_begin8:
	.uleb128 .Ltmp645-.Lfunc_begin8         # >> Call Site 1 <<
	.uleb128 .Ltmp646-.Ltmp645              #   Call between .Ltmp645 and .Ltmp646
	.uleb128 .Ltmp647-.Lfunc_begin8         #     jumps to .Ltmp647
	.byte	1                               #   On action: 1
.Lcst_end8:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase5:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev,"axG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev,comdat
	.weak	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev # -- Begin function _ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev,@function
_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev: # @_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev
.Lfunc_begin9:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception9
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rsi
.Ltmp648:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
.Ltmp649:
# %bb.1:                                # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EED2Ev.exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB16_2:
	.cfi_def_cfa_offset 16
.Ltmp650:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end16:
	.size	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev, .Lfunc_end16-_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev,"aG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table16:
.Lexception9:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase6-.Lttbaseref6
.Lttbaseref6:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end9-.Lcst_begin9
.Lcst_begin9:
	.uleb128 .Ltmp648-.Lfunc_begin9         # >> Call Site 1 <<
	.uleb128 .Ltmp649-.Ltmp648              #   Call between .Ltmp648 and .Ltmp649
	.uleb128 .Ltmp650-.Lfunc_begin9         #     jumps to .Ltmp650
	.byte	1                               #   On action: 1
.Lcst_end9:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase6:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev,"axG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev,comdat
	.weak	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev # -- Begin function _ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev,@function
_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev: # @_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev
.Lfunc_begin10:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception10
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rdi), %rsi
.Ltmp651:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
.Ltmp652:
# %bb.1:                                # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EED2Ev.exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB17_2:
	.cfi_def_cfa_offset 16
.Ltmp653:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end17:
	.size	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev, .Lfunc_end17-_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev,"aG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table17:
.Lexception10:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase7-.Lttbaseref7
.Lttbaseref7:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end10-.Lcst_begin10
.Lcst_begin10:
	.uleb128 .Ltmp651-.Lfunc_begin10        # >> Call Site 1 <<
	.uleb128 .Ltmp652-.Ltmp651              #   Call between .Ltmp651 and .Ltmp652
	.uleb128 .Ltmp653-.Lfunc_begin10        #     jumps to .Ltmp653
	.byte	1                               #   On action: 1
.Lcst_end10:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase7:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev,"axG",@progbits,_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev,comdat
	.weak	_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev # -- Begin function _ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev,@function
_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev: # @_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %r14
	cmpq	%rdi, %r14
	je	.LBB18_3
# %bb.1:                                # %.lr.ph.i.preheader
	movq	%rdi, %rbx
	.p2align	4, 0x90
.LBB18_2:                               # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %r15
	leaq	16(%r14), %rdi
	callq	_ZN8argparse8ArgumentD2Ev
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r15, %r14
	cmpq	%rbx, %r15
	jne	.LBB18_2
.LBB18_3:                               # %_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EE8_M_clearEv.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end18:
	.size	_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev, .Lfunc_end18-_ZNSt7__cxx1110_List_baseIN8argparse8ArgumentESaIS2_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,"axG",@progbits,_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,comdat
	.weak	_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE # -- Begin function _ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
	.p2align	4, 0x90
	.type	_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,@function
_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE: # @_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Lfunc_begin11:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception11
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	leaq	56(%rdi), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	$0, 32(%rdi)
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	%rax, 40(%rdi)
	movq	$0, 48(%rdi)
	movb	$0, 56(%rdi)
	leaq	88(%rdi), %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	movq	%rax, 72(%rdi)
	movq	$0, 80(%rdi)
	movb	$0, 88(%rdi)
	movups	%xmm0, 104(%rdi)
	leaq	136(%rdi), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, 120(%rdi)
	movq	$0, 128(%rdi)
	movb	$0, 136(%rdi)
	movb	$0, 184(%rdi)
	movups	%xmm0, 192(%rdi)
	movb	$0, 232(%rdi)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_, 264(%rdi)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation, 256(%rdi)
	movb	$0, 272(%rdi)
	movups	%xmm0, 280(%rdi)
	movq	$0, 296(%rdi)
	movq	$1, 304(%rdi)
	movq	$1, 312(%rdi)
	andb	$-2, 320(%rdi)
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	(%rcx), %r13
	testq	%r13, %r13
	je	.LBB19_9
# %bb.1:
	testq	%r12, %r12
	je	.LBB19_9
# %bb.2:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
	movq	8(%r14), %rbp
	movsbl	(%rbp), %esi
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	memchr
	testq	%rax, %rax
	je	.LBB19_9
# %bb.3:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB19_9
# %bb.4:
	decq	%r13
	je	.LBB19_9
# %bb.5:
	incq	%rbp
.Ltmp654:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp655:
# %bb.6:                                # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit
	testb	%al, %al
	je	.LBB19_7
.LBB19_9:                               # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
	movq	16(%r14), %r13
	testq	%r13, %r13
	je	.LBB19_60
# %bb.10:                               # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
	testq	%r12, %r12
	je	.LBB19_60
# %bb.11:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i22
	movq	24(%r14), %rbp
	movsbl	(%rbp), %esi
	movq	%r15, %rdi
	movq	%r12, %rdx
	callq	memchr
	testq	%rax, %rax
	je	.LBB19_60
# %bb.12:                               # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i22
	subq	%r15, %rax
	cmpq	$-1, %rax
	je	.LBB19_60
# %bb.13:
	decq	%r13
	je	.LBB19_60
# %bb.14:
	incq	%rbp
.Ltmp656:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp657:
# %bb.15:                               # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit25
	movzbl	320(%rbx), %ecx
	testb	%al, %al
	jne	.LBB19_16
	jmp	.LBB19_8
.LBB19_60:                              # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit25.thread
	movzbl	320(%rbx), %ecx
.LBB19_16:
	xorl	%eax, %eax
.LBB19_17:
	andb	$-31, %cl
	orb	%al, %cl
	movb	%cl, 320(%rbx)
	movq	%r12, 328(%rbx)
	movq	%r15, 336(%rbx)
	movq	8(%rbx), %r15
	cmpq	16(%rbx), %r15
	je	.LBB19_26
# %bb.18:
	movq	(%r14), %r12
	movq	8(%r14), %r13
	leaq	16(%r15), %rax
	movq	%rax, (%r15)
	movq	%r12, 8(%rsp)
	cmpq	$16, %r12
	jb	.LBB19_21
# %bb.19:                               # %.noexc6.i.i.i.i.i.i
.Ltmp658:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp659:
# %bb.20:                               # %.noexc26
	movq	%rax, (%r15)
	movq	8(%rsp), %rcx
	movq	%rcx, 16(%r15)
.LBB19_21:                              # %._crit_edge.i.i.i.i.i.i.i.i.i
	testq	%r12, %r12
	je	.LBB19_25
# %bb.22:                               # %._crit_edge.i.i.i.i.i.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB19_24
# %bb.23:
	movzbl	(%r13), %ecx
	movb	%cl, (%rax)
	jmp	.LBB19_25
.LBB19_26:
.Ltmp660:
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp661:
# %bb.27:                               # %._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRSt17basic_string_viewIcS3_EEEERS5_DpOT_.exit_crit_edge
	movq	8(%rbx), %r15
	cmpq	16(%rbx), %r15
	jne	.LBB19_29
.LBB19_37:
.Ltmp664:
	addq	$16, %r14
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp665:
# %bb.38:                               # %._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRSt17basic_string_viewIcS3_EEEERS5_DpOT_.exit38_crit_edge
	movq	8(%rbx), %r14
	movq	(%rbx), %r15
	cmpq	%r14, %r15
	jne	.LBB19_40
	jmp	.LBB19_47
.LBB19_24:
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB19_25:                              # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRSt17basic_string_viewIcS3_EEEEvRS6_PT_DpOT0_.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 8(%r15)
	movq	(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %r15
	addq	$32, %r15
	movq	%r15, 8(%rbx)
	cmpq	16(%rbx), %r15
	je	.LBB19_37
.LBB19_29:
	movq	16(%r14), %r12
	movq	24(%r14), %r14
	leaq	16(%r15), %rax
	movq	%rax, (%r15)
	movq	%r12, 8(%rsp)
	cmpq	$16, %r12
	jb	.LBB19_32
# %bb.30:                               # %.noexc6.i.i.i.i.i.i32
.Ltmp662:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp663:
# %bb.31:                               # %.noexc36
	movq	%rax, (%r15)
	movq	8(%rsp), %rcx
	movq	%rcx, 16(%r15)
.LBB19_32:                              # %._crit_edge.i.i.i.i.i.i.i.i.i33
	testq	%r12, %r12
	je	.LBB19_36
# %bb.33:                               # %._crit_edge.i.i.i.i.i.i.i.i.i33
	cmpq	$1, %r12
	jne	.LBB19_35
# %bb.34:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB19_36
.LBB19_35:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB19_36:                              # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRSt17basic_string_viewIcS3_EEEEvRS6_PT_DpOT0_.exit.i34
	movq	8(%rsp), %rax
	movq	%rax, 8(%r15)
	movq	(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %r14
	addq	$32, %r14
	movq	%r14, 8(%rbx)
	movq	(%rbx), %r15
	cmpq	%r14, %r15
	je	.LBB19_47
.LBB19_40:
	movq	%r14, %r12
	subq	%r15, %r12
	movq	%r12, %rax
	sarq	$5, %rax
	bsrq	%rax, %rdx
	xorq	$63, %rdx
	addq	%rdx, %rdx
	xorq	$126, %rdx
.Ltmp666:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
.Ltmp667:
# %bb.41:                               # %.noexc40
	cmpq	$513, %r12                      # imm = 0x201
	jl	.LBB19_46
# %bb.42:
	leaq	512(%r15), %r12
.Ltmp670:
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
.Ltmp671:
	.p2align	4, 0x90
# %bb.43:                               # %.noexc41
	cmpq	%r14, %r12
	je	.LBB19_47
.LBB19_44:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp673:
	movq	%r12, %rdi
	callq	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
.Ltmp674:
# %bb.45:                               # %.noexc42
                                        #   in Loop: Header=BB19_44 Depth=1
	addq	$32, %r12
	cmpq	%r14, %r12
	jne	.LBB19_44
	jmp	.LBB19_47
.LBB19_46:
.Ltmp668:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
.Ltmp669:
.LBB19_47:                              # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISH_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EvSN_SN_SQ_.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB19_7:                               # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit25.thread48
	.cfi_def_cfa_offset 96
	movzbl	320(%rbx), %ecx
.LBB19_8:
	movb	$2, %al
	jmp	.LBB19_17
.LBB19_49:                              # %.loopexit.split-lp
.Ltmp672:
	jmp	.LBB19_50
.LBB19_48:                              # %.loopexit
.Ltmp675:
.LBB19_50:
	movq	%rax, %r14
	leaq	192(%rbx), %r15
	leaq	208(%rbx), %r12
	leaq	240(%rbx), %r13
	leaq	280(%rbx), %rdi
	callq	_ZNSt6vectorISt3anySaIS0_EED2Ev
	movq	%r13, %rdi
	callq	_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev
	movq	%r12, %rdi
	callq	_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev
	movq	%r15, %rdi
	callq	_ZNSt3anyD2Ev
	cmpb	$0, 184(%rbx)
	je	.LBB19_53
# %bb.51:
	movb	$0, 184(%rbx)
	movq	152(%rbx), %rdi
	leaq	168(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB19_53
# %bb.52:
	callq	_ZdlPv
.LBB19_53:                              # %_ZNSt14_Optional_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ELb0EED2Ev.exit
	leaq	104(%rbx), %r15
	movq	120(%rbx), %rdi
	cmpq	16(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB19_55
# %bb.54:
	callq	_ZdlPv
.LBB19_55:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r15, %rdi
	callq	_ZNSt3anyD2Ev
	movq	72(%rbx), %rdi
	cmpq	24(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB19_56
# %bb.57:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit45
	movq	40(%rbx), %rdi
	cmpq	32(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB19_58
.LBB19_59:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46
	movq	%rbx, %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB19_56:
	callq	_ZdlPv
	movq	40(%rbx), %rdi
	cmpq	32(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB19_59
.LBB19_58:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end19:
	.size	_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE, .Lfunc_end19-_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,"aG",@progbits,_ZN8argparse8ArgumentC2ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table19:
.Lexception11:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end11-.Lcst_begin11
.Lcst_begin11:
	.uleb128 .Ltmp654-.Lfunc_begin11        # >> Call Site 1 <<
	.uleb128 .Ltmp665-.Ltmp654              #   Call between .Ltmp654 and .Ltmp665
	.uleb128 .Ltmp672-.Lfunc_begin11        #     jumps to .Ltmp672
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp665-.Lfunc_begin11        # >> Call Site 2 <<
	.uleb128 .Ltmp662-.Ltmp665              #   Call between .Ltmp665 and .Ltmp662
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp662-.Lfunc_begin11        # >> Call Site 3 <<
	.uleb128 .Ltmp663-.Ltmp662              #   Call between .Ltmp662 and .Ltmp663
	.uleb128 .Ltmp672-.Lfunc_begin11        #     jumps to .Ltmp672
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp663-.Lfunc_begin11        # >> Call Site 4 <<
	.uleb128 .Ltmp666-.Ltmp663              #   Call between .Ltmp663 and .Ltmp666
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp666-.Lfunc_begin11        # >> Call Site 5 <<
	.uleb128 .Ltmp671-.Ltmp666              #   Call between .Ltmp666 and .Ltmp671
	.uleb128 .Ltmp672-.Lfunc_begin11        #     jumps to .Ltmp672
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp673-.Lfunc_begin11        # >> Call Site 6 <<
	.uleb128 .Ltmp674-.Ltmp673              #   Call between .Ltmp673 and .Ltmp674
	.uleb128 .Ltmp675-.Lfunc_begin11        #     jumps to .Ltmp675
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp668-.Lfunc_begin11        # >> Call Site 7 <<
	.uleb128 .Ltmp669-.Ltmp668              #   Call between .Ltmp668 and .Ltmp669
	.uleb128 .Ltmp672-.Lfunc_begin11        #     jumps to .Ltmp672
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp669-.Lfunc_begin11        # >> Call Site 8 <<
	.uleb128 .Lfunc_end19-.Ltmp669          #   Call between .Ltmp669 and .Lfunc_end19
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_,"axG",@progbits,_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_,comdat
	.weak	_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_ # -- Begin function _ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_
	.p2align	4, 0x90
	.type	_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_,@function
_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_: # @_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	xorl	%eax, %eax
	testq	%rdi, %rdi
	je	.LBB20_6
# %bb.1:
	testq	%rdx, %rdx
	je	.LBB20_6
# %bb.2:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	movq	%rcx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movsbl	(%rsi), %esi
	movq	%rcx, %rdi
	callq	memchr
	movq	%rax, %rcx
	xorl	%eax, %eax
	testq	%rcx, %rcx
	je	.LBB20_6
# %bb.3:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	subq	%r15, %rcx
	cmpq	$-1, %rcx
	je	.LBB20_6
# %bb.4:
	decq	%r14
	je	.LBB20_7
# %bb.5:
	incq	%rbx
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
                                        # kill: def $al killed $al def $eax
	xorb	$1, %al
.LBB20_6:                               # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB20_7:
	.cfi_def_cfa_offset 32
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end20:
	.size	_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_, .Lfunc_end20-_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorISt3anySaIS0_EED2Ev,"axG",@progbits,_ZNSt6vectorISt3anySaIS0_EED2Ev,comdat
	.weak	_ZNSt6vectorISt3anySaIS0_EED2Ev # -- Begin function _ZNSt6vectorISt3anySaIS0_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt3anySaIS0_EED2Ev,@function
_ZNSt6vectorISt3anySaIS0_EED2Ev:        # @_ZNSt6vectorISt3anySaIS0_EED2Ev
.Lfunc_begin12:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception12
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	je	.LBB21_7
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	movq	%rdi, %r14
	jmp	.LBB21_2
	.p2align	4, 0x90
.LBB21_4:                               #   in Loop: Header=BB21_2 Depth=1
	movq	$0, (%rbx)
.LBB21_5:                               # %_ZSt8_DestroyISt3anyEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB21_2 Depth=1
	addq	$16, %rbx
	cmpq	%r15, %rbx
	je	.LBB21_6
.LBB21_2:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB21_5
# %bb.3:                                #   in Loop: Header=BB21_2 Depth=1
.Ltmp676:
	movl	$3, %edi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp677:
	jmp	.LBB21_4
.LBB21_6:                               # %_ZSt8_DestroyIPSt3anyS0_EvT_S2_RSaIT0_E.exitthread-pre-split
	movq	(%r14), %rbx
.LBB21_7:                               # %_ZSt8_DestroyIPSt3anyS0_EvT_S2_RSaIT0_E.exit
	testq	%rbx, %rbx
	je	.LBB21_8
# %bb.10:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB21_8:                               # %_ZNSt12_Vector_baseISt3anySaIS0_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB21_9:
	.cfi_def_cfa_offset 32
.Ltmp678:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end21:
	.size	_ZNSt6vectorISt3anySaIS0_EED2Ev, .Lfunc_end21-_ZNSt6vectorISt3anySaIS0_EED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt3anySaIS0_EED2Ev,"aG",@progbits,_ZNSt6vectorISt3anySaIS0_EED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table21:
.Lexception12:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase8-.Lttbaseref8
.Lttbaseref8:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end12-.Lcst_begin12
.Lcst_begin12:
	.uleb128 .Ltmp676-.Lfunc_begin12        # >> Call Site 1 <<
	.uleb128 .Ltmp677-.Ltmp676              #   Call between .Ltmp676 and .Ltmp677
	.uleb128 .Ltmp678-.Lfunc_begin12        #     jumps to .Ltmp678
	.byte	1                               #   On action: 1
.Lcst_end12:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase8:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev,"axG",@progbits,_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev,comdat
	.weak	_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev # -- Begin function _ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev,@function
_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev: # @_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev
.Lfunc_begin13:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception13
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$16, %rsp
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movzbl	32(%rdi), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp679:
	leaq	15(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp680:
# %bb.1:
	movb	$-1, 32(%rbx)
	addq	$16, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB22_2:
	.cfi_def_cfa_offset 32
.Ltmp681:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end22:
	.size	_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev, .Lfunc_end22-_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev,"aG",@progbits,_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev,comdat
	.p2align	2, 0x0
GCC_except_table22:
.Lexception13:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase9-.Lttbaseref9
.Lttbaseref9:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end13-.Lcst_begin13
.Lcst_begin13:
	.uleb128 .Ltmp679-.Lfunc_begin13        # >> Call Site 1 <<
	.uleb128 .Ltmp680-.Ltmp679              #   Call between .Ltmp679 and .Ltmp680
	.uleb128 .Ltmp681-.Lfunc_begin13        #     jumps to .Ltmp681
	.byte	1                               #   On action: 1
.Lcst_end13:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase9:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev,"axG",@progbits,_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev,comdat
	.weak	_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev # -- Begin function _ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev,@function
_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev: # @_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	cmpb	$0, 24(%rdi)
	je	.LBB23_7
# %bb.1:
	movq	%rdi, %r14
	movb	$0, 24(%rdi)
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	jne	.LBB23_2
# %bb.6:                                # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i
	testq	%rbx, %rbx
	je	.LBB23_7
.LBB23_8:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
	.p2align	4, 0x90
.LBB23_4:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB23_2 Depth=1
	.cfi_def_cfa_offset 32
	addq	$16, %rbx
	cmpq	%r15, %rbx
	je	.LBB23_5
.LBB23_2:                               # %.lr.ph.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB23_4
# %bb.3:                                #   in Loop: Header=BB23_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB23_4
.LBB23_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i
	movq	(%r14), %rbx
	testq	%rbx, %rbx
	jne	.LBB23_8
.LBB23_7:                               # %_ZNSt17_Optional_payloadISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0ELb0EED2Ev.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end23:
	.size	_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev, .Lfunc_end23-_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.p2align	4, 0x90
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	8(%rdi), %r15
	cmpq	%r15, %rbx
	je	.LBB24_6
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	movq	%rdi, %r14
	jmp	.LBB24_2
	.p2align	4, 0x90
.LBB24_4:                               # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i
                                        #   in Loop: Header=BB24_2 Depth=1
	addq	$16, %rbx
	cmpq	%r15, %rbx
	je	.LBB24_5
.LBB24_2:                               # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB24_4
# %bb.3:                                #   in Loop: Header=BB24_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB24_4
.LBB24_5:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split
	movq	(%r14), %rbx
.LBB24_6:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit
	testq	%rbx, %rbx
	je	.LBB24_7
# %bb.8:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB24_7:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end24:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev, .Lfunc_end24-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_,"axG",@progbits,_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_,comdat
	.weak	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_ # -- Begin function _ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_,@function
_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_: # @_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_
.Lfunc_begin14:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception14
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	(%rdx), %r14
	movq	8(%rdx), %r15
	movq	%r15, (%rsp)
	movq	%r12, %rax
	cmpq	$16, %r15
	jb	.LBB25_2
# %bb.1:                                # %.noexc6.i.i
	leaq	8(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
.LBB25_2:                               # %._crit_edge.i.i.i.i.i
	testq	%r15, %r15
	je	.LBB25_6
# %bb.3:                                # %._crit_edge.i.i.i.i.i
	cmpq	$1, %r15
	jne	.LBB25_5
# %bb.4:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB25_6
.LBB25_5:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB25_6:                               # %_ZNK8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_clES9_.exit
	movq	(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	$_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, (%rbx)
	movq	$0, 8(%rbx)
.Ltmp682:
	movl	$32, %edi
	callq	_Znwm
.Ltmp683:
# %bb.7:                                # %.noexc
	movq	%rax, %rcx
	addq	$16, %rcx
	movq	%rcx, (%rax)
	movq	8(%rsp), %rdx
	cmpq	%r12, %rdx
	je	.LBB25_8
# %bb.9:
	movq	%rdx, (%rax)
	movq	24(%rsp), %rcx
	movq	%rcx, 16(%rax)
	jmp	.LBB25_10
.LBB25_8:
	movups	(%r12), %xmm0
	movups	%xmm0, (%rcx)
.LBB25_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	16(%rsp), %rcx
	movq	%rcx, 8(%rax)
	movq	%rax, 8(%rbx)
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB25_11:
	.cfi_def_cfa_offset 80
.Ltmp684:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB25_13
# %bb.12:
	callq	_ZdlPv
.LBB25_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit3
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end25:
	.size	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_, .Lfunc_end25-_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_,"aG",@progbits,_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_,comdat
	.p2align	2, 0x0
GCC_except_table25:
.Lexception14:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end14-.Lcst_begin14
.Lcst_begin14:
	.uleb128 .Lfunc_begin14-.Lfunc_begin14  # >> Call Site 1 <<
	.uleb128 .Ltmp682-.Lfunc_begin14        #   Call between .Lfunc_begin14 and .Ltmp682
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp682-.Lfunc_begin14        # >> Call Site 2 <<
	.uleb128 .Ltmp683-.Ltmp682              #   Call between .Ltmp682 and .Ltmp683
	.uleb128 .Ltmp684-.Lfunc_begin14        #     jumps to .Ltmp684
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp683-.Lfunc_begin14        # >> Call Site 3 <<
	.uleb128 .Lfunc_end25-.Ltmp683          #   Call between .Ltmp683 and .Lfunc_end25
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	testl	%edx, %edx
	je	.LBB26_1
# %bb.2:
	cmpl	$1, %edx
	je	.LBB26_3
# %bb.4:
	xorl	%eax, %eax
	retq
.LBB26_1:
	movl	$_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E, %esi
.LBB26_3:                               # %.sink.split
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end26:
	.size	_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation, .Lfunc_end26-_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"axG",@progbits,_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.weak	_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE # -- Begin function _ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.p2align	4, 0x90
	.type	_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,@function
_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE: # @_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
.Lfunc_begin15:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception15
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	cmpl	$4, %edi
	ja	.LBB27_18
# %bb.1:
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	8(%rsi), %r13
	movl	%edi, %eax
	jmpq	*.LJTI27_0(,%rax,8)
.LBB27_2:
	movq	%r13, (%rbx)
	jmp	.LBB27_18
.LBB27_17:
	movq	(%rbx), %rax
	movq	%r13, 8(%rax)
	movq	(%r14), %rax
	movq	(%rbx), %rcx
	movq	%rax, (%rcx)
	movq	$0, (%r14)
	jmp	.LBB27_18
.LBB27_3:
	movq	$_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, (%rbx)
	jmp	.LBB27_18
.LBB27_4:
	movl	$32, %edi
	callq	_Znwm
	movq	%rax, %r15
	addq	$16, %rax
	movq	%rax, (%r15)
	movq	(%r13), %r12
	movq	8(%r13), %r13
	movq	%r13, 8(%rsp)
	cmpq	$16, %r13
	jb	.LBB27_7
# %bb.5:                                # %.noexc6.i
.Ltmp685:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp686:
# %bb.6:                                # %.noexc
	movq	%rax, (%r15)
	movq	8(%rsp), %rcx
	movq	%rcx, 16(%r15)
.LBB27_7:                               # %._crit_edge.i.i.i.i
	testq	%r13, %r13
	je	.LBB27_11
# %bb.8:                                # %._crit_edge.i.i.i.i
	cmpq	$1, %r13
	jne	.LBB27_10
# %bb.9:
	movzbl	(%r12), %ecx
	movb	%cl, (%rax)
	jmp	.LBB27_11
.LBB27_13:
	testq	%r13, %r13
	je	.LBB27_18
# %bb.14:
	movq	(%r13), %rdi
	leaq	16(%r13), %rax
	cmpq	%rax, %rdi
	je	.LBB27_16
# %bb.15:
	callq	_ZdlPv
.LBB27_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r13, %rdi
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.LBB27_10:
	.cfi_def_cfa_offset 64
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
.LBB27_11:
	movq	8(%rsp), %rax
	movq	%rax, 8(%r15)
	movq	(%r15), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rbx), %rax
	movq	%r15, 8(%rax)
	movq	(%r14), %rax
	movq	(%rbx), %rcx
	movq	%rax, (%rcx)
.LBB27_18:
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB27_12:
	.cfi_def_cfa_offset 64
.Ltmp687:
	movq	%rax, %rbx
	movq	%r15, %rdi
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end27:
	.size	_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, .Lfunc_end27-_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.cfi_endproc
	.section	.rodata._ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"aG",@progbits,_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.p2align	3, 0x0
.LJTI27_0:
	.quad	.LBB27_2
	.quad	.LBB27_3
	.quad	.LBB27_4
	.quad	.LBB27_13
	.quad	.LBB27_17
	.section	.gcc_except_table._ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"aG",@progbits,_ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.p2align	2, 0x0
GCC_except_table27:
.Lexception15:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end15-.Lcst_begin15
.Lcst_begin15:
	.uleb128 .Lfunc_begin15-.Lfunc_begin15  # >> Call Site 1 <<
	.uleb128 .Ltmp685-.Lfunc_begin15        #   Call between .Lfunc_begin15 and .Ltmp685
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp685-.Lfunc_begin15        # >> Call Site 2 <<
	.uleb128 .Ltmp686-.Ltmp685              #   Call between .Ltmp685 and .Ltmp686
	.uleb128 .Ltmp687-.Lfunc_begin15        #     jumps to .Ltmp687
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp686-.Lfunc_begin15        # >> Call Site 3 <<
	.uleb128 .Lfunc_end27-.Ltmp686          #   Call between .Ltmp686 and .Lfunc_end27
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_
.Lfunc_begin16:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception16
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rsi), %rax
	testq	%rax, %rax
	je	.LBB28_2
# %bb.1:
.Ltmp688:
	movq	%rsi, %rdi
	movl	$3, %edx
	callq	*%rax
.Ltmp689:
.LBB28_2:                               # %_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE17__do_visit_invokeESN_SQ_.exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB28_3:
	.cfi_def_cfa_offset 16
.Ltmp690:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end28:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_, .Lfunc_end28-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_,"aG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_,comdat
	.p2align	2, 0x0
GCC_except_table28:
.Lexception16:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase10-.Lttbaseref10
.Lttbaseref10:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end16-.Lcst_begin16
.Lcst_begin16:
	.uleb128 .Ltmp688-.Lfunc_begin16        # >> Call Site 1 <<
	.uleb128 .Ltmp689-.Ltmp688              #   Call between .Ltmp688 and .Ltmp689
	.uleb128 .Ltmp690-.Lfunc_begin16        #     jumps to .Ltmp690
	.byte	1                               #   On action: 1
.Lcst_end16:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase10:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_
.Lfunc_begin17:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception17
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	16(%rsi), %rax
	testq	%rax, %rax
	je	.LBB29_2
# %bb.1:
.Ltmp691:
	movq	%rsi, %rdi
	movl	$3, %edx
	callq	*%rax
.Ltmp692:
.LBB29_2:                               # %_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE17__do_visit_invokeESN_SQ_.exit
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.LBB29_3:
	.cfi_def_cfa_offset 16
.Ltmp693:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end29:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_, .Lfunc_end29-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_,"aG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_,comdat
	.p2align	2, 0x0
GCC_except_table29:
.Lexception17:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase11-.Lttbaseref11
.Lttbaseref11:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end17-.Lcst_begin17
.Lcst_begin17:
	.uleb128 .Ltmp691-.Lfunc_begin17        # >> Call Site 1 <<
	.uleb128 .Ltmp692-.Ltmp691              #   Call between .Ltmp691 and .Ltmp692
	.uleb128 .Ltmp693-.Lfunc_begin17        #     jumps to .Ltmp693
	.byte	1                               #   On action: 1
.Lcst_end17:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase11:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	testq	%rdi, %rdi
	je	.LBB30_19
# %bb.1:                                # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit
	movq	%rdi, %rax
	movzbl	(%rsi), %ecx
	leal	-49(%rcx), %edx
	cmpl	$9, %edx
	jae	.LBB30_20
# %bb.2:
	movq	%rsi, %rcx
	movq	%rsi, %rdx
	cmpq	$4, %rax
	jl	.LBB30_10
# %bb.3:                                # %.lr.ph.preheader.i.i.i.i
	movq	%rax, %rdi
	shrq	$2, %rdi
	incq	%rdi
	leaq	3(%rsi), %rdx
	movq	%rsi, %rcx
	.p2align	4, 0x90
.LBB30_4:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movsbl	-3(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_45
# %bb.5:                                #   in Loop: Header=BB30_4 Depth=1
	movsbl	-2(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_46
# %bb.6:                                #   in Loop: Header=BB30_4 Depth=1
	movsbl	-1(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_47
# %bb.7:                                #   in Loop: Header=BB30_4 Depth=1
	movsbl	(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_48
# %bb.8:                                #   in Loop: Header=BB30_4 Depth=1
	decq	%rdi
	addq	$4, %rdx
	addq	$4, %rcx
	cmpq	$1, %rdi
	jg	.LBB30_4
# %bb.9:                                # %._crit_edge.loopexit.i.i.i.i
	addq	$-3, %rdx
.LBB30_10:                              # %._crit_edge.i.i.i.i
	leaq	(%rsi,%rax), %rdi
	movq	%rdi, %r8
	subq	%rcx, %r8
	cmpq	$1, %r8
	je	.LBB30_17
# %bb.11:                               # %._crit_edge.i.i.i.i
	cmpq	$2, %r8
	je	.LBB30_15
# %bb.12:                               # %._crit_edge.i.i.i.i
	cmpq	$3, %r8
	jne	.LBB30_40
# %bb.13:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_48
# %bb.14:
	incq	%rdx
.LBB30_15:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_48
# %bb.16:
	incq	%rdx
.LBB30_17:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_48
.LBB30_40:
	movq	%rdi, %rdx
	jmp	.LBB30_48
.LBB30_20:                              # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit
	cmpl	$46, %ecx
	je	.LBB30_41
# %bb.21:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit
	cmpl	$48, %ecx
	jne	.LBB30_19
# %bb.22:
	movq	%rax, %rcx
	decq	%rcx
	je	.LBB30_75
# %bb.23:
	leaq	1(%rsi), %rdi
	movq	%rdi, %r8
	movq	%rdi, %rdx
	cmpq	$4, %rcx
	jl	.LBB30_31
# %bb.24:                               # %.lr.ph.preheader.i.i.i.i28
	movq	%rcx, %r9
	shrq	$2, %r9
	incq	%r9
	leaq	2(%rsi), %rdx
	movq	%rdi, %r8
.LBB30_25:                              # %.lr.ph.i.i.i.i32
                                        # =>This Inner Loop Header: Depth=1
	movsbl	-1(%rdx), %r10d
	addl	$-58, %r10d
	cmpl	$-10, %r10d
	jb	.LBB30_121
# %bb.26:                               #   in Loop: Header=BB30_25 Depth=1
	movsbl	(%rdx), %r10d
	addl	$-58, %r10d
	cmpl	$-10, %r10d
	jb	.LBB30_124
# %bb.27:                               #   in Loop: Header=BB30_25 Depth=1
	movsbl	1(%rdx), %r10d
	addl	$-58, %r10d
	cmpl	$-10, %r10d
	jb	.LBB30_122
# %bb.28:                               #   in Loop: Header=BB30_25 Depth=1
	movsbl	2(%rdx), %r10d
	addl	$-58, %r10d
	cmpl	$-10, %r10d
	jb	.LBB30_123
# %bb.29:                               #   in Loop: Header=BB30_25 Depth=1
	decq	%r9
	addq	$4, %rdx
	addq	$4, %r8
	cmpq	$1, %r9
	jg	.LBB30_25
# %bb.30:                               # %._crit_edge.loopexit.i.i.i.i37
	decq	%rdx
.LBB30_31:                              # %._crit_edge.i.i.i.i40
	addq	%rax, %rsi
	movq	%rsi, %rax
	subq	%r8, %rax
	cmpq	$1, %rax
	je	.LBB30_38
# %bb.32:                               # %._crit_edge.i.i.i.i40
	cmpq	$2, %rax
	je	.LBB30_36
# %bb.33:                               # %._crit_edge.i.i.i.i40
	cmpq	$3, %rax
	jne	.LBB30_79
# %bb.34:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_124
# %bb.35:
	incq	%rdx
.LBB30_36:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_124
# %bb.37:
	incq	%rdx
.LBB30_38:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_124
.LBB30_79:
	movq	%rsi, %rdx
	jmp	.LBB30_124
.LBB30_41:
	decq	%rax
	je	.LBB30_19
# %bb.42:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit59
	movzbl	1(%rsi), %ecx
	addl	$-48, %ecx
	cmpl	$9, %ecx
	ja	.LBB30_19
# %bb.43:
	incq	%rsi
	jmp	.LBB30_55
.LBB30_45:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i.loopexit
	addq	$-3, %rdx
	jmp	.LBB30_48
.LBB30_46:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i.loopexit.split.loop.exit
	addq	$-2, %rdx
	jmp	.LBB30_48
.LBB30_47:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i.loopexit.split.loop.exit270
	decq	%rdx
.LBB30_48:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i
	subq	%rsi, %rdx
	cmpq	%rax, %rdx
	ja	.LBB30_128
# %bb.49:                               # %_ZZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEENKUlS4_E_clES4_.exit
	subq	%rdx, %rax
	je	.LBB30_75
# %bb.50:
	addq	%rdx, %rsi
	movzbl	(%rsi), %ecx
	cmpl	$101, %ecx
	je	.LBB30_87
.LBB30_51:                              # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit55
	cmpl	$69, %ecx
	je	.LBB30_87
# %bb.52:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit55
	cmpl	$46, %ecx
	jne	.LBB30_19
# %bb.53:
	decq	%rax
	je	.LBB30_75
# %bb.54:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit57
	movzbl	1(%rsi), %ecx
	incq	%rsi
	movl	%ecx, %edx
	addl	$-48, %edx
	cmpl	$10, %edx
	jae	.LBB30_86
.LBB30_55:                              # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit59.thread
	movq	%rsi, %rcx
	movq	%rsi, %rdx
	cmpq	$4, %rax
	jl	.LBB30_63
# %bb.56:                               # %.lr.ph.preheader.i.i.i.i62
	movq	%rax, %rdi
	shrq	$2, %rdi
	incq	%rdi
	leaq	3(%rsi), %rdx
	movq	%rsi, %rcx
.LBB30_57:                              # %.lr.ph.i.i.i.i66
                                        # =>This Inner Loop Header: Depth=1
	movsbl	-3(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_80
# %bb.58:                               #   in Loop: Header=BB30_57 Depth=1
	movsbl	-2(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_81
# %bb.59:                               #   in Loop: Header=BB30_57 Depth=1
	movsbl	-1(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_82
# %bb.60:                               #   in Loop: Header=BB30_57 Depth=1
	movsbl	(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_83
# %bb.61:                               #   in Loop: Header=BB30_57 Depth=1
	decq	%rdi
	addq	$4, %rdx
	addq	$4, %rcx
	cmpq	$1, %rdi
	jg	.LBB30_57
# %bb.62:                               # %._crit_edge.loopexit.i.i.i.i71
	addq	$-3, %rdx
.LBB30_63:                              # %._crit_edge.i.i.i.i74
	leaq	(%rsi,%rax), %rdi
	movq	%rdi, %r8
	subq	%rcx, %r8
	cmpq	$1, %r8
	je	.LBB30_70
# %bb.64:                               # %._crit_edge.i.i.i.i74
	cmpq	$2, %r8
	je	.LBB30_68
# %bb.65:                               # %._crit_edge.i.i.i.i74
	cmpq	$3, %r8
	jne	.LBB30_78
# %bb.66:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_83
# %bb.67:
	incq	%rdx
.LBB30_68:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_83
# %bb.69:
	incq	%rdx
.LBB30_70:
	movsbl	(%rdx), %ecx
	addl	$-58, %ecx
	cmpl	$-10, %ecx
	jb	.LBB30_83
.LBB30_78:
	movq	%rdi, %rdx
	jmp	.LBB30_83
.LBB30_80:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i84.loopexit
	addq	$-3, %rdx
	jmp	.LBB30_83
.LBB30_81:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i84.loopexit.split.loop.exit
	addq	$-2, %rdx
	jmp	.LBB30_83
.LBB30_82:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i84.loopexit.split.loop.exit286
	decq	%rdx
.LBB30_83:                              # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i84
	subq	%rsi, %rdx
	movq	%rax, %rdi
	subq	%rdx, %rdi
	jb	.LBB30_128
# %bb.84:
	je	.LBB30_75
# %bb.85:                               # %._ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit89_crit_edge
	movzbl	(%rsi,%rdx), %ecx
	addq	%rdx, %rsi
	movq	%rdi, %rax
.LBB30_86:                              # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit89
	movzbl	%cl, %ecx
	orl	$32, %ecx
	cmpl	$101, %ecx
	jne	.LBB30_19
.LBB30_87:
	movq	%rax, %rcx
	decq	%rcx
	je	.LBB30_19
# %bb.88:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit91
	movzbl	1(%rsi), %edx
	cmpl	$45, %edx
	je	.LBB30_90
# %bb.89:                               # %_ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit91
	cmpl	$43, %edx
	jne	.LBB30_110
.LBB30_90:
	addq	$-2, %rax
	je	.LBB30_19
# %bb.91:                               # %._ZN8argparse8Argument9lookaheadESt17basic_string_viewIcSt11char_traitsIcEE.exit93_crit_edge
	movzbl	2(%rsi), %edx
	addq	$2, %rsi
	movq	%rax, %rcx
	movzbl	%dl, %eax
	addl	$-48, %eax
	cmpl	$9, %eax
	ja	.LBB30_19
	jmp	.LBB30_92
.LBB30_75:
	movb	$1, %al
                                        # kill: def $al killed $al killed $eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB30_110:
	.cfi_def_cfa_offset 16
	incq	%rsi
	movzbl	%dl, %eax
	addl	$-48, %eax
	cmpl	$9, %eax
	ja	.LBB30_19
.LBB30_92:
	movq	%rsi, %rax
	movq	%rsi, %rdx
	cmpq	$4, %rcx
	jl	.LBB30_100
# %bb.93:                               # %.lr.ph.preheader.i.i.i.i96
	movq	%rcx, %rdi
	shrq	$2, %rdi
	incq	%rdi
	leaq	3(%rsi), %rdx
	movq	%rsi, %rax
.LBB30_94:                              # %.lr.ph.i.i.i.i100
                                        # =>This Inner Loop Header: Depth=1
	movsbl	-3(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_116
# %bb.95:                               #   in Loop: Header=BB30_94 Depth=1
	movsbl	-2(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_117
# %bb.96:                               #   in Loop: Header=BB30_94 Depth=1
	movsbl	-1(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_118
# %bb.97:                               #   in Loop: Header=BB30_94 Depth=1
	movsbl	(%rdx), %r8d
	addl	$-58, %r8d
	cmpl	$-10, %r8d
	jb	.LBB30_119
# %bb.98:                               #   in Loop: Header=BB30_94 Depth=1
	decq	%rdi
	addq	$4, %rdx
	addq	$4, %rax
	cmpq	$1, %rdi
	jg	.LBB30_94
# %bb.99:                               # %._crit_edge.loopexit.i.i.i.i105
	addq	$-3, %rdx
.LBB30_100:                             # %._crit_edge.i.i.i.i108
	leaq	(%rsi,%rcx), %rdi
	movq	%rdi, %r8
	subq	%rax, %r8
	cmpq	$1, %r8
	je	.LBB30_107
# %bb.101:                              # %._crit_edge.i.i.i.i108
	cmpq	$2, %r8
	je	.LBB30_105
# %bb.102:                              # %._crit_edge.i.i.i.i108
	cmpq	$3, %r8
	jne	.LBB30_115
# %bb.103:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_119
# %bb.104:
	incq	%rdx
.LBB30_105:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_119
# %bb.106:
	incq	%rdx
.LBB30_107:
	movsbl	(%rdx), %eax
	addl	$-58, %eax
	cmpl	$-10, %eax
	jb	.LBB30_119
.LBB30_115:
	movq	%rdi, %rdx
	jmp	.LBB30_119
.LBB30_116:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i118.loopexit
	addq	$-3, %rdx
	jmp	.LBB30_119
.LBB30_117:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i118.loopexit.split.loop.exit
	addq	$-2, %rdx
	jmp	.LBB30_119
.LBB30_118:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i118.loopexit.split.loop.exit294
	decq	%rdx
.LBB30_119:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i118
	subq	%rsi, %rdx
	cmpq	%rdx, %rcx
	jb	.LBB30_129
# %bb.120:                              # %_ZZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEENKUlS4_E_clES4_.exit121
	sete	%al
                                        # kill: def $al killed $al killed $eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB30_121:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i50.loopexit
	.cfi_def_cfa_offset 16
	decq	%rdx
	jmp	.LBB30_124
.LBB30_122:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i50.loopexit.split.loop.exit278
	incq	%rdx
	jmp	.LBB30_124
.LBB30_123:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i50.loopexit.split.loop.exit280
	addq	$2, %rdx
.LBB30_124:                             # %_ZSt11find_if_notIPKcZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEEEUlT_E_ES8_S8_S8_T0_.exit.i50
	subq	%rdi, %rdx
	cmpq	%rdx, %rcx
	jb	.LBB30_129
# %bb.125:
	subq	%rdx, %rcx
	je	.LBB30_19
# %bb.126:
	addq	%rdx, %rdi
	movq	%rdi, %rsi
	movq	%rcx, %rax
	movzbl	(%rsi), %ecx
	cmpl	$101, %ecx
	jne	.LBB30_51
	jmp	.LBB30_87
.LBB30_19:
	xorl	%eax, %eax
                                        # kill: def $al killed $al killed $eax
	popq	%rcx
	.cfi_def_cfa_offset 8
	retq
.LBB30_128:
	.cfi_def_cfa_offset 16
	movl	$.L.str.36, %edi
	movl	$.L.str.35, %esi
	movq	%rax, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz
.LBB30_129:
	movl	$.L.str.36, %edi
	movl	$.L.str.35, %esi
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz
.Lfunc_end30:
	.size	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end30-_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Lfunc_begin18:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception18
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	(%rdi), %rsi
	movq	8(%rdi), %r13
	movq	%r13, %rax
	subq	%rsi, %rax
	movabsq	$9223372036854775776, %rcx      # imm = 0x7FFFFFFFFFFFFFE0
	cmpq	%rcx, %rax
	je	.LBB31_34
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %rbp
	sarq	$5, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r14
	movq	%r14, %rdx
	shrq	$58, %rdx
	movabsq	$288230376151711743, %rdx       # imm = 0x3FFFFFFFFFFFFFF
	cmovneq	%rdx, %r14
	addq	%rax, %rcx
	cmovbq	%rdx, %r14
	movq	%r15, %r12
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	subq	%rsi, %r12
	sarq	$5, %r12
	testq	%r14, %r14
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	je	.LBB31_2
# %bb.3:                                # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i
	movq	%r14, %rdi
	shlq	$5, %rdi
	callq	_Znwm
	jmp	.LBB31_4
.LBB31_2:
	xorl	%eax, %eax
.LBB31_4:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	shlq	$5, %r12
	leaq	(%rax,%r12), %rdx
	movq	(%rbp), %rbx
	movq	8(%rbp), %rcx
	movq	%rcx, 24(%rsp)                  # 8-byte Spill
	leaq	16(%rax,%r12), %rbp
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	%rbp, (%rax,%r12)
	movq	%rbx, 16(%rsp)
	cmpq	$16, %rbx
	jb	.LBB31_7
# %bb.5:                                # %.noexc6.i.i.i.i.i
.Ltmp694:
	leaq	16(%rsp), %rsi
	movq	%rdx, %rdi
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp695:
# %bb.6:                                # %.noexc
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	%rax, (%rdx)
	movq	16(%rsp), %rcx
	movq	%rcx, (%rbp)
	movq	%rax, %rbp
.LBB31_7:                               # %._crit_edge.i.i.i.i.i.i.i.i
	testq	%rbx, %rbx
	je	.LBB31_11
# %bb.8:                                # %._crit_edge.i.i.i.i.i.i.i.i
	cmpq	$1, %rbx
	jne	.LBB31_10
# %bb.9:
	movq	24(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rbp)
	jmp	.LBB31_11
.LBB31_10:
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rbp, %rdi
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	%rbx, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB31_11:
	movq	16(%rsp), %rax
	movq	32(%rsp), %rcx                  # 8-byte Reload
	movq	%rax, 8(%rcx,%r12)
	movq	%rcx, %r12
	movq	(%rdx), %rcx
	movb	$0, (%rcx,%rax)
	movq	%r12, %rbx
	movq	40(%rsp), %rdi                  # 8-byte Reload
	cmpq	%r15, %rdi
	je	.LBB31_18
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	leaq	16(%r12), %rbx
	leaq	16(%rdi), %rax
	jmp	.LBB31_13
	.p2align	4, 0x90
.LBB31_15:                              #   in Loop: Header=BB31_13 Depth=1
	movq	%rcx, -16(%rbx)
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
.LBB31_16:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB31_13 Depth=1
	movq	-8(%rax), %rcx
	movq	%rcx, -8(%rbx)
	movq	%rax, -16(%rax)
	movq	$0, -8(%rax)
	movb	$0, (%rax)
	addq	$32, %rbx
	leaq	32(%rax), %rcx
	addq	$16, %rax
	cmpq	%r15, %rax
	movq	%rcx, %rax
	je	.LBB31_17
.LBB31_13:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, -16(%rbx)
	movq	-16(%rax), %rcx
	cmpq	%rcx, %rax
	jne	.LBB31_15
# %bb.14:                               #   in Loop: Header=BB31_13 Depth=1
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rbx)
	jmp	.LBB31_16
.LBB31_17:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	addq	$-16, %rbx
.LBB31_18:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	cmpq	%r15, %r13
	je	.LBB31_19
# %bb.20:                               # %.lr.ph.i.i.i.i29.preheader
	addq	$48, %rbx
	addq	$16, %r15
	jmp	.LBB31_21
	.p2align	4, 0x90
.LBB31_23:                              #   in Loop: Header=BB31_21 Depth=1
	movq	%rax, -16(%rbx)
	movq	(%r15), %rax
	movq	%rax, (%rbx)
.LBB31_24:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i31
                                        #   in Loop: Header=BB31_21 Depth=1
	movq	-8(%r15), %rax
	movq	%rax, -8(%rbx)
	movq	%r15, -16(%r15)
	movq	$0, -8(%r15)
	movb	$0, (%r15)
	addq	$32, %rbx
	leaq	32(%r15), %rax
	addq	$16, %r15
	cmpq	%r13, %r15
	movq	%rax, %r15
	je	.LBB31_25
.LBB31_21:                              # %.lr.ph.i.i.i.i29
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, -16(%rbx)
	movq	-16(%r15), %rax
	cmpq	%rax, %r15
	jne	.LBB31_23
# %bb.22:                               #   in Loop: Header=BB31_21 Depth=1
	movups	(%rax), %xmm0
	movups	%xmm0, (%rbx)
	jmp	.LBB31_24
.LBB31_25:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit33.loopexit
	addq	$-16, %rbx
	testq	%rdi, %rdi
	je	.LBB31_28
.LBB31_27:
	callq	_ZdlPv
.LBB31_28:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	%r12, (%rax)
	movq	%rbx, 8(%rax)
	shlq	$5, %r14
	addq	%r12, %r14
	movq	%r14, 16(%rax)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB31_19:
	.cfi_def_cfa_offset 112
	addq	$32, %rbx
	testq	%rdi, %rdi
	jne	.LBB31_27
	jmp	.LBB31_28
.LBB31_34:
	movl	$.L.str.37, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB31_32:
.Ltmp696:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	32(%rsp), %rdi                  # 8-byte Reload
	callq	_ZdlPv
.Ltmp697:
	callq	__cxa_rethrow
.Ltmp698:
# %bb.33:
.LBB31_29:
.Ltmp699:
	movq	%rax, %rbx
.Ltmp700:
	callq	__cxa_end_catch
.Ltmp701:
# %bb.30:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB31_31:
.Ltmp702:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end31:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_, .Lfunc_end31-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table31:
.Lexception18:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase12-.Lttbaseref12
.Lttbaseref12:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end18-.Lcst_begin18
.Lcst_begin18:
	.uleb128 .Lfunc_begin18-.Lfunc_begin18  # >> Call Site 1 <<
	.uleb128 .Ltmp694-.Lfunc_begin18        #   Call between .Lfunc_begin18 and .Ltmp694
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp694-.Lfunc_begin18        # >> Call Site 2 <<
	.uleb128 .Ltmp695-.Ltmp694              #   Call between .Ltmp694 and .Ltmp695
	.uleb128 .Ltmp696-.Lfunc_begin18        #     jumps to .Ltmp696
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp695-.Lfunc_begin18        # >> Call Site 3 <<
	.uleb128 .Ltmp697-.Ltmp695              #   Call between .Ltmp695 and .Ltmp697
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp697-.Lfunc_begin18        # >> Call Site 4 <<
	.uleb128 .Ltmp698-.Ltmp697              #   Call between .Ltmp697 and .Ltmp698
	.uleb128 .Ltmp699-.Lfunc_begin18        #     jumps to .Ltmp699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp700-.Lfunc_begin18        # >> Call Site 5 <<
	.uleb128 .Ltmp701-.Ltmp700              #   Call between .Ltmp700 and .Ltmp701
	.uleb128 .Ltmp702-.Lfunc_begin18        #     jumps to .Ltmp702
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp701-.Lfunc_begin18        # >> Call Site 6 <<
	.uleb128 .Lfunc_end31-.Ltmp701          #   Call between .Ltmp701 and .Lfunc_end31
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end18:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase12:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_,"axG",@progbits,_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_,comdat
	.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_ # -- Begin function _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
	.p2align	4, 0x90
	.type	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_,@function
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_: # @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %r14
	movq	8(%rsi), %r15
	leaq	16(%rdi), %rax
	movq	%rax, (%rdi)
	movq	%r14, 8(%rsp)
	cmpq	$16, %r14
	jb	.LBB32_2
# %bb.1:                                # %.noexc6.i.i
	leaq	8(%rsp), %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, (%rbx)
	movq	8(%rsp), %rcx
	movq	%rcx, 16(%rbx)
.LBB32_2:                               # %._crit_edge.i.i.i.i.i
	testq	%r14, %r14
	je	.LBB32_6
# %bb.3:                                # %._crit_edge.i.i.i.i.i
	cmpq	$1, %r14
	jne	.LBB32_5
# %bb.4:
	movzbl	(%r15), %ecx
	movb	%cl, (%rax)
	jmp	.LBB32_6
.LBB32_5:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB32_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ENS4_12__sv_wrapperERKS3_.exit
	movq	8(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end32:
	.size	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_, .Lfunc_end32-_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,"axG",@progbits,_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,comdat
	.weak	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_ # -- Begin function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.p2align	4, 0x90
	.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,@function
_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_: # @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %rdx
	subq	%rdi, %rdx
	cmpq	$513, %rdx                      # imm = 0x201
	jl	.LBB33_22
# %bb.1:                                # %.lr.ph
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	32(%rdi), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	jmp	.LBB33_2
	.p2align	4, 0x90
.LBB33_21:                              # %_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEESP_SP_SP_SS_.exit
                                        #   in Loop: Header=BB33_2 Depth=1
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	movq	%r13, %rdx
	subq	%rbx, %rdx
	movq	%r13, %r14
	cmpq	$512, %rdx                      # imm = 0x200
	jle	.LBB33_22
.LBB33_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB33_16 Depth 2
                                        #     Child Loop BB33_7 Depth 2
                                        #     Child Loop BB33_11 Depth 2
	subq	$1, %r15
	jb	.LBB33_3
# %bb.5:                                #   in Loop: Header=BB33_2 Depth=1
	shrq	%rdx
	andq	$-32, %rdx
	addq	%rbx, %rdx
	leaq	-32(%r14), %rcx
	movq	%rbx, %rdi
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rsi
	callq	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	movq	%r14, %rbp
	movq	8(%rbx), %r12
	testq	%r12, %r12
	jne	.LBB33_7
.LBB33_13:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.split.us.i.i
                                        #   in Loop: Header=BB33_2 Depth=1
	cmpq	$0, -24(%rbp)
	je	.LBB33_14
# %bb.15:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.us.preheader.i.i.preheader
                                        #   in Loop: Header=BB33_2 Depth=1
	addq	$-56, %rbp
	.p2align	4, 0x90
.LBB33_16:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.us.preheader.i.i
                                        #   Parent Loop BB33_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$0, (%rbp)
	leaq	-32(%rbp), %rbp
	jne	.LBB33_16
# %bb.17:                               # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i12.thread.i.i.loopexit
                                        #   in Loop: Header=BB33_2 Depth=1
	addq	$24, %rbp
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jb	.LBB33_19
	jmp	.LBB33_21
	.p2align	4, 0x90
.LBB33_8:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB33_7 Depth=2
	movq	(%rbx), %rsi
	movq	(%r13), %rdi
	movq	%r12, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB33_11
.LBB33_9:                               #   in Loop: Header=BB33_7 Depth=2
	addq	$32, %r13
.LBB33_7:                               # %.split.i
                                        #   Parent Loop BB33_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%r12, 8(%r13)
	je	.LBB33_8
# %bb.10:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit.i.i
                                        #   in Loop: Header=BB33_7 Depth=2
	jb	.LBB33_9
	jmp	.LBB33_11
	.p2align	4, 0x90
.LBB33_20:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.i.i
                                        #   in Loop: Header=BB33_11 Depth=2
	jae	.LBB33_18
.LBB33_11:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.split.i.i.preheader
                                        #   Parent Loop BB33_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addq	$-32, %rbp
	cmpq	8(%rbp), %r12
	jne	.LBB33_20
# %bb.12:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i9.i.i
                                        #   in Loop: Header=BB33_11 Depth=2
	movq	(%rbp), %rsi
	movq	(%rbx), %rdi
	movq	%r12, %rdx
	callq	memcmp
	testl	%eax, %eax
	js	.LBB33_11
.LBB33_18:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i12.thread.i.i
                                        #   in Loop: Header=BB33_2 Depth=1
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jae	.LBB33_21
.LBB33_19:                              #   in Loop: Header=BB33_2 Depth=1
	movq	%rbp, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
	addq	$32, %r13
	movq	8(%rbx), %r12
	testq	%r12, %r12
	jne	.LBB33_7
	jmp	.LBB33_13
.LBB33_14:                              #   in Loop: Header=BB33_2 Depth=1
	addq	$-32, %rbp
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jb	.LBB33_19
	jmp	.LBB33_21
.LBB33_3:
	leaq	15(%rsp), %rdx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	movq	%r14, %r12
	subq	%rbx, %r12
	addq	$-32, %r14
	leaq	14(%rsp), %r15
	.p2align	4, 0x90
.LBB33_4:                               # %.lr.ph.i9.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	callq	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	addq	$-32, %r12
	addq	$-32, %r14
	cmpq	$32, %r12
	jg	.LBB33_4
.LBB33_22:                              # %.loopexit
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end33:
	.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_, .Lfunc_end33-_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,"axG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,comdat
	.weak	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_ # -- Begin function _ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	.p2align	4, 0x90
	.type	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,@function
_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_: # @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
.Lfunc_begin19:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception19
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	subq	%rdi, %rbx
	cmpq	$64, %rbx
	jge	.LBB34_1
.LBB34_14:                              # %.loopexit
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB34_1:
	.cfi_def_cfa_offset 128
	movq	%rdi, %r14
	sarq	$5, %rbx
	leaq	-2(%rbx), %r15
	shrq	%r15
	leaq	24(%rsp), %r13
	leaq	56(%rsp), %rbp
	movq	%r15, %rax
	shlq	$5, %rax
	leaq	(%rax,%rdi), %r12
	addq	$16, %r12
	jmp	.LBB34_2
	.p2align	4, 0x90
.LBB34_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
                                        #   in Loop: Header=BB34_2 Depth=1
	addq	$-32, %r12
	cmpq	$-1, %r15
	je	.LBB34_14
.LBB34_2:                               # =>This Inner Loop Header: Depth=1
	movq	%r13, 8(%rsp)
	movq	-16(%r12), %rax
	cmpq	%rax, %r12
	je	.LBB34_3
# %bb.4:                                #   in Loop: Header=BB34_2 Depth=1
	movq	%rax, 8(%rsp)
	movq	(%r12), %rcx
	movq	%rcx, 24(%rsp)
	jmp	.LBB34_5
	.p2align	4, 0x90
.LBB34_3:                               #   in Loop: Header=BB34_2 Depth=1
	movups	(%rax), %xmm0
	movups	%xmm0, (%r13)
	movq	%r13, %rax
.LBB34_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
                                        #   in Loop: Header=BB34_2 Depth=1
	movq	-8(%r12), %rcx
	movq	%r12, -16(%r12)
	movq	$0, -8(%r12)
	movb	$0, (%r12)
	movq	%rbp, 40(%rsp)
	cmpq	%r13, %rax
	je	.LBB34_6
# %bb.7:                                #   in Loop: Header=BB34_2 Depth=1
	movq	%rax, 40(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB34_8
	.p2align	4, 0x90
.LBB34_6:                               #   in Loop: Header=BB34_2 Depth=1
	movups	(%r13), %xmm0
	movups	%xmm0, (%rbp)
.LBB34_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit11
                                        #   in Loop: Header=BB34_2 Depth=1
	movq	%rcx, 48(%rsp)
	movq	%r13, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp703:
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	leaq	40(%rsp), %rcx
	callq	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Ltmp704:
# %bb.9:                                #   in Loop: Header=BB34_2 Depth=1
	movq	40(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB34_11
# %bb.10:                               #   in Loop: Header=BB34_2 Depth=1
	callq	_ZdlPv
.LBB34_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB34_2 Depth=1
	decq	%r15
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB34_13
# %bb.12:                               #   in Loop: Header=BB34_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB34_13
.LBB34_15:
.Ltmp705:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB34_16
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit13
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB34_18
.LBB34_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB34_16:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB34_19
.LBB34_18:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end34:
	.size	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_, .Lfunc_end34-_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	.cfi_endproc
	.section	.gcc_except_table._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,"aG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,comdat
	.p2align	2, 0x0
GCC_except_table34:
.Lexception19:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end19-.Lcst_begin19
.Lcst_begin19:
	.uleb128 .Ltmp703-.Lfunc_begin19        # >> Call Site 1 <<
	.uleb128 .Ltmp704-.Ltmp703              #   Call between .Ltmp703 and .Ltmp704
	.uleb128 .Ltmp705-.Lfunc_begin19        #     jumps to .Ltmp705
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp704-.Lfunc_begin19        # >> Call Site 2 <<
	.uleb128 .Lfunc_end34-.Ltmp704          #   Call between .Ltmp704 and .Lfunc_end34
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,"axG",@progbits,_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,comdat
	.weak	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_ # -- Begin function _ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	.p2align	4, 0x90
	.type	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,@function
_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_: # @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
.Lfunc_begin20:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception20
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	(%rdx), %rax
	leaq	16(%rdx), %rdi
	cmpq	%rdi, %rax
	je	.LBB35_1
# %bb.2:
	movq	%rax, 8(%rsp)
	movq	(%rdi), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB35_3
.LBB35_1:
	movups	(%rax), %xmm0
	movups	%xmm0, (%r12)
.LBB35_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%r15), %rax
	movq	%rax, 16(%rsp)
	movq	%rdi, (%r15)
	movq	$0, 8(%r15)
	movb	$0, 16(%r15)
	movq	(%r14), %rsi
	leaq	16(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB35_4
# %bb.9:
	movq	%rsi, (%r15)
	movq	8(%r14), %rcx
	movq	%rcx, 8(%r15)
	movq	16(%r14), %rcx
	movq	%rcx, 16(%r15)
	movq	%rax, (%r14)
	jmp	.LBB35_10
.LBB35_4:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB35_8
# %bb.5:
	cmpq	$1, %rdx
	jne	.LBB35_7
# %bb.6:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB35_8
.LBB35_7:
	callq	memcpy@PLT
.LBB35_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%r14), %rax
	movq	%rax, 8(%r15)
	movb	$0, 16(%r15,%rax)
	movq	(%r14), %rax
.LBB35_10:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 8(%r14)
	movb	$0, (%rax)
	subq	%r14, %rbx
	sarq	$5, %rbx
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB35_11
# %bb.12:
	movq	%rax, 40(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB35_13
.LBB35_11:
	movups	(%r12), %xmm0
	movups	%xmm0, (%r15)
.LBB35_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit3
	movq	16(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	%r12, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp706:
	leaq	40(%rsp), %rcx
	movq	%r14, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Ltmp707:
# %bb.14:
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB35_16
# %bb.15:
	callq	_ZdlPv
.LBB35_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB35_18
# %bb.17:
	callq	_ZdlPv
.LBB35_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit4
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB35_19:
	.cfi_def_cfa_offset 112
.Ltmp708:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB35_20
# %bb.21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit5
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB35_22
.LBB35_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB35_20:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB35_23
.LBB35_22:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end35:
	.size	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_, .Lfunc_end35-_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	.cfi_endproc
	.section	.gcc_except_table._ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,"aG",@progbits,_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,comdat
	.p2align	2, 0x0
GCC_except_table35:
.Lexception20:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end20-.Lcst_begin20
.Lcst_begin20:
	.uleb128 .Lfunc_begin20-.Lfunc_begin20  # >> Call Site 1 <<
	.uleb128 .Ltmp706-.Lfunc_begin20        #   Call between .Lfunc_begin20 and .Ltmp706
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp706-.Lfunc_begin20        # >> Call Site 2 <<
	.uleb128 .Ltmp707-.Ltmp706              #   Call between .Ltmp706 and .Ltmp707
	.uleb128 .Ltmp708-.Lfunc_begin20        #     jumps to .Ltmp708
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp707-.Lfunc_begin20        # >> Call Site 3 <<
	.uleb128 .Lfunc_end35-.Ltmp707          #   Call between .Ltmp707 and .Lfunc_end35
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,"axG",@progbits,_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,comdat
	.weak	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_ # -- Begin function _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
	.p2align	4, 0x90
	.type	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,@function
_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_: # @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Lfunc_begin21:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception21
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rdi, %r14
	leaq	-1(%rdx), %rax
	shrq	$63, %rax
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	leaq	(%rdx,%rax), %r8
	decq	%r8
	sarq	%r8
	movq	%rsi, %r12
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	cmpq	%rsi, %r8
	jle	.LBB36_22
# %bb.1:                                # %.lr.ph.preheader
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	%r8, 16(%rsp)                   # 8-byte Spill
	jmp	.LBB36_2
.LBB36_14:                              #   in Loop: Header=BB36_2 Depth=1
	callq	memcpy@PLT
	movq	16(%rsp), %r8                   # 8-byte Reload
.LBB36_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB36_2 Depth=1
	leaq	(%r14,%rbx), %rax
	addq	$8, %rax
	movq	(%rax), %rax
	movq	%rax, 8(%r14,%r13)
	movq	(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r15), %rax
.LBB36_21:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB36_2 Depth=1
	movq	$0, 8(%r14,%rbx)
	movb	$0, (%rax)
	cmpq	%r8, %r12
	jge	.LBB36_22
.LBB36_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%r12, %r13
	leaq	2(,%r12,2), %rbx
	movq	%rbx, %rax
	shlq	$5, %rax
	leaq	1(,%r12,2), %r12
	movq	%r12, %rcx
	shlq	$5, %rcx
	movq	8(%r14,%rax), %rdx
	cmpq	8(%r14,%rcx), %rdx
	jne	.LBB36_7
# %bb.3:                                #   in Loop: Header=BB36_2 Depth=1
	testq	%rdx, %rdx
	je	.LBB36_5
# %bb.4:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB36_2 Depth=1
	addq	%r14, %rax
	addq	%r14, %rcx
	movq	(%rcx), %rsi
	movq	(%rax), %rdi
	callq	memcmp
	movq	16(%rsp), %r8                   # 8-byte Reload
	testl	%eax, %eax
	jne	.LBB36_6
.LBB36_5:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
                                        #   in Loop: Header=BB36_2 Depth=1
	xorl	%eax, %eax
.LBB36_6:                               # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i
                                        #   in Loop: Header=BB36_2 Depth=1
	shrl	$31, %eax
	testb	%al, %al
	je	.LBB36_9
	jmp	.LBB36_10
	.p2align	4, 0x90
.LBB36_7:                               #   in Loop: Header=BB36_2 Depth=1
	setb	%al
	testb	%al, %al
	jne	.LBB36_10
.LBB36_9:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB36_2 Depth=1
	movq	%rbx, %r12
.LBB36_10:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB36_2 Depth=1
	movq	%r12, %rbx
	shlq	$5, %rbx
	leaq	(%r14,%rbx), %r15
	shlq	$5, %r13
	leaq	(%r14,%r13), %rbp
	movq	(%r14,%rbx), %rsi
	leaq	(%r14,%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, %rsi
	je	.LBB36_11
# %bb.16:                               #   in Loop: Header=BB36_2 Depth=1
	leaq	(%r14,%r13), %rdx
	addq	$16, %rdx
	movq	(%rbp), %rcx
	cmpq	%rdx, %rcx
	je	.LBB36_17
# %bb.19:                               #   in Loop: Header=BB36_2 Depth=1
	movq	(%rdx), %rdx
	movq	%rsi, (%rbp)
	movups	8(%r14,%rbx), %xmm0
	movups	%xmm0, 8(%r14,%r13)
	testq	%rcx, %rcx
	je	.LBB36_18
# %bb.20:                               #   in Loop: Header=BB36_2 Depth=1
	movq	%rcx, (%r15)
	movq	%rdx, (%rax)
	movq	%rcx, %rax
	jmp	.LBB36_21
	.p2align	4, 0x90
.LBB36_11:                              #   in Loop: Header=BB36_2 Depth=1
	movq	8(%r14,%rbx), %rdx
	testq	%rdx, %rdx
	je	.LBB36_15
# %bb.12:                               #   in Loop: Header=BB36_2 Depth=1
	movq	(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB36_14
# %bb.13:                               #   in Loop: Header=BB36_2 Depth=1
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB36_15
	.p2align	4, 0x90
.LBB36_17:                              # %.thread.i
                                        #   in Loop: Header=BB36_2 Depth=1
	movq	%rsi, (%rbp)
	movups	8(%r14,%rbx), %xmm0
	movups	%xmm0, 8(%r14,%r13)
.LBB36_18:                              #   in Loop: Header=BB36_2 Depth=1
	movq	%rax, (%r15)
	jmp	.LBB36_21
.LBB36_22:                              # %._crit_edge
	movq	32(%rsp), %rcx                  # 8-byte Reload
	testb	$1, %cl
	jne	.LBB36_23
# %bb.24:
	leaq	-2(%rcx), %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	addq	$-2, %rax
	sarq	%rax
	cmpq	%rax, %r12
	jne	.LBB36_23
# %bb.25:
	leaq	1(,%r12,2), %rbx
	movq	%rbx, %r15
	shlq	$5, %r15
	leaq	(%r14,%r15), %r13
	shlq	$5, %r12
	leaq	(%r14,%r12), %rbp
	movq	(%r14,%r15), %rsi
	leaq	(%r14,%r15), %rax
	addq	$16, %rax
	cmpq	%rax, %rsi
	je	.LBB36_26
# %bb.31:
	leaq	(%r14,%r12), %rdx
	addq	$16, %rdx
	movq	(%rbp), %rcx
	cmpq	%rdx, %rcx
	je	.LBB36_32
# %bb.34:
	movq	(%rdx), %rdx
	movq	%rsi, (%rbp)
	movups	8(%r14,%r15), %xmm0
	movups	%xmm0, 8(%r14,%r12)
	testq	%rcx, %rcx
	je	.LBB36_33
# %bb.35:
	movq	%rcx, (%r13)
	movq	%rdx, (%rax)
	movq	%rcx, %rax
	jmp	.LBB36_36
.LBB36_23:
	movq	%r12, %rbx
	movq	8(%rsp), %rdx                   # 8-byte Reload
	jmp	.LBB36_37
.LBB36_26:
	leaq	(%r14,%r15), %rcx
	addq	$8, %rcx
	movq	8(%r14,%r15), %rdx
	testq	%rdx, %rdx
	je	.LBB36_30
# %bb.27:
	movq	(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB36_29
# %bb.28:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB36_30
.LBB36_32:                              # %.thread.i29
	movq	%rsi, (%rbp)
	movups	8(%r14,%r15), %xmm0
	movups	%xmm0, 8(%r14,%r12)
.LBB36_33:
	movq	%rax, (%r13)
	jmp	.LBB36_36
.LBB36_29:
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	callq	memcpy@PLT
	movq	16(%rsp), %rcx                  # 8-byte Reload
.LBB36_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i28
	movq	(%rcx), %rax
	movq	%rax, 8(%r14,%r12)
	movq	(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r13), %rax
.LBB36_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit31
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	$0, 8(%r14,%r15)
	movb	$0, (%rax)
.LBB36_37:
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	(%rdx), %rcx
	leaq	16(%rdx), %rax
	cmpq	%rax, %rcx
	je	.LBB36_38
# %bb.39:
	movq	%rcx, 40(%rsp)
	movq	(%rax), %rcx
	movq	%rcx, 56(%rsp)
	jmp	.LBB36_40
.LBB36_38:
	movups	(%rcx), %xmm0
	movups	%xmm0, (%r15)
.LBB36_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rdx), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, (%rdx)
	movq	$0, 8(%rdx)
	movb	$0, 16(%rdx)
.Ltmp709:
	leaq	40(%rsp), %rcx
	leaq	7(%rsp), %r8
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	24(%rsp), %rdx                  # 8-byte Reload
	callq	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
.Ltmp710:
# %bb.41:
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB36_43
# %bb.42:
	callq	_ZdlPv
.LBB36_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB36_44:
	.cfi_def_cfa_offset 128
.Ltmp711:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB36_46
# %bb.45:
	callq	_ZdlPv
.LBB36_46:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end36:
	.size	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_, .Lfunc_end36-_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
	.cfi_endproc
	.section	.gcc_except_table._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,"aG",@progbits,_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,comdat
	.p2align	2, 0x0
GCC_except_table36:
.Lexception21:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end21-.Lcst_begin21
.Lcst_begin21:
	.uleb128 .Lfunc_begin21-.Lfunc_begin21  # >> Call Site 1 <<
	.uleb128 .Ltmp709-.Lfunc_begin21        #   Call between .Lfunc_begin21 and .Ltmp709
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp709-.Lfunc_begin21        # >> Call Site 2 <<
	.uleb128 .Ltmp710-.Ltmp709              #   Call between .Ltmp709 and .Ltmp710
	.uleb128 .Ltmp711-.Lfunc_begin21        #     jumps to .Ltmp711
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp710-.Lfunc_begin21        # >> Call Site 3 <<
	.uleb128 .Lfunc_end36-.Ltmp710          #   Call between .Ltmp710 and .Lfunc_end36
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,"axG",@progbits,_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,comdat
	.weak	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_ # -- Begin function _ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.p2align	4, 0x90
	.type	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,@function
_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_: # @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r10
	movq	%rdi, %r9
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	cmpq	%rdx, %rsi
	jle	.LBB37_22
# %bb.1:                                # %.lr.ph
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	jmp	.LBB37_5
.LBB37_2:                               #   in Loop: Header=BB37_5 Depth=1
	movq	%rbp, %rsi
	movq	%r13, %rdx
	movq	%rcx, %rbx
	movq	%r14, (%rsp)                    # 8-byte Spill
	movq	%r9, %r14
	movq	%r10, %r13
	movq	%r11, %rbp
	callq	memcpy@PLT
	movq	%rbp, %r11
	movq	%r13, %r10
	movq	%r14, %r9
	movq	(%rsp), %r14                    # 8-byte Reload
	movq	%rbx, %rcx
.LBB37_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB37_5 Depth=1
	movq	(%r14), %rax
	movq	%rax, 8(%r9,%r15)
	movq	(%r12), %rdx
	movb	$0, (%rdx,%rax)
	movq	(%r11), %rax
.LBB37_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB37_5 Depth=1
	movq	$0, (%r14)
	movb	$0, (%rax)
	cmpq	16(%rsp), %r10                  # 8-byte Folded Reload
	jle	.LBB37_22
.LBB37_5:                               # =>This Inner Loop Header: Depth=1
	movq	%r10, %r15
	leaq	-1(%r10), %rax
	shrq	$63, %rax
	addq	%rax, %r10
	decq	%r10
	sarq	%r10
	movq	%r10, %rbx
	shlq	$5, %rbx
	leaq	(%r9,%rbx), %r11
	movq	8(%r9,%rbx), %r13
	cmpq	8(%rcx), %r13
	jne	.LBB37_8
# %bb.6:                                #   in Loop: Header=BB37_5 Depth=1
	testq	%r13, %r13
	je	.LBB37_21
# %bb.7:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB37_5 Depth=1
	movq	(%rcx), %rsi
	movq	(%r11), %rbp
	movq	%rbp, %rdi
	movq	%r13, %rdx
	movq	%r9, %r14
	movq	%r10, (%rsp)                    # 8-byte Spill
	movq	%r11, %r12
	callq	memcmp
	movq	%r12, %r11
	movq	(%rsp), %r10                    # 8-byte Reload
	movq	%r14, %r9
	movq	8(%rsp), %rcx                   # 8-byte Reload
	testl	%eax, %eax
	js	.LBB37_10
	jmp	.LBB37_21
	.p2align	4, 0x90
.LBB37_8:                               # %_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESR_EEbSE_RSH_.exit
                                        #   in Loop: Header=BB37_5 Depth=1
	jae	.LBB37_21
# %bb.9:                                # %_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESR_EEbSE_RSH_.exit._crit_edge
                                        #   in Loop: Header=BB37_5 Depth=1
	movq	(%r11), %rbp
.LBB37_10:                              #   in Loop: Header=BB37_5 Depth=1
	leaq	(%r9,%rbx), %r14
	addq	$8, %r14
	shlq	$5, %r15
	leaq	(%r9,%r15), %r12
	leaq	(%r9,%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, %rbp
	je	.LBB37_14
# %bb.11:                               #   in Loop: Header=BB37_5 Depth=1
	leaq	(%r9,%r15), %rdx
	addq	$16, %rdx
	movq	(%r12), %r8
	cmpq	%rdx, %r8
	je	.LBB37_17
# %bb.12:                               #   in Loop: Header=BB37_5 Depth=1
	movq	(%rdx), %rsi
	movq	%rbp, (%r12)
	movq	%r13, 8(%r9,%r15)
	movq	(%rax), %rdi
	movq	%rdi, (%rdx)
	testq	%r8, %r8
	je	.LBB37_18
# %bb.13:                               #   in Loop: Header=BB37_5 Depth=1
	movq	%r8, (%r11)
	movq	%rsi, (%rax)
	movq	%r8, %rax
	jmp	.LBB37_4
	.p2align	4, 0x90
.LBB37_14:                              #   in Loop: Header=BB37_5 Depth=1
	testq	%r13, %r13
	je	.LBB37_3
# %bb.15:                               #   in Loop: Header=BB37_5 Depth=1
	movq	(%r12), %rdi
	cmpq	$1, %r13
	jne	.LBB37_2
# %bb.16:                               #   in Loop: Header=BB37_5 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%rdi)
	jmp	.LBB37_3
	.p2align	4, 0x90
.LBB37_17:                              # %.thread.i
                                        #   in Loop: Header=BB37_5 Depth=1
	movq	%rbp, (%r12)
	movq	%r13, 8(%r9,%r15)
	movq	(%rax), %rsi
	movq	%rsi, (%rdx)
.LBB37_18:                              #   in Loop: Header=BB37_5 Depth=1
	movq	%rax, (%r11)
	jmp	.LBB37_4
.LBB37_21:
	movq	%r15, %r10
.LBB37_22:                              # %.critedge
	shlq	$5, %r10
	leaq	(%r9,%r10), %r15
	movq	(%rcx), %rsi
	leaq	16(%rcx), %rax
	cmpq	%rax, %rsi
	je	.LBB37_26
# %bb.23:
	leaq	(%r9,%r10), %rdx
	addq	$16, %rdx
	movq	(%r15), %r8
	cmpq	%rdx, %r8
	je	.LBB37_29
# %bb.24:
	movq	(%rdx), %rdi
	movq	%rsi, (%r15)
	movq	8(%rcx), %rsi
	movq	%rsi, 8(%r9,%r10)
	movq	16(%rcx), %rsi
	movq	%rsi, (%rdx)
	testq	%r8, %r8
	je	.LBB37_30
# %bb.25:
	movq	%r8, (%rcx)
	movq	%rdi, 16(%rcx)
	movq	%r8, %rax
	jmp	.LBB37_33
.LBB37_26:
	movq	8(%rcx), %rdx
	testq	%rdx, %rdx
	je	.LBB37_32
# %bb.27:
	movq	(%r15), %rdi
	cmpq	$1, %rdx
	jne	.LBB37_31
# %bb.28:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB37_32
.LBB37_29:                              # %.thread.i14
	movq	%rsi, (%r15)
	movq	8(%rcx), %rsi
	movq	%rsi, 8(%r9,%r10)
	movq	16(%rcx), %rsi
	movq	%rsi, (%rdx)
.LBB37_30:
	movq	%rax, (%rcx)
	jmp	.LBB37_33
.LBB37_31:
	movq	%rcx, %rbx
	movq	%r9, %r14
	movq	%r10, %r12
	callq	memcpy@PLT
	movq	%r12, %r10
	movq	%r14, %r9
	movq	%rbx, %rcx
.LBB37_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i13
	movq	8(%rcx), %rax
	movq	%rax, 8(%r9,%r10)
	movq	(%r15), %rdx
	movb	$0, (%rdx,%rax)
	movq	(%rcx), %rax
.LBB37_33:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit16
	movq	$0, 8(%rcx)
	movb	$0, (%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end37:
	.size	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_, .Lfunc_end37-_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,"axG",@progbits,_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,comdat
	.weak	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_ # -- Begin function _ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.p2align	4, 0x90
	.type	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,@function
_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_: # @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	8(%rsi), %r13
	movq	8(%rdx), %rbp
	cmpq	%rbp, %r13
	jne	.LBB38_6
# %bb.1:
	testq	%r13, %r13
	je	.LBB38_14
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	movq	(%r15), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	testl	%eax, %eax
	js	.LBB38_7
.LBB38_3:                               # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
	movq	8(%r14), %rax
	cmpq	%rax, %r13
	jne	.LBB38_15
# %bb.4:
	testq	%r13, %r13
	je	.LBB38_18
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i39
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r12, %rsi
	testl	%eax, %eax
	js	.LBB38_25
.LBB38_19:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i42.thread
	cmpq	%r13, %rbp
	jne	.LBB38_23
.LBB38_20:
	testq	%rbp, %rbp
	je	.LBB38_24
# %bb.21:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i45
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r15), %rdi
	movq	%rbp, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r14, %rsi
	testl	%eax, %eax
	jns	.LBB38_24
	jmp	.LBB38_25
.LBB38_6:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
	jae	.LBB38_3
.LBB38_7:
	movq	8(%r14), %rbx
	cmpq	%rbx, %rbp
	jne	.LBB38_10
# %bb.8:
	testq	%rbp, %rbp
	je	.LBB38_11
# %bb.9:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i27
	movq	(%r14), %rsi
	movq	%rdi, (%rsp)                    # 8-byte Spill
	movq	(%r15), %rdi
	movq	%rbp, %rdx
	callq	memcmp
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r15, %rsi
	testl	%eax, %eax
	jns	.LBB38_11
	jmp	.LBB38_25
.LBB38_10:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit31
	movq	%r15, %rsi
	jb	.LBB38_25
.LBB38_11:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i30.thread
	cmpq	%rbx, %r13
	jne	.LBB38_16
# %bb.12:
	testq	%r13, %r13
	je	.LBB38_26
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i33
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r14, %rsi
	testl	%eax, %eax
	jns	.LBB38_26
	jmp	.LBB38_25
.LBB38_14:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.thread
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB38_22
.LBB38_15:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit43
	movq	%r12, %rsi
	cmpq	%rax, %r13
	movq	%rax, %r13
	jae	.LBB38_19
	jmp	.LBB38_25
.LBB38_16:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit37
	movq	%r14, %rsi
	jb	.LBB38_25
.LBB38_26:
	movq	%r12, %rsi
	jmp	.LBB38_25
.LBB38_18:
	xorl	%r13d, %r13d
	cmpq	%r13, %rbp
	jne	.LBB38_23
	jmp	.LBB38_20
.LBB38_22:
	xorl	%r13d, %r13d
	cmpq	%r13, %rbp
	je	.LBB38_20
.LBB38_23:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit49
	movq	%r14, %rsi
	jb	.LBB38_25
.LBB38_24:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i48.thread
	movq	%r15, %rsi
.LBB38_25:
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_ # TAILCALL
.Lfunc_end38:
	.size	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_, .Lfunc_end38-_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,"axG",@progbits,_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,comdat
	.weak	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_ # -- Begin function _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.p2align	4, 0x90
	.type	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,@function
_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_: # @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	cmpq	%rsi, %rdi
	je	.LBB39_41
# %bb.1:                                # %.preheader
	movq	%rdi, %r13
	leaq	32(%rdi), %rax
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB39_41
# %bb.2:                                # %.lr.ph
	leaq	16(%r13), %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	leaq	48(%r13), %r14
	movl	$32, %ebx
	movq	%r13, %r15
	movq	%r13, (%rsp)                    # 8-byte Spill
	jmp	.LBB39_3
	.p2align	4, 0x90
.LBB39_6:                               # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	%r12, %rdi
	callq	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	movq	(%rsp), %r13                    # 8-byte Reload
.LBB39_40:                              #   in Loop: Header=BB39_3 Depth=1
	leaq	32(%r12), %rax
	addq	$32, %rbx
	addq	$32, %r14
	movq	%r12, %r15
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB39_41
.LBB39_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB39_14 Depth 2
	movq	%rax, %r12
	movq	40(%r15), %rbp
	cmpq	8(%r13), %rbp
	jne	.LBB39_7
# %bb.4:                                #   in Loop: Header=BB39_3 Depth=1
	testq	%rbp, %rbp
	je	.LBB39_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rsi
	movq	32(%r15), %r13
	movq	%r13, %rdi
	movq	%rbp, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB39_6
	jmp	.LBB39_9
	.p2align	4, 0x90
.LBB39_7:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB39_3 Depth=1
	jae	.LBB39_6
# %bb.8:                                # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit._crit_edge
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	(%r12), %r13
.LBB39_9:                               #   in Loop: Header=BB39_3 Depth=1
	leaq	24(%rsp), %rcx
	movq	%rcx, 8(%rsp)
	leaq	48(%r15), %rax
	cmpq	%rax, %r13
	je	.LBB39_10
# %bb.11:                               #   in Loop: Header=BB39_3 Depth=1
	movq	%r13, 8(%rsp)
	movq	(%rax), %rcx
	movq	%rcx, 24(%rsp)
	jmp	.LBB39_12
.LBB39_10:                              #   in Loop: Header=BB39_3 Depth=1
	movups	(%r13), %xmm0
	movups	%xmm0, (%rcx)
	movq	%rcx, %r13
.LBB39_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	%rbp, 16(%rsp)
	movq	%rax, 32(%r15)
	movq	$0, 40(%r15)
	movb	$0, 48(%r15)
	movq	%r12, %rax
	subq	(%rsp), %rax                    # 8-byte Folded Reload
	testq	%rax, %rax
	jle	.LBB39_27
# %bb.13:                               # %.lr.ph.preheader.i.i.i.i
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	%rbx, %r13
	shrq	$5, %r13
	incq	%r13
	movq	%r14, %r15
	jmp	.LBB39_14
.LBB39_18:                              #   in Loop: Header=BB39_14 Depth=2
	callq	memcpy@PLT
.LBB39_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB39_14 Depth=2
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, -8(%rbp)
	movb	$0, (%rcx,%rax)
	movq	-48(%rbp), %rax
.LBB39_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit.i.i.i.i
                                        #   in Loop: Header=BB39_14 Depth=2
	movq	$0, -40(%rbp)
	movb	$0, (%rax)
	decq	%r13
	cmpq	$1, %r13
	jle	.LBB39_26
.LBB39_14:                              # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB39_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r15, %rbp
	movq	-48(%r15), %rsi
	addq	$-32, %r15
	cmpq	%rsi, %r15
	je	.LBB39_15
# %bb.20:                               #   in Loop: Header=BB39_14 Depth=2
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB39_21
# %bb.23:                               #   in Loop: Header=BB39_14 Depth=2
	movq	(%rbp), %rcx
	movq	%rsi, -16(%rbp)
	movups	-40(%rbp), %xmm0
	movups	%xmm0, -8(%rbp)
	testq	%rax, %rax
	je	.LBB39_22
# %bb.24:                               #   in Loop: Header=BB39_14 Depth=2
	movq	%rax, -48(%rbp)
	movq	%rcx, -32(%rbp)
	jmp	.LBB39_25
	.p2align	4, 0x90
.LBB39_15:                              #   in Loop: Header=BB39_14 Depth=2
	movq	-40(%rbp), %rdx
	testq	%rdx, %rdx
	je	.LBB39_19
# %bb.16:                               #   in Loop: Header=BB39_14 Depth=2
	movq	-16(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB39_18
# %bb.17:                               #   in Loop: Header=BB39_14 Depth=2
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB39_19
	.p2align	4, 0x90
.LBB39_21:                              # %.thread.i.i.i.i.i
                                        #   in Loop: Header=BB39_14 Depth=2
	movq	%rsi, -16(%rbp)
	movups	-40(%rbp), %xmm0
	movups	%xmm0, -8(%rbp)
.LBB39_22:                              #   in Loop: Header=BB39_14 Depth=2
	movq	%r15, -48(%rbp)
	movq	%r15, %rax
	jmp	.LBB39_25
	.p2align	4, 0x90
.LBB39_26:                              # %.loopexit.loopexit
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	8(%rsp), %r13
.LBB39_27:                              # %.loopexit
                                        #   in Loop: Header=BB39_3 Depth=1
	leaq	24(%rsp), %r15
	cmpq	%r15, %r13
	je	.LBB39_28
# %bb.33:                               #   in Loop: Header=BB39_3 Depth=1
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	(%rdx), %rax
	cmpq	48(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB39_34
# %bb.36:                               #   in Loop: Header=BB39_3 Depth=1
	movq	16(%rdx), %rcx
	movq	%r13, (%rdx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rdx)
	testq	%rax, %rax
	movq	%rdx, %r13
	je	.LBB39_35
# %bb.37:                               #   in Loop: Header=BB39_3 Depth=1
	movq	%rax, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB39_38
.LBB39_28:                              #   in Loop: Header=BB39_3 Depth=1
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	movq	(%rsp), %r13                    # 8-byte Reload
	je	.LBB39_32
# %bb.29:                               #   in Loop: Header=BB39_3 Depth=1
	movq	(%r13), %rdi
	cmpq	$1, %rdx
	jne	.LBB39_31
# %bb.30:                               #   in Loop: Header=BB39_3 Depth=1
	movzbl	24(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB39_32
.LBB39_34:                              # %.thread.i
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	%r13, (%rdx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rdx)
	movq	%rdx, %r13
.LBB39_35:                              #   in Loop: Header=BB39_3 Depth=1
	movq	%r15, 8(%rsp)
	movq	%r15, %rax
	jmp	.LBB39_38
.LBB39_31:                              #   in Loop: Header=BB39_3 Depth=1
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB39_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	16(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB39_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB39_3 Depth=1
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB39_40
# %bb.39:                               #   in Loop: Header=BB39_3 Depth=1
	callq	_ZdlPv
	jmp	.LBB39_40
.LBB39_41:                              # %.loopexit18
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end39:
	.size	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_, .Lfunc_end39-_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,"axG",@progbits,_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,comdat
	.weak	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_ # -- Begin function _ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.p2align	4, 0x90
	.type	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,@function
_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_: # @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movq	(%rdi), %rax
	leaq	16(%rdi), %rbp
	cmpq	%rbp, %rax
	je	.LBB40_1
# %bb.2:
	movq	%rax, 8(%rsp)
	movq	(%rbp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB40_3
.LBB40_1:
	movups	(%rax), %xmm0
	movups	%xmm0, (%rbx)
.LBB40_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rdi), %r14
	movq	%r14, 16(%rsp)
	movq	%rbp, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	jmp	.LBB40_4
.LBB40_13:                              #   in Loop: Header=BB40_4 Depth=1
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB40_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB40_4 Depth=1
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, -8(%rbp)
	movb	$0, (%rcx,%rax)
	movq	-48(%rbp), %rax
.LBB40_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB40_4 Depth=1
	movq	$0, -40(%rbp)
	movb	$0, (%rax)
	movq	16(%rsp), %r14
	movq	%r13, %rbp
.LBB40_4:                               # =>This Inner Loop Header: Depth=1
	movq	-40(%rbp), %r15
	cmpq	%r15, %r14
	jne	.LBB40_7
# %bb.5:                                #   in Loop: Header=BB40_4 Depth=1
	testq	%r14, %r14
	je	.LBB40_28
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB40_4 Depth=1
	movq	-48(%rbp), %r12
	movq	8(%rsp), %r13
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB40_22
# %bb.9:                                #   in Loop: Header=BB40_4 Depth=1
	leaq	-32(%rbp), %r13
	cmpq	%r12, %r13
	je	.LBB40_10
.LBB40_15:                              #   in Loop: Header=BB40_4 Depth=1
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB40_16
# %bb.18:                               #   in Loop: Header=BB40_4 Depth=1
	movq	-32(%rbp), %rdx
	movq	(%rbp), %rcx
	movq	%r12, -16(%rbp)
	movq	%r15, -8(%rbp)
	movq	%rdx, (%rbp)
	testq	%rax, %rax
	je	.LBB40_17
# %bb.19:                               #   in Loop: Header=BB40_4 Depth=1
	movq	%rax, -48(%rbp)
	movq	%rcx, -32(%rbp)
	jmp	.LBB40_20
	.p2align	4, 0x90
.LBB40_7:                               # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit
                                        #   in Loop: Header=BB40_4 Depth=1
	jae	.LBB40_21
# %bb.8:                                # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit._crit_edge
                                        #   in Loop: Header=BB40_4 Depth=1
	movq	-48(%rbp), %r12
	leaq	-32(%rbp), %r13
	cmpq	%r12, %r13
	jne	.LBB40_15
.LBB40_10:                              #   in Loop: Header=BB40_4 Depth=1
	testq	%r15, %r15
	je	.LBB40_14
# %bb.11:                               #   in Loop: Header=BB40_4 Depth=1
	movq	-16(%rbp), %rdi
	cmpq	$1, %r15
	jne	.LBB40_13
# %bb.12:                               #   in Loop: Header=BB40_4 Depth=1
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB40_14
	.p2align	4, 0x90
.LBB40_16:                              # %.thread.i
                                        #   in Loop: Header=BB40_4 Depth=1
	movq	%r12, -16(%rbp)
	movq	%r15, -8(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, (%rbp)
.LBB40_17:                              #   in Loop: Header=BB40_4 Depth=1
	movq	%r13, -48(%rbp)
	movq	%r13, %rax
	jmp	.LBB40_20
.LBB40_28:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.thread
	movq	8(%rsp), %r13
	cmpq	%rbx, %r13
	jne	.LBB40_29
	jmp	.LBB40_27
.LBB40_21:                              # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit._ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread_crit_edge
	movq	8(%rsp), %r13
.LBB40_22:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
	cmpq	%rbx, %r13
	je	.LBB40_23
.LBB40_29:
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB40_30
# %bb.32:
	movq	(%rbp), %rcx
	movq	%r13, -16(%rbp)
	movq	%r14, -8(%rbp)
	movq	24(%rsp), %rdx
	movq	%rdx, (%rbp)
	testq	%rax, %rax
	je	.LBB40_31
# %bb.33:
	movq	%rax, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB40_34
.LBB40_23:
	testq	%r14, %r14
	je	.LBB40_27
# %bb.24:
	movq	-16(%rbp), %rdi
	cmpq	$1, %r14
	jne	.LBB40_26
# %bb.25:
	movzbl	24(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB40_27
.LBB40_30:                              # %.thread.i5
	movq	%r13, -16(%rbp)
	movq	%r14, -8(%rbp)
	movq	24(%rsp), %rax
	movq	%rax, (%rbp)
.LBB40_31:
	movq	%rbx, 8(%rsp)
	movq	%rbx, %rax
	jmp	.LBB40_34
.LBB40_26:
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB40_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i4
	movq	16(%rsp), %rax
	movq	%rax, -8(%rbp)
	movq	-16(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB40_34:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit7
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB40_36
# %bb.35:
	callq	_ZdlPv
.LBB40_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end40:
	.size	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_, .Lfunc_end40-_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm2EJLm0ELm1EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_,"axG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_,comdat
	.weak	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_ # -- Begin function _ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_
	.p2align	4, 0x90
	.type	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_,@function
_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_: # @_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rdi, %r13
	movq	16(%rdi), %r15
	leaq	8(%rdi), %r9
	testq	%r15, %r15
	movq	%rsi, 32(%rsp)                  # 8-byte Spill
	je	.LBB41_12
# %bb.1:                                # %.lr.ph.i.i.i
	movq	%r13, 24(%rsp)                  # 8-byte Spill
	movq	(%rsi), %r14
	movq	8(%rsi), %rbp
	movl	$2147483647, %r13d              # imm = 0x7FFFFFFF
	movq	%r9, 16(%rsp)                   # 8-byte Spill
	movq	%r9, %r12
	jmp	.LBB41_2
	.p2align	4, 0x90
.LBB41_4:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB41_2 Depth=1
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rbx
	movl	%ebx, %eax
.LBB41_5:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i
                                        #   in Loop: Header=BB41_2 Depth=1
	testl	%eax, %eax
	cmovnsq	%r15, %r12
	shrl	$31, %eax
	movq	16(%r15,%rax,8), %r15
	testq	%r15, %r15
	je	.LBB41_6
.LBB41_2:                               # =>This Inner Loop Header: Depth=1
	movq	32(%r15), %rdx
	movq	%rdx, %rbx
	subq	%r14, %rbx
	cmovaeq	%r14, %rdx
	testq	%rdx, %rdx
	je	.LBB41_4
# %bb.3:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB41_2 Depth=1
	movq	40(%r15), %rdi
	movq	%rbp, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB41_5
	jmp	.LBB41_4
.LBB41_6:                               # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE11lower_boundERSB_.exit
	movq	16(%rsp), %r9                   # 8-byte Reload
	cmpq	%r9, %r12
	movq	24(%rsp), %r13                  # 8-byte Reload
	je	.LBB41_12
# %bb.7:
	movq	32(%r12), %rdx
	movq	%r14, %rbx
	subq	%rdx, %rbx
	cmovbq	%r14, %rdx
	testq	%rdx, %rdx
	je	.LBB41_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	movq	40(%r12), %rsi
	movq	%rbp, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	je	.LBB41_9
# %bb.10:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
	testl	%eax, %eax
	js	.LBB41_11
.LBB41_13:
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	(%rax), %rax
	movq	%rax, 48(%r12)
	xorl	%edx, %edx
	jmp	.LBB41_14
.LBB41_9:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%rbx, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
	testl	%eax, %eax
	jns	.LBB41_13
.LBB41_11:
	movq	%r12, %r9
.LBB41_12:                              # %.critedge
	movq	32(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 48(%rsp)
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rax, 40(%rsp)
	leaq	48(%rsp), %rcx
	leaq	40(%rsp), %r8
	movl	$_ZSt19piecewise_construct, %edx
	movq	%r13, %rdi
	movq	%r9, %rsi
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	movq	%rax, %r12
	movb	$1, %dl
.LBB41_14:
	movq	%r12, %rax
                                        # kill: def $dl killed $dl killed $edx
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end41:
	.size	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_, .Lfunc_end41-_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE16insert_or_assignIRS7_EESA_ISt17_Rb_tree_iteratorISC_EbEOS3_OT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
.Lfunc_begin22:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception22
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r15
	movq	%rcx, %r12
	movq	%rsi, %rbp
	movq	%rdi, %r14
	movl	$56, %edi
	callq	_Znwm
	movq	%rax, %rbx
	leaq	32(%rax), %r13
	movq	(%r12), %rax
	movq	(%r15), %rcx
	movups	(%rax), %xmm0
	movups	%xmm0, 32(%rbx)
	movq	(%rcx), %rax
	movq	%rax, 48(%rbx)
.Ltmp712:
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
.Ltmp713:
# %bb.1:
	movq	%rax, %rbp
	movq	%rdx, %r15
	testq	%rdx, %rdx
	je	.LBB42_9
# %bb.2:
	leaq	8(%r14), %r12
	movb	$1, %al
	testq	%rbp, %rbp
	jne	.LBB42_8
# %bb.3:
	cmpq	%r15, %r12
	je	.LBB42_8
# %bb.4:
	movq	(%r13), %rax
	movq	32(%r15), %rdx
	movq	%rax, %r13
	subq	%rdx, %r13
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB42_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	movq	40(%r15), %rsi
	movq	40(%rbx), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB42_7
.LBB42_6:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
	cmpq	$-2147483647, %r13              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r13, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB42_7:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i
	shrl	$31, %eax
.LBB42_8:
	movzbl	%al, %edi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	movq	%r12, %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	40(%r14)
	jmp	.LBB42_10
.LBB42_9:
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%rbp, %rbx
.LBB42_10:
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB42_14:
	.cfi_def_cfa_offset 64
.Ltmp714:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%rbx, %rdi
	callq	_ZdlPv
.Ltmp715:
	callq	__cxa_rethrow
.Ltmp716:
# %bb.15:
.LBB42_11:
.Ltmp717:
	movq	%rax, %rbx
.Ltmp718:
	callq	__cxa_end_catch
.Ltmp719:
# %bb.12:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB42_13:
.Ltmp720:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end42:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_, .Lfunc_end42-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS3_EESL_IJRS9_EEEEESt17_Rb_tree_iteratorISA_ESt23_Rb_tree_const_iteratorISA_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table42:
.Lexception22:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase13-.Lttbaseref13
.Lttbaseref13:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end22-.Lcst_begin22
.Lcst_begin22:
	.uleb128 .Lfunc_begin22-.Lfunc_begin22  # >> Call Site 1 <<
	.uleb128 .Ltmp712-.Lfunc_begin22        #   Call between .Lfunc_begin22 and .Ltmp712
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp712-.Lfunc_begin22        # >> Call Site 2 <<
	.uleb128 .Ltmp713-.Ltmp712              #   Call between .Ltmp712 and .Ltmp713
	.uleb128 .Ltmp714-.Lfunc_begin22        #     jumps to .Ltmp714
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp713-.Lfunc_begin22        # >> Call Site 3 <<
	.uleb128 .Ltmp715-.Ltmp713              #   Call between .Ltmp713 and .Ltmp715
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp715-.Lfunc_begin22        # >> Call Site 4 <<
	.uleb128 .Ltmp716-.Ltmp715              #   Call between .Ltmp715 and .Ltmp716
	.uleb128 .Ltmp717-.Lfunc_begin22        #     jumps to .Ltmp717
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp718-.Lfunc_begin22        # >> Call Site 5 <<
	.uleb128 .Ltmp719-.Ltmp718              #   Call between .Ltmp718 and .Ltmp719
	.uleb128 .Ltmp720-.Lfunc_begin22        #     jumps to .Ltmp720
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp719-.Lfunc_begin22        # >> Call Site 6 <<
	.uleb128 .Lfunc_end42-.Ltmp719          #   Call between .Ltmp719 and .Lfunc_end42
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end22:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase13:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbp
	movq	%rdi, %r15
	leaq	8(%rdi), %rax
	cmpq	%rsi, %rax
	je	.LBB43_4
# %bb.1:
	movq	%rsi, %rbx
	movq	%r15, (%rsp)                    # 8-byte Spill
	movq	(%rbp), %r14
	movq	32(%rsi), %r15
	movq	%r14, %r12
	subq	%r15, %r12
	movq	%r15, %r13
	cmovbq	%r14, %r13
	testq	%r13, %r13
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	je	.LBB43_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i17
	movq	%rbp, %rax
	movq	40(%rbx), %rbp
	movq	8(%rax), %rdi
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	memcmp
	testl	%eax, %eax
	je	.LBB43_11
# %bb.3:                                # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23.thread
	js	.LBB43_12
	jmp	.LBB43_18
.LBB43_4:
	cmpq	$0, 40(%r15)
	je	.LBB43_9
# %bb.5:
	movq	32(%r15), %rbx
	movq	32(%rbx), %rax
	movq	(%rbp), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB43_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	movq	8(%rbp), %rsi
	movq	40(%rbx), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB43_8
.LBB43_7:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r14, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB43_8:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
	testl	%eax, %eax
	js	.LBB43_30
.LBB43_9:
	movq	%r15, %rdi
	movq	%rbp, %rsi
	jmp	.LBB43_28
.LBB43_10:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovgeq	%r12, %rax
	cmpq	$2147483647, %rax               # imm = 0x7FFFFFFF
	movl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	cmovlq	%rax, %rcx
	testl	%ecx, %ecx
	js	.LBB43_12
	jmp	.LBB43_21
.LBB43_11:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23.thread88
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovgeq	%r12, %rax
	cmpq	$2147483647, %rax               # imm = 0x7FFFFFFF
	movl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	cmovlq	%rax, %rcx
	testl	%ecx, %ecx
	jns	.LBB43_18
.LBB43_12:
	movq	(%rsp), %rax                    # 8-byte Reload
	cmpq	%rbx, 24(%rax)
	je	.LBB43_29
# %bb.13:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	movq	%rax, %r13
	movq	32(%rax), %rax
	movq	%rax, %r15
	subq	%r14, %r15
	cmovbq	%rax, %r14
	testq	%r14, %r14
	movq	8(%rsp), %r12                   # 8-byte Reload
	je	.LBB43_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	movq	8(%r12), %rsi
	movq	40(%r13), %rdi
	movq	%r14, %rdx
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB43_16
.LBB43_15:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i35
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB43_16:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit37
	testl	%eax, %eax
	js	.LBB43_31
# %bb.17:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r12, %rsi
	jmp	.LBB43_28
.LBB43_18:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i45
	movq	%rbp, %rdi
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r13, %rdx
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	je	.LBB43_21
# %bb.19:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit51
	testl	%eax, %eax
	js	.LBB43_22
.LBB43_20:
	movq	%rbx, %rax
	xorl	%ebx, %ebx
	jmp	.LBB43_34
.LBB43_21:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i49
	subq	%r14, %r15
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
	testl	%eax, %eax
	jns	.LBB43_20
.LBB43_22:
	movq	(%rsp), %rax                    # 8-byte Reload
	cmpq	%rbx, 32(%rax)
	je	.LBB43_30
# %bb.23:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
	movq	%rax, %r13
	movq	32(%rax), %rdx
	movq	%r14, %r15
	subq	%rdx, %r15
	cmovbq	%r14, %rdx
	testq	%rdx, %rdx
	movq	8(%rsp), %r14                   # 8-byte Reload
	je	.LBB43_25
# %bb.24:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i59
	movq	40(%r13), %rsi
	movq	8(%r14), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB43_26
.LBB43_25:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i63
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB43_26:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit65
	testl	%eax, %eax
	js	.LBB43_33
# %bb.27:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r14, %rsi
.LBB43_28:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_
	movq	%rdx, %rbx
	jmp	.LBB43_34
.LBB43_30:
	xorl	%eax, %eax
	jmp	.LBB43_34
.LBB43_29:
	movq	%rbx, %rax
	jmp	.LBB43_34
.LBB43_31:
	movq	24(%r13), %rax
	testq	%rax, %rax
	cmovneq	%rbx, %rax
	cmoveq	%r13, %rbx
	jmp	.LBB43_34
.LBB43_33:
	movq	24(%rbx), %rax
	testq	%rax, %rax
	cmovneq	%r13, %rax
	cmovneq	%r13, %rbx
.LBB43_34:
	movq	%rbx, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end43:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_, .Lfunc_end43-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISA_ERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r13
	movq	16(%rdi), %rcx
	testq	%rcx, %rcx
	je	.LBB44_1
# %bb.2:                                # %.lr.ph
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	movq	(%r13), %r15
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	movq	8(%r13), %r12
	movq	$-2147483648, %rbp              # imm = 0x80000000
	movl	$2147483647, %r14d              # imm = 0x7FFFFFFF
	jmp	.LBB44_3
	.p2align	4, 0x90
.LBB44_5:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB44_3 Depth=1
	cmpq	$-2147483647, %r13              # imm = 0x80000001
	cmovlq	%rbp, %r13
	cmpq	$2147483647, %r13               # imm = 0x7FFFFFFF
	cmovgeq	%r14, %r13
	movl	%r13d, %eax
.LBB44_6:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
                                        #   in Loop: Header=BB44_3 Depth=1
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setns	%cl
	movq	16(%rbx,%rcx,8), %rcx
	testq	%rcx, %rcx
	je	.LBB44_7
.LBB44_3:                               # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rbx
	movq	32(%rcx), %rdx
	movq	%r15, %r13
	subq	%rdx, %r13
	cmovbq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB44_5
# %bb.4:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB44_3 Depth=1
	movq	40(%rbx), %rsi
	movq	%r12, %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB44_6
	jmp	.LBB44_5
.LBB44_7:                               # %._crit_edge
	movq	%rbx, %r12
	testl	%eax, %eax
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	8(%rsp), %rdi                   # 8-byte Reload
	jns	.LBB44_11
# %bb.8:                                # %._crit_edge.thread
	cmpq	24(%rdi), %rbx
	je	.LBB44_9
.LBB44_10:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	movq	%rax, %r12
.LBB44_11:
	movq	32(%r12), %rax
	movq	(%r13), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB44_13
# %bb.12:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i12
	movq	8(%r13), %rsi
	movq	40(%r12), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB44_14
.LBB44_13:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i16
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r14, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB44_14:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit18
	xorl	%ecx, %ecx
	testl	%eax, %eax
	cmovsq	%rcx, %r12
	cmovnsq	%rcx, %rbx
	jmp	.LBB44_15
.LBB44_1:
	leaq	8(%rdi), %rbx
	cmpq	24(%rdi), %rbx
	jne	.LBB44_10
.LBB44_9:
	xorl	%r12d, %r12d
.LBB44_15:
	movq	%r12, %rax
	movq	%rbx, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end44:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_, .Lfunc_end44-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE24_M_get_insert_unique_posERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,"axG",@progbits,_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,comdat
	.weak	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_ # -- Begin function _ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
	.p2align	4, 0x90
	.type	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,@function
_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_: # @_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
.Lfunc_begin23:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception23
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$64, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movups	(%rsi), %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_, 40(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation, 32(%rsp)
	movb	$1, 48(%rsp)
	movq	%rdi, 8(%rsp)
.Ltmp721:
	leaq	8(%rsp), %rdi
	leaq	16(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_
.Ltmp722:
# %bb.1:                                # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit
	movzbl	48(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp724:
	leaq	8(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp725:
# %bb.2:                                # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit
	cmpb	$1, 32(%rbx)
	jne	.LBB45_6
# %bb.3:                                # %_ZSt3getILm1EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSI_.exit
	movq	%rbx, %rax
	addq	$64, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB45_6:
	.cfi_def_cfa_offset 80
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.LBB45_5:
.Ltmp726:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB45_4:
.Ltmp723:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end45:
	.size	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_, .Lfunc_end45-_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,"aG",@progbits,_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,comdat
	.p2align	2, 0x0
GCC_except_table45:
.Lexception23:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase14-.Lttbaseref14
.Lttbaseref14:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end23-.Lcst_begin23
.Lcst_begin23:
	.uleb128 .Ltmp721-.Lfunc_begin23        # >> Call Site 1 <<
	.uleb128 .Ltmp722-.Ltmp721              #   Call between .Ltmp721 and .Ltmp722
	.uleb128 .Ltmp723-.Lfunc_begin23        #     jumps to .Ltmp723
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp724-.Lfunc_begin23        # >> Call Site 2 <<
	.uleb128 .Ltmp725-.Ltmp724              #   Call between .Ltmp724 and .Ltmp725
	.uleb128 .Ltmp726-.Lfunc_begin23        #     jumps to .Ltmp726
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp725-.Lfunc_begin23        # >> Call Site 3 <<
	.uleb128 .Lfunc_end45-.Ltmp725          #   Call between .Ltmp725 and .Lfunc_end45
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end23:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase14:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_,"axG",@progbits,_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_,comdat
	.weak	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_ # -- Begin function _ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_,@function
_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_: # @_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_
	.cfi_startproc
# %bb.0:
	jmp	_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_ # TAILCALL
.Lfunc_end46:
	.size	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_, .Lfunc_end46-_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	cmpl	$2, %edx
	je	.LBB47_5
# %bb.1:
	cmpl	$1, %edx
	je	.LBB47_4
# %bb.2:
	testl	%edx, %edx
	jne	.LBB47_6
# %bb.3:
	movq	$_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_, (%rdi)
	xorl	%eax, %eax
	retq
.LBB47_5:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdi)
.LBB47_6:
	xorl	%eax, %eax
	retq
.LBB47_4:
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end47:
	.size	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation, .Lfunc_end47-_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_,"axG",@progbits,_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_,comdat
	.weak	_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_ # -- Begin function _ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_
	.p2align	4, 0x90
	.type	_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_,@function
_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_: # @_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_
.Lfunc_begin24:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception24
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$432, %rsp                      # imm = 0x1B0
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movq	8(%rdi), %r14
	leaq	40(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	56(%rsp), %rdi
.Ltmp727:
	movq	%rbx, %rsi
	callq	_ZN8argparselsERSoRKNS_14ArgumentParserE
.Ltmp728:
# %bb.1:                                # %_ZNK8argparse14ArgumentParser4helpB5cxx11Ev.exit
	leaq	24(%rsp), %r15
	movq	%r15, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	movq	104(%rsp), %rax
	testq	%rax, %rax
	je	.LBB48_4
# %bb.2:                                # %.invoke.i.i
	movq	88(%rsp), %r8
	movq	96(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp730:
	leaq	8(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp731:
	jmp	.LBB48_5
.LBB48_4:
	leaq	136(%rsp), %rsi
.Ltmp732:
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp733:
.LBB48_5:                               # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp735:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp736:
# %bb.6:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB48_8
# %bb.7:
	callq	_ZdlPv
.LBB48_8:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 40(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 40(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 56(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 64(%rsp)
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB48_10
# %bb.9:
	callq	_ZdlPv
.LBB48_10:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 64(%rsp)
	leaq	120(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 40(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 40(%rsp,%rax)
	movq	$0, 48(%rsp)
	leaq	168(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	cmpb	$0, 128(%rbx)
	jne	.LBB48_11
# %bb.16:
	addq	$432, %rsp                      # imm = 0x1B0
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB48_11:
	.cfi_def_cfa_offset 464
	xorl	%edi, %edi
	callq	exit
.LBB48_12:
.Ltmp737:
	jmp	.LBB48_13
.LBB48_3:
.Ltmp734:
.LBB48_13:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB48_15
# %bb.14:                               # %.body.sink.split
	callq	_ZdlPv
	jmp	.LBB48_15
.LBB48_17:
.Ltmp729:
	movq	%rax, %rbx
.LBB48_15:                              # %.body
	leaq	40(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end48:
	.size	_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_, .Lfunc_end48-_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_
	.cfi_endproc
	.section	.gcc_except_table._ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_,"aG",@progbits,_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E_clIS6_EEDaSB_,comdat
	.p2align	2, 0x0
GCC_except_table48:
.Lexception24:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end24-.Lcst_begin24
.Lcst_begin24:
	.uleb128 .Lfunc_begin24-.Lfunc_begin24  # >> Call Site 1 <<
	.uleb128 .Ltmp727-.Lfunc_begin24        #   Call between .Lfunc_begin24 and .Ltmp727
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp727-.Lfunc_begin24        # >> Call Site 2 <<
	.uleb128 .Ltmp728-.Ltmp727              #   Call between .Ltmp727 and .Ltmp728
	.uleb128 .Ltmp729-.Lfunc_begin24        #     jumps to .Ltmp729
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp730-.Lfunc_begin24        # >> Call Site 3 <<
	.uleb128 .Ltmp733-.Ltmp730              #   Call between .Ltmp730 and .Ltmp733
	.uleb128 .Ltmp734-.Lfunc_begin24        #     jumps to .Ltmp734
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp735-.Lfunc_begin24        # >> Call Site 4 <<
	.uleb128 .Ltmp736-.Ltmp735              #   Call between .Ltmp735 and .Ltmp736
	.uleb128 .Ltmp737-.Lfunc_begin24        #     jumps to .Ltmp737
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp736-.Lfunc_begin24        # >> Call Site 5 <<
	.uleb128 .Lfunc_end48-.Ltmp736          #   Call between .Ltmp736 and .Lfunc_end48
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt18bad_variant_accessD0Ev,"axG",@progbits,_ZNSt18bad_variant_accessD0Ev,comdat
	.weak	_ZNSt18bad_variant_accessD0Ev   # -- Begin function _ZNSt18bad_variant_accessD0Ev
	.p2align	4, 0x90
	.type	_ZNSt18bad_variant_accessD0Ev,@function
_ZNSt18bad_variant_accessD0Ev:          # @_ZNSt18bad_variant_accessD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZNSt9exceptionD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end49:
	.size	_ZNSt18bad_variant_accessD0Ev, .Lfunc_end49-_ZNSt18bad_variant_accessD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt18bad_variant_access4whatEv,"axG",@progbits,_ZNKSt18bad_variant_access4whatEv,comdat
	.weak	_ZNKSt18bad_variant_access4whatEv # -- Begin function _ZNKSt18bad_variant_access4whatEv
	.p2align	4, 0x90
	.type	_ZNKSt18bad_variant_access4whatEv,@function
_ZNKSt18bad_variant_access4whatEv:      # @_ZNKSt18bad_variant_access4whatEv
	.cfi_startproc
# %bb.0:
	movq	8(%rdi), %rax
	retq
.Lfunc_end50:
	.size	_ZNKSt18bad_variant_access4whatEv, .Lfunc_end50-_ZNKSt18bad_variant_access4whatEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_,"axG",@progbits,_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_,comdat
	.weak	_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_ # -- Begin function _ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_
	.p2align	4, 0x90
	.type	_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_,@function
_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_: # @_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_
.Lfunc_begin25:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception25
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	movq	%rsi, %r14
	movq	(%rdi), %rbx
	movzbl	32(%rbx), %eax
	cmpq	$1, %rax
	jne	.LBB51_3
# %bb.1:
	movq	16(%r14), %rcx
	movq	24(%r14), %rdx
	movq	$0, 16(%r14)
	movups	(%rbx), %xmm0
	movaps	%xmm0, (%rsp)
	movups	(%r14), %xmm0
	movups	%xmm0, (%rbx)
	movq	16(%rbx), %rax
	movq	%rax, 16(%rsp)
	movq	%rcx, 16(%rbx)
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%rsp)
	movq	%rdx, 24(%rbx)
	testq	%rax, %rax
	je	.LBB51_4
# %bb.2:
.Ltmp738:
	movq	%rsp, %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp739:
	jmp	.LBB51_4
.LBB51_3:
	cmpb	$-1, %al
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
	movq	%rsp, %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
	movb	$1, 32(%rbx)
	movq	$0, 16(%rbx)
	movups	(%r14), %xmm0
	movaps	%xmm0, (%rsp)
	movups	(%rbx), %xmm0
	movups	%xmm0, (%r14)
	movaps	(%rsp), %xmm0
	movups	%xmm0, (%rbx)
	movq	16(%r14), %rax
	movq	16(%rbx), %rcx
	movq	%rcx, 16(%r14)
	movq	%rax, 16(%rbx)
	movq	24(%r14), %rax
	movq	24(%rbx), %rcx
	movq	%rcx, 24(%r14)
	movq	%rax, 24(%rbx)
	cmpb	$1, 32(%rbx)
	jne	.LBB51_6
.LBB51_4:                               # %_ZZNSt8__detail9__variant17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEEaSEOSG_ENUlOT_T0_E_clIRSF_St17integral_constantImLm1EEEENS0_20__variant_idx_cookieESJ_SK_.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB51_6:
	.cfi_def_cfa_offset 64
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.LBB51_5:
.Ltmp740:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end51:
	.size	_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_, .Lfunc_end51-_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_
	.cfi_endproc
	.section	.gcc_except_table._ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_,"aG",@progbits,_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_,comdat
	.p2align	2, 0x0
GCC_except_table51:
.Lexception25:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase15-.Lttbaseref15
.Lttbaseref15:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end25-.Lcst_begin25
.Lcst_begin25:
	.uleb128 .Ltmp738-.Lfunc_begin25        # >> Call Site 1 <<
	.uleb128 .Ltmp739-.Ltmp738              #   Call between .Ltmp738 and .Ltmp739
	.uleb128 .Ltmp740-.Lfunc_begin25        #     jumps to .Ltmp740
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp739-.Lfunc_begin25        # >> Call Site 2 <<
	.uleb128 .Lfunc_end51-.Ltmp739          #   Call between .Ltmp739 and .Lfunc_end51
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end25:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase15:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z,"axG",@progbits,_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z,comdat
	.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z # -- Begin function _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
	.p2align	4, 0x90
	.type	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z,@function
_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z: # @_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	subq	$216, %rsp
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movq	%rsi, %r10
	movq	%rdi, %rbx
	movq	%r8, -208(%rbp)
	movq	%r9, -200(%rbp)
	testb	%al, %al
	je	.LBB52_8
# %bb.7:
	movaps	%xmm0, -192(%rbp)
	movaps	%xmm1, -176(%rbp)
	movaps	%xmm2, -160(%rbp)
	movaps	%xmm3, -144(%rbp)
	movaps	%xmm4, -128(%rbp)
	movaps	%xmm5, -112(%rbp)
	movaps	%xmm6, -96(%rbp)
	movaps	%xmm7, -80(%rbp)
.LBB52_8:
	movq	%rsp, %r14
	leaq	15(%rdx), %rax
	andq	$-16, %rax
	subq	%rax, %r14
	movq	%r14, %rsp
	leaq	-240(%rbp), %rax
	movq	%rax, -48(%rbp)
	leaq	16(%rbp), %rax
	movq	%rax, -56(%rbp)
	movabsq	$206158430240, %rax             # imm = 0x3000000020
	movq	%rax, -64(%rbp)
	leaq	-64(%rbp), %rax
	movq	%r14, %rdi
	movq	%rdx, %rsi
	movq	%rcx, %rdx
	movq	%rax, %rcx
	callq	*%r10
	movslq	%eax, %r15
	leaq	16(%rbx), %rax
	movq	%rax, (%rbx)
	movq	%r15, -32(%rbp)
	cmpl	$16, %r15d
	jb	.LBB52_2
# %bb.1:                                # %.noexc5.i
	leaq	-32(%rbp), %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, (%rbx)
	movq	-32(%rbp), %rcx
	movq	%rcx, 16(%rbx)
.LBB52_2:                               # %._crit_edge.i.i.i.i
	testq	%r15, %r15
	je	.LBB52_6
# %bb.3:                                # %._crit_edge.i.i.i.i
	cmpq	$1, %r15
	jne	.LBB52_5
# %bb.4:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB52_6
.LBB52_5:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB52_6:
	movq	-32(%rbp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	%rbx, %rax
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Lfunc_end52:
	.size	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z, .Lfunc_end52-_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_mPKS8_P13__va_list_tagEmSB_z
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"axG",@progbits,_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.weak	_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE # -- Begin function _ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.p2align	4, 0x90
	.type	_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,@function
_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE: # @_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.cfi_startproc
# %bb.0:
	cmpl	$4, %edi
	ja	.LBB53_6
# %bb.1:
	movl	%edi, %eax
	jmpq	*.LJTI53_0(,%rax,8)
.LBB53_2:
	addq	$8, %rsi
	movq	%rsi, (%rdx)
	retq
.LBB53_3:
	movq	$_ZTIb, (%rdx)
	retq
.LBB53_4:
	movq	(%rdx), %rax
	movzbl	8(%rsi), %ecx
	movb	%cl, 8(%rax)
	movq	(%rsi), %rax
	movq	(%rdx), %rcx
	movq	%rax, (%rcx)
	retq
.LBB53_5:
	movq	(%rdx), %rax
	movzbl	8(%rsi), %ecx
	movb	%cl, 8(%rax)
	movq	(%rsi), %rax
	movq	(%rdx), %rcx
	movq	%rax, (%rcx)
	movq	$0, (%rsi)
.LBB53_6:
	retq
.Lfunc_end53:
	.size	_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, .Lfunc_end53-_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.cfi_endproc
	.section	.rodata._ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"aG",@progbits,_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.p2align	3, 0x0
.LJTI53_0:
	.quad	.LBB53_2
	.quad	.LBB53_3
	.quad	.LBB53_4
	.quad	.LBB53_6
	.quad	.LBB53_5
                                        # -- End function
	.section	.text._ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,"axG",@progbits,_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,comdat
	.weak	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_ # -- Begin function _ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
	.p2align	4, 0x90
	.type	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,@function
_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_: # @_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
.Lfunc_begin26:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception26
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$64, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movups	(%rsi), %xmm0
	movaps	%xmm0, 16(%rsp)
	movq	$_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_, 40(%rsp)
	movq	$_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation, 32(%rsp)
	movb	$1, 48(%rsp)
	movq	%rdi, 8(%rsp)
.Ltmp741:
	leaq	8(%rsp), %rdi
	leaq	16(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZSt13__invoke_implINSt8__detail9__variant20__variant_idx_cookieEZNS1_17_Move_assign_baseILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEEaSEOSI_EUlOT_T0_E_JRSH_St17integral_constantImLm1EEEESK_St14__invoke_otherOSM_DpOT1_
.Ltmp742:
# %bb.1:                                # %_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEEaSEOSE_.exit
	movzbl	48(%rsp), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp744:
	leaq	8(%rsp), %rdi
	leaq	16(%rsp), %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp745:
# %bb.2:                                # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit
	cmpb	$1, 32(%rbx)
	jne	.LBB54_6
# %bb.3:                                # %_ZSt3getILm1EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEERNSt19variant_alternativeIXT_ESt7variantIJDpT0_EEE4typeERSI_.exit
	movq	%rbx, %rax
	addq	$64, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.LBB54_6:
	.cfi_def_cfa_offset 80
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt18bad_variant_access+16, (%rax)
	movq	$.L.str.40, 8(%rax)
	movl	$_ZTISt18bad_variant_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.LBB54_5:
.Ltmp746:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB54_4:
.Ltmp743:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end54:
	.size	_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_, .Lfunc_end54-_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,"aG",@progbits,_ZNSt7variantIJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES0_IFvS9_EEEE7emplaceILm1EJZN8argparse14ArgumentParserC1ES7_S7_NSG_17default_argumentsEbRSoEUlRKT_E0_EEENSt9enable_ifIX18is_constructible_vINSt19variant_alternativeIXT_ESE_E4typeEDpT0_EERSR_E4typeEDpOSS_,comdat
	.p2align	2, 0x0
GCC_except_table54:
.Lexception26:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase16-.Lttbaseref16
.Lttbaseref16:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end26-.Lcst_begin26
.Lcst_begin26:
	.uleb128 .Ltmp741-.Lfunc_begin26        # >> Call Site 1 <<
	.uleb128 .Ltmp742-.Ltmp741              #   Call between .Ltmp741 and .Ltmp742
	.uleb128 .Ltmp743-.Lfunc_begin26        #     jumps to .Ltmp743
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp744-.Lfunc_begin26        # >> Call Site 2 <<
	.uleb128 .Ltmp745-.Ltmp744              #   Call between .Ltmp744 and .Ltmp745
	.uleb128 .Ltmp746-.Lfunc_begin26        #     jumps to .Ltmp746
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp745-.Lfunc_begin26        # >> Call Site 3 <<
	.uleb128 .Lfunc_end54-.Ltmp745          #   Call between .Ltmp745 and .Lfunc_end54
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end26:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase16:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_,"axG",@progbits,_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_,comdat
	.weak	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_ # -- Begin function _ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_,@function
_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_: # @_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %r15
	movq	8(%rdi), %rdi
	movq	32(%r15), %rsi
	movq	40(%r15), %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	%rax, %rbx
	movq	(%rax), %rax
	movq	-24(%rax), %rax
	movq	240(%rbx,%rax), %r14
	testq	%r14, %r14
	je	.LBB55_6
# %bb.1:                                # %_ZSt13__check_facetISt5ctypeIcEERKT_PS3_.exit.i.i.i
	cmpb	$0, 56(%r14)
	je	.LBB55_3
# %bb.2:
	movzbl	67(%r14), %eax
	jmp	.LBB55_4
.LBB55_3:
	movq	%r14, %rdi
	callq	_ZNKSt5ctypeIcE13_M_widen_initEv
	movq	(%r14), %rax
	movq	%r14, %rdi
	movl	$10, %esi
	callq	*48(%rax)
.LBB55_4:                               # %_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_.exit.i
	movsbl	%al, %esi
	movq	%rbx, %rdi
	callq	_ZNSo3putEc
	movq	%rax, %rdi
	callq	_ZNSo5flushEv
	cmpb	$0, 128(%r15)
	jne	.LBB55_7
# %bb.5:                                # %_ZZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoENKUlRKT_E0_clIS6_EEDaSB_.exit
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB55_6:
	.cfi_def_cfa_offset 32
	callq	_ZSt16__throw_bad_castv
.LBB55_7:
	xorl	%edi, %edi
	callq	exit
.Lfunc_end55:
	.size	_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_, .Lfunc_end55-_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	cmpl	$2, %edx
	je	.LBB56_5
# %bb.1:
	cmpl	$1, %edx
	je	.LBB56_4
# %bb.2:
	testl	%edx, %edx
	jne	.LBB56_6
# %bb.3:
	movq	$_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_, (%rdi)
	xorl	%eax, %eax
	retq
.LBB56_5:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdi)
.LBB56_6:
	xorl	%eax, %eax
	retq
.LBB56_4:
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end56:
	.size	_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation, .Lfunc_end56-_ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rsi, %rsi
	je	.LBB57_3
# %bb.1:                                # %.lr.ph.preheader
	movq	%rsi, %r14
	movq	%rdi, %rbx
	.p2align	4, 0x90
.LBB57_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
	movq	16(%r14), %r15
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r15, %r14
	testq	%r15, %r15
	jne	.LBB57_2
.LBB57_3:                               # %._crit_edge
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end57:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E, .Lfunc_end57-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rsi, %rsi
	je	.LBB58_3
# %bb.1:                                # %.lr.ph.preheader
	movq	%rsi, %r14
	movq	%rdi, %rbx
	.p2align	4, 0x90
.LBB58_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
	movq	16(%r14), %r15
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r15, %r14
	testq	%r15, %r15
	jne	.LBB58_2
.LBB58_3:                               # %._crit_edge
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end58:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E, .Lfunc_end58-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE8_M_eraseEPSt13_Rb_tree_nodeISC_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	testq	%rsi, %rsi
	je	.LBB59_3
# %bb.1:                                # %.lr.ph.preheader
	movq	%rsi, %r14
	movq	%rdi, %rbx
	.p2align	4, 0x90
.LBB59_2:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	24(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	movq	16(%r14), %r15
	movq	%r14, %rdi
	callq	_ZdlPv
	movq	%r15, %r14
	testq	%r15, %r15
	jne	.LBB59_2
.LBB59_3:                               # %._crit_edge
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end59:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E, .Lfunc_end59-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE8_M_eraseEPSt13_Rb_tree_nodeISA_E
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse8ArgumentD2Ev,"axG",@progbits,_ZN8argparse8ArgumentD2Ev,comdat
	.weak	_ZN8argparse8ArgumentD2Ev       # -- Begin function _ZN8argparse8ArgumentD2Ev
	.p2align	4, 0x90
	.type	_ZN8argparse8ArgumentD2Ev,@function
_ZN8argparse8ArgumentD2Ev:              # @_ZN8argparse8ArgumentD2Ev
.Lfunc_begin27:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception27
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	280(%rdi), %r14
	movq	288(%rdi), %r15
	cmpq	%r15, %r14
	jne	.LBB60_1
# %bb.6:                                # %_ZSt8_DestroyIPSt3anyS0_EvT_S2_RSaIT0_E.exit.i
	testq	%r14, %r14
	je	.LBB60_8
.LBB60_7:
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB60_8:                               # %_ZNSt6vectorISt3anySaIS0_EED2Ev.exit
	leaq	240(%rbx), %rsi
	movzbl	272(%rbx), %eax
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
.Ltmp750:
	leaq	15(%rsp), %rdi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE(,%rcx,8)
.Ltmp751:
# %bb.9:                                # %_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev.exit
	movb	$-1, 272(%rbx)
	cmpb	$0, 232(%rbx)
	je	.LBB60_17
# %bb.10:
	movb	$0, 232(%rbx)
	movq	208(%rbx), %r14
	movq	216(%rbx), %r15
	cmpq	%r15, %r14
	jne	.LBB60_11
# %bb.15:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i.i.i.i.i
	testq	%r14, %r14
	je	.LBB60_17
.LBB60_16:
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB60_17:                              # %_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev.exit
	movq	192(%rbx), %rax
	testq	%rax, %rax
	je	.LBB60_20
# %bb.18:
.Ltmp753:
	leaq	192(%rbx), %r14
	movl	$3, %edi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp754:
# %bb.19:
	movq	$0, (%r14)
.LBB60_20:                              # %_ZNSt3anyD2Ev.exit
	cmpb	$0, 184(%rbx)
	je	.LBB60_23
# %bb.21:
	movb	$0, 184(%rbx)
	movq	152(%rbx), %rdi
	leaq	168(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB60_23
# %bb.22:
	callq	_ZdlPv
.LBB60_23:                              # %_ZNSt14_Optional_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ELb0EED2Ev.exit
	movq	120(%rbx), %rdi
	leaq	136(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB60_25
# %bb.24:
	callq	_ZdlPv
.LBB60_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	104(%rbx), %rax
	testq	%rax, %rax
	je	.LBB60_28
# %bb.26:
.Ltmp756:
	leaq	104(%rbx), %r14
	movl	$3, %edi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp757:
# %bb.27:
	movq	$0, (%r14)
.LBB60_28:                              # %_ZNSt3anyD2Ev.exit5
	movq	72(%rbx), %rdi
	leaq	88(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB60_30
# %bb.29:
	callq	_ZdlPv
.LBB60_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	movq	40(%rbx), %rdi
	leaq	56(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB60_32
# %bb.31:
	callq	_ZdlPv
.LBB60_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit7
	movq	(%rbx), %r14
	movq	8(%rbx), %r15
	cmpq	%r15, %r14
	jne	.LBB60_33
# %bb.37:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	testq	%r14, %r14
	je	.LBB60_39
.LBB60_38:
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB60_39:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB60_35:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB60_33 Depth=1
	.cfi_def_cfa_offset 48
	addq	$16, %r14
	cmpq	%r15, %r14
	je	.LBB60_36
.LBB60_33:                              # %.lr.ph.i.i.i.i10
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rdi
	addq	$16, %r14
	cmpq	%r14, %rdi
	je	.LBB60_35
# %bb.34:                               #   in Loop: Header=BB60_33 Depth=1
	callq	_ZdlPv
	jmp	.LBB60_35
	.p2align	4, 0x90
.LBB60_4:                               # %_ZSt8_DestroyISt3anyEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB60_1 Depth=1
	addq	$16, %r14
	cmpq	%r15, %r14
	je	.LBB60_5
.LBB60_1:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB60_4
# %bb.2:                                #   in Loop: Header=BB60_1 Depth=1
.Ltmp747:
	movl	$3, %edi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp748:
# %bb.3:                                #   in Loop: Header=BB60_1 Depth=1
	movq	$0, (%r14)
	jmp	.LBB60_4
	.p2align	4, 0x90
.LBB60_13:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB60_11 Depth=1
	addq	$16, %r14
	cmpq	%r15, %r14
	je	.LBB60_14
.LBB60_11:                              # %.lr.ph.i.i.i.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rdi
	addq	$16, %r14
	cmpq	%r14, %rdi
	je	.LBB60_13
# %bb.12:                               #   in Loop: Header=BB60_11 Depth=1
	callq	_ZdlPv
	jmp	.LBB60_13
.LBB60_36:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	movq	(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB60_38
	jmp	.LBB60_39
.LBB60_5:                               # %_ZSt8_DestroyIPSt3anyS0_EvT_S2_RSaIT0_E.exitthread-pre-split.i
	movq	280(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB60_7
	jmp	.LBB60_8
.LBB60_14:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i.i.i.i.i
	movq	208(%rbx), %r14
	testq	%r14, %r14
	jne	.LBB60_16
	jmp	.LBB60_17
.LBB60_43:
.Ltmp758:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_42:
.Ltmp755:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_41:
.Ltmp752:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB60_40:
.Ltmp749:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end60:
	.size	_ZN8argparse8ArgumentD2Ev, .Lfunc_end60-_ZN8argparse8ArgumentD2Ev
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse8ArgumentD2Ev,"aG",@progbits,_ZN8argparse8ArgumentD2Ev,comdat
	.p2align	2, 0x0
GCC_except_table60:
.Lexception27:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase17-.Lttbaseref17
.Lttbaseref17:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end27-.Lcst_begin27
.Lcst_begin27:
	.uleb128 .Ltmp750-.Lfunc_begin27        # >> Call Site 1 <<
	.uleb128 .Ltmp751-.Ltmp750              #   Call between .Ltmp750 and .Ltmp751
	.uleb128 .Ltmp752-.Lfunc_begin27        #     jumps to .Ltmp752
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp753-.Lfunc_begin27        # >> Call Site 2 <<
	.uleb128 .Ltmp754-.Ltmp753              #   Call between .Ltmp753 and .Ltmp754
	.uleb128 .Ltmp755-.Lfunc_begin27        #     jumps to .Ltmp755
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp756-.Lfunc_begin27        # >> Call Site 3 <<
	.uleb128 .Ltmp757-.Ltmp756              #   Call between .Ltmp756 and .Ltmp757
	.uleb128 .Ltmp758-.Lfunc_begin27        #     jumps to .Ltmp758
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp747-.Lfunc_begin27        # >> Call Site 4 <<
	.uleb128 .Ltmp748-.Ltmp747              #   Call between .Ltmp747 and .Ltmp748
	.uleb128 .Ltmp749-.Lfunc_begin27        #     jumps to .Ltmp749
	.byte	1                               #   On action: 1
.Lcst_end27:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase17:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"axG",@progbits,_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.weak	_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	4, 0x90
	.type	_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin28:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception28
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$200, %rsp
	.cfi_def_cfa_offset 256
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	callq	_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	leaq	264(%rbx), %r15
	movq	280(%rbx), %r14
	cmpq	%r15, %r14
	je	.LBB61_2
	.p2align	4, 0x90
.LBB61_1:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	48(%r14), %rdi
	addq	$16, %rdi
	callq	_ZNK8argparse8Argument8validateEv
	movq	%r14, %rdi
	callq	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
	movq	%rax, %r14
	cmpq	%r15, %rax
	jne	.LBB61_1
.LBB61_2:                               # %._crit_edge
	movq	456(%rbx), %rax
	movq	464(%rbx), %rcx
	cmpq	%rcx, %rax
	je	.LBB61_113
# %bb.3:
	movl	$1, %edx
	jmp	.LBB61_5
	.p2align	4, 0x90
.LBB61_4:                               #   in Loop: Header=BB61_5 Depth=1
	addq	$40, %rax
	cmpq	%rcx, %rax
	je	.LBB61_113
.LBB61_5:                               # %.lr.ph199
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB61_9 Depth 2
	movq	16(%rax), %rdi
	movq	24(%rax), %r12
	xorl	%esi, %esi
	cmpq	%r12, %rdi
	je	.LBB61_19
# %bb.6:                                # %.lr.ph193.preheader
                                        #   in Loop: Header=BB61_5 Depth=1
	xorl	%ebx, %ebx
	jmp	.LBB61_9
	.p2align	4, 0x90
.LBB61_7:                               #   in Loop: Header=BB61_9 Depth=2
	testb	$16, %r8b
	cmovneq	%r15, %rbx
	movzbl	%sil, %esi
	cmovnel	%edx, %esi
.LBB61_8:                               #   in Loop: Header=BB61_9 Depth=2
	addq	$8, %rdi
	cmpq	%r12, %rdi
	je	.LBB61_19
.LBB61_9:                               # %.lr.ph193
                                        #   Parent Loop BB61_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	(%rdi), %r15
	movzbl	320(%r15), %r8d
	testb	$1, %sil
	je	.LBB61_7
# %bb.10:                               # %.critedge
                                        #   in Loop: Header=BB61_9 Depth=2
	testb	$16, %r8b
	je	.LBB61_8
	jmp	.LBB61_11
	.p2align	4, 0x90
.LBB61_19:                              # %._crit_edge194
                                        #   in Loop: Header=BB61_5 Depth=1
	testb	$1, %sil
	jne	.LBB61_4
# %bb.20:                               # %._crit_edge194
                                        #   in Loop: Header=BB61_5 Depth=1
	cmpb	$0, 8(%rax)
	je	.LBB61_4
# %bb.21:
	leaq	120(%rsp), %rcx
	movq	%rcx, 104(%rsp)
	movq	$0, 112(%rsp)
	movb	$0, 120(%rsp)
	movq	16(%rax), %r14
	movq	%r12, %r15
	subq	%r14, %r15
	jne	.LBB61_27
.LBB61_22:                              # %._crit_edge206
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp812:
	leaq	8(%rsp), %rdi
	leaq	104(%rsp), %rdx
	movl	$.L.str.49, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp813:
# %bb.23:
.Ltmp815:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	movl	$.L.str.50, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp816:
# %bb.24:
	movb	$1, %bpl
.Ltmp818:
	leaq	40(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp819:
# %bb.25:
	xorl	%ebp, %ebp
.Ltmp820:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp821:
	jmp	.LBB61_26
.LBB61_113:                             # %._crit_edge200
	addq	$200, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB61_11:
	.cfi_def_cfa_offset 256
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp759:
	leaq	136(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Ltmp760:
# %bb.12:
.Ltmp762:
	leaq	72(%rsp), %rdi
	leaq	136(%rsp), %rdx
	movl	$.L.str.44, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp763:
# %bb.13:
.Ltmp765:
	leaq	8(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movl	$.L.str.45, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp766:
# %bb.14:
.Ltmp768:
	leaq	168(%rsp), %rdi
	movq	%rbx, %rsi
	callq	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Ltmp769:
# %bb.15:
.Ltmp771:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rsi
	leaq	168(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
.Ltmp772:
# %bb.16:
.Ltmp774:
	leaq	104(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.46, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp775:
# %bb.17:
	movb	$1, %bpl
.Ltmp777:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp778:
# %bb.18:
	xorl	%ebp, %ebp
.Ltmp779:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp780:
.LBB61_26:
.LBB61_27:                              # %.lr.ph205
	sarq	$3, %r15
	leaq	24(%rsp), %rbp
	leaq	56(%rsp), %r13
	decq	%r15
	leaq	72(%rsp), %rbx
	jmp	.LBB61_29
	.p2align	4, 0x90
.LBB61_28:                              #   in Loop: Header=BB61_29 Depth=1
	addq	$8, %r14
	cmpq	%r12, %r14
	je	.LBB61_22
.LBB61_29:                              # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rsi
	subq	$1, %r15
	jae	.LBB61_34
# %bb.30:                               #   in Loop: Header=BB61_29 Depth=1
.Ltmp797:
	movq	%rbx, %rdi
	callq	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Ltmp798:
# %bb.31:                               #   in Loop: Header=BB61_29 Depth=1
.Ltmp800:
	movl	$.L.str.46, %ecx
	movl	$1, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp801:
# %bb.32:                               # %.noexc
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	%rbp, 8(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB61_38
# %bb.33:                               #   in Loop: Header=BB61_29 Depth=1
	movq	%rdx, 8(%rsp)
	movq	(%rcx), %rdx
	movq	%rdx, 24(%rsp)
	jmp	.LBB61_39
	.p2align	4, 0x90
.LBB61_34:                              #   in Loop: Header=BB61_29 Depth=1
.Ltmp782:
	movq	%rbx, %rdi
	callq	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Ltmp783:
# %bb.35:                               #   in Loop: Header=BB61_29 Depth=1
.Ltmp785:
	movl	$.L.str.46, %ecx
	movl	$1, %r8d
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp786:
# %bb.36:                               # %.noexc105
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	%rbp, 8(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB61_43
# %bb.37:                               #   in Loop: Header=BB61_29 Depth=1
	movq	%rdx, 8(%rsp)
	movq	(%rcx), %rdx
	movq	%rdx, 24(%rsp)
	jmp	.LBB61_44
.LBB61_38:                              #   in Loop: Header=BB61_29 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbp)
.LBB61_39:                              #   in Loop: Header=BB61_29 Depth=1
	movq	8(%rax), %rdx
	movq	%rdx, 16(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	16(%rsp), %rax
	shrq	%rax
	movabsq	$2305843009213693951, %rcx      # imm = 0x1FFFFFFFFFFFFFFF
	cmpq	%rcx, %rax
	je	.LBB61_58
# %bb.40:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
                                        #   in Loop: Header=BB61_29 Depth=1
.Ltmp803:
	movl	$.L.str.47, %esi
	movl	$2, %edx
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp804:
# %bb.41:                               # %.noexc97
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	%r13, 40(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB61_48
# %bb.42:                               #   in Loop: Header=BB61_29 Depth=1
	movq	%rdx, 40(%rsp)
	movq	(%rcx), %rdx
	movq	%rdx, 56(%rsp)
	jmp	.LBB61_49
.LBB61_43:                              #   in Loop: Header=BB61_29 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rbp)
.LBB61_44:                              #   in Loop: Header=BB61_29 Depth=1
	movq	8(%rax), %rdx
	movq	%rdx, 16(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	16(%rsp), %rax
	movabsq	$-4611686018427387899, %rcx     # imm = 0xC000000000000005
	addq	%rcx, %rax
	cmpq	$4, %rax
	jbe	.LBB61_60
# %bb.45:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i107
                                        #   in Loop: Header=BB61_29 Depth=1
.Ltmp788:
	movl	$.L.str.48, %esi
	movl	$5, %edx
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp789:
# %bb.46:                               # %.noexc109
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	%r13, 40(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB61_50
# %bb.47:                               #   in Loop: Header=BB61_29 Depth=1
	movq	%rdx, 40(%rsp)
	movq	(%rcx), %rdx
	movq	%rdx, 56(%rsp)
	jmp	.LBB61_51
.LBB61_48:                              #   in Loop: Header=BB61_29 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%r13)
.LBB61_49:                              #   in Loop: Header=BB61_29 Depth=1
	movq	8(%rax), %rdx
	movq	%rdx, 48(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	40(%rsp), %rsi
	movq	48(%rsp), %rdx
.Ltmp806:
	leaq	104(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp807:
	jmp	.LBB61_52
.LBB61_50:                              #   in Loop: Header=BB61_29 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%r13)
.LBB61_51:                              #   in Loop: Header=BB61_29 Depth=1
	movq	8(%rax), %rdx
	movq	%rdx, 48(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	40(%rsp), %rsi
	movq	48(%rsp), %rdx
.Ltmp791:
	leaq	104(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp792:
.LBB61_52:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_.exit
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB61_54
# %bb.53:                               #   in Loop: Header=BB61_29 Depth=1
	callq	_ZdlPv
.LBB61_54:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit99
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_56
# %bb.55:                               #   in Loop: Header=BB61_29 Depth=1
	callq	_ZdlPv
.LBB61_56:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit100
                                        #   in Loop: Header=BB61_29 Depth=1
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_28
# %bb.57:                               #   in Loop: Header=BB61_29 Depth=1
	callq	_ZdlPv
	jmp	.LBB61_28
.LBB61_58:
.Ltmp809:
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp810:
# %bb.59:                               # %.noexc96
.LBB61_60:
.Ltmp794:
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp795:
# %bb.61:                               # %.noexc108
.LBB61_62:
.Ltmp793:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB61_63
.LBB61_65:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_64
	jmp	.LBB61_72
.LBB61_66:
.Ltmp808:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB61_65
.LBB61_63:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB61_72
.LBB61_64:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit117
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_76
	jmp	.LBB61_99
.LBB61_69:                              # %.loopexit
.Ltmp790:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_64
	jmp	.LBB61_72
.LBB61_70:                              # %.loopexit167
.Ltmp805:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_64
	jmp	.LBB61_72
.LBB61_71:                              # %.loopexit.split-lp
.Ltmp796:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_64
	jmp	.LBB61_72
.LBB61_73:                              # %.loopexit.split-lp168
.Ltmp811:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB61_64
.LBB61_72:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_76
	jmp	.LBB61_99
.LBB61_74:
.Ltmp802:
	jmp	.LBB61_75
.LBB61_77:
.Ltmp787:
.LBB61_75:
	movq	%rax, %rbx
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_99
.LBB61_76:
	callq	_ZdlPv
	jmp	.LBB61_99
.LBB61_78:
.Ltmp784:
	movq	%rax, %rbx
	jmp	.LBB61_99
.LBB61_79:
.Ltmp799:
	movq	%rax, %rbx
	jmp	.LBB61_99
.LBB61_80:
.Ltmp822:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_83
# %bb.81:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit119
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_84
.LBB61_82:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit120
	testb	%bpl, %bpl
	jne	.LBB61_98
	jmp	.LBB61_99
.LBB61_83:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_82
.LBB61_84:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB61_98
	jmp	.LBB61_99
.LBB61_85:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit119.thread
.Ltmp817:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_98
# %bb.86:                               # %.thread157
	callq	_ZdlPv
	jmp	.LBB61_98
.LBB61_87:
.Ltmp781:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_94
# %bb.88:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_96
.LBB61_89:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit91
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_102
.LBB61_90:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit92
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_104
.LBB61_91:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit93
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_106
.LBB61_92:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit94
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB61_107
.LBB61_93:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95
	testb	%bpl, %bpl
	je	.LBB61_108
	jmp	.LBB61_112
.LBB61_94:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_89
	jmp	.LBB61_96
.LBB61_95:
.Ltmp776:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_89
.LBB61_96:
	callq	_ZdlPv
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_90
	jmp	.LBB61_102
.LBB61_97:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit120.thread
.Ltmp814:
	movq	%rax, %rbx
.LBB61_98:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB61_99:
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_108
# %bb.100:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB61_101:
.Ltmp773:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_90
.LBB61_102:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_91
	jmp	.LBB61_104
.LBB61_103:
.Ltmp770:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_91
.LBB61_104:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_92
	jmp	.LBB61_106
.LBB61_105:
.Ltmp767:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_92
.LBB61_106:
	callq	_ZdlPv
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_93
.LBB61_107:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB61_112
.LBB61_108:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB61_109:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit94.thread
.Ltmp764:
	movq	%rax, %rbx
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB61_112
# %bb.110:                              # %.thread
	callq	_ZdlPv
	jmp	.LBB61_112
.LBB61_111:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95.thread
.Ltmp761:
	movq	%rax, %rbx
.LBB61_112:
	movq	%r14, %rdi
	callq	__cxa_free_exception
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end61:
	.size	_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end61-_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"aG",@progbits,_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.p2align	2, 0x0
GCC_except_table61:
.Lexception28:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end28-.Lcst_begin28
.Lcst_begin28:
	.uleb128 .Lfunc_begin28-.Lfunc_begin28  # >> Call Site 1 <<
	.uleb128 .Ltmp812-.Lfunc_begin28        #   Call between .Lfunc_begin28 and .Ltmp812
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp812-.Lfunc_begin28        # >> Call Site 2 <<
	.uleb128 .Ltmp813-.Ltmp812              #   Call between .Ltmp812 and .Ltmp813
	.uleb128 .Ltmp814-.Lfunc_begin28        #     jumps to .Ltmp814
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp815-.Lfunc_begin28        # >> Call Site 3 <<
	.uleb128 .Ltmp816-.Ltmp815              #   Call between .Ltmp815 and .Ltmp816
	.uleb128 .Ltmp817-.Lfunc_begin28        #     jumps to .Ltmp817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp818-.Lfunc_begin28        # >> Call Site 4 <<
	.uleb128 .Ltmp821-.Ltmp818              #   Call between .Ltmp818 and .Ltmp821
	.uleb128 .Ltmp822-.Lfunc_begin28        #     jumps to .Ltmp822
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp821-.Lfunc_begin28        # >> Call Site 5 <<
	.uleb128 .Ltmp759-.Ltmp821              #   Call between .Ltmp821 and .Ltmp759
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp759-.Lfunc_begin28        # >> Call Site 6 <<
	.uleb128 .Ltmp760-.Ltmp759              #   Call between .Ltmp759 and .Ltmp760
	.uleb128 .Ltmp761-.Lfunc_begin28        #     jumps to .Ltmp761
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp762-.Lfunc_begin28        # >> Call Site 7 <<
	.uleb128 .Ltmp763-.Ltmp762              #   Call between .Ltmp762 and .Ltmp763
	.uleb128 .Ltmp764-.Lfunc_begin28        #     jumps to .Ltmp764
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp765-.Lfunc_begin28        # >> Call Site 8 <<
	.uleb128 .Ltmp766-.Ltmp765              #   Call between .Ltmp765 and .Ltmp766
	.uleb128 .Ltmp767-.Lfunc_begin28        #     jumps to .Ltmp767
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp768-.Lfunc_begin28        # >> Call Site 9 <<
	.uleb128 .Ltmp769-.Ltmp768              #   Call between .Ltmp768 and .Ltmp769
	.uleb128 .Ltmp770-.Lfunc_begin28        #     jumps to .Ltmp770
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp771-.Lfunc_begin28        # >> Call Site 10 <<
	.uleb128 .Ltmp772-.Ltmp771              #   Call between .Ltmp771 and .Ltmp772
	.uleb128 .Ltmp773-.Lfunc_begin28        #     jumps to .Ltmp773
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp774-.Lfunc_begin28        # >> Call Site 11 <<
	.uleb128 .Ltmp775-.Ltmp774              #   Call between .Ltmp774 and .Ltmp775
	.uleb128 .Ltmp776-.Lfunc_begin28        #     jumps to .Ltmp776
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp777-.Lfunc_begin28        # >> Call Site 12 <<
	.uleb128 .Ltmp780-.Ltmp777              #   Call between .Ltmp777 and .Ltmp780
	.uleb128 .Ltmp781-.Lfunc_begin28        #     jumps to .Ltmp781
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp797-.Lfunc_begin28        # >> Call Site 13 <<
	.uleb128 .Ltmp798-.Ltmp797              #   Call between .Ltmp797 and .Ltmp798
	.uleb128 .Ltmp799-.Lfunc_begin28        #     jumps to .Ltmp799
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp800-.Lfunc_begin28        # >> Call Site 14 <<
	.uleb128 .Ltmp801-.Ltmp800              #   Call between .Ltmp800 and .Ltmp801
	.uleb128 .Ltmp802-.Lfunc_begin28        #     jumps to .Ltmp802
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp782-.Lfunc_begin28        # >> Call Site 15 <<
	.uleb128 .Ltmp783-.Ltmp782              #   Call between .Ltmp782 and .Ltmp783
	.uleb128 .Ltmp784-.Lfunc_begin28        #     jumps to .Ltmp784
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp785-.Lfunc_begin28        # >> Call Site 16 <<
	.uleb128 .Ltmp786-.Ltmp785              #   Call between .Ltmp785 and .Ltmp786
	.uleb128 .Ltmp787-.Lfunc_begin28        #     jumps to .Ltmp787
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp803-.Lfunc_begin28        # >> Call Site 17 <<
	.uleb128 .Ltmp804-.Ltmp803              #   Call between .Ltmp803 and .Ltmp804
	.uleb128 .Ltmp805-.Lfunc_begin28        #     jumps to .Ltmp805
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp788-.Lfunc_begin28        # >> Call Site 18 <<
	.uleb128 .Ltmp789-.Ltmp788              #   Call between .Ltmp788 and .Ltmp789
	.uleb128 .Ltmp790-.Lfunc_begin28        #     jumps to .Ltmp790
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp806-.Lfunc_begin28        # >> Call Site 19 <<
	.uleb128 .Ltmp807-.Ltmp806              #   Call between .Ltmp806 and .Ltmp807
	.uleb128 .Ltmp808-.Lfunc_begin28        #     jumps to .Ltmp808
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp791-.Lfunc_begin28        # >> Call Site 20 <<
	.uleb128 .Ltmp792-.Ltmp791              #   Call between .Ltmp791 and .Ltmp792
	.uleb128 .Ltmp793-.Lfunc_begin28        #     jumps to .Ltmp793
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp809-.Lfunc_begin28        # >> Call Site 21 <<
	.uleb128 .Ltmp810-.Ltmp809              #   Call between .Ltmp809 and .Ltmp810
	.uleb128 .Ltmp811-.Lfunc_begin28        #     jumps to .Ltmp811
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp794-.Lfunc_begin28        # >> Call Site 22 <<
	.uleb128 .Ltmp795-.Ltmp794              #   Call between .Ltmp794 and .Ltmp795
	.uleb128 .Ltmp796-.Lfunc_begin28        #     jumps to .Ltmp796
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp795-.Lfunc_begin28        # >> Call Site 23 <<
	.uleb128 .Lfunc_end61-.Ltmp795          #   Call between .Ltmp795 and .Lfunc_end61
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"axG",@progbits,_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.weak	_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	4, 0x90
	.type	_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin29:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception29
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 336
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rdx
	movq	%rdi, %rbp
	leaq	128(%rsp), %rdi
	movq	%rbp, %rsi
	callq	_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	cmpq	$0, 8(%rbp)
	jne	.LBB62_3
# %bb.1:
	movq	128(%rsp), %rsi
	cmpq	136(%rsp), %rsi
	je	.LBB62_3
# %bb.2:
.Ltmp823:
	movq	%rbp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp824:
.LBB62_3:
	movq	128(%rsp), %rax
	movq	136(%rsp), %r14
	addq	$32, %rax
	cmpq	%r14, %rax
	je	.LBB62_16
# %bb.4:                                # %.lr.ph350
	leaq	208(%rbp), %rcx
	movq	%rcx, 120(%rsp)                 # 8-byte Spill
	movq	208(%rbp), %rbx
	leaq	136(%rbp), %rcx
	movq	%rcx, 112(%rsp)                 # 8-byte Spill
	leaq	264(%rbp), %rcx
	movq	%rcx, 64(%rsp)                  # 8-byte Spill
	movl	$2147483647, %r13d              # imm = 0x7FFFFFFF
	movq	%rbp, 40(%rsp)                  # 8-byte Spill
	movq	%r14, 48(%rsp)                  # 8-byte Spill
	.p2align	4, 0x90
.LBB62_5:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB62_21 Depth 2
                                        #     Child Loop BB62_36 Depth 2
                                        #       Child Loop BB62_40 Depth 3
	movq	%rax, (%rsp)                    # 8-byte Spill
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB62_12
# %bb.6:                                #   in Loop: Header=BB62_5 Depth=1
	movq	144(%rbp), %rdx
	testq	%rdx, %rdx
	je	.LBB62_12
# %bb.7:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %r15
	movq	112(%rsp), %rax                 # 8-byte Reload
	movq	(%rax), %r12
	movsbl	(%r15), %esi
	movq	%r12, %rdi
	callq	memchr
	testq	%rax, %rax
	je	.LBB62_12
# %bb.8:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	subq	%r12, %rax
	cmpq	$-1, %rax
	je	.LBB62_12
# %bb.9:                                #   in Loop: Header=BB62_5 Depth=1
	decq	%r14
	je	.LBB62_12
# %bb.10:                               #   in Loop: Header=BB62_5 Depth=1
	incq	%r15
.Ltmp826:
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp827:
# %bb.11:                               # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit
                                        #   in Loop: Header=BB62_5 Depth=1
	testb	%al, %al
	je	.LBB62_17
	.p2align	4, 0x90
.LBB62_12:                              # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
                                        #   in Loop: Header=BB62_5 Depth=1
	cmpq	120(%rsp), %rbx                 # 8-byte Folded Reload
	je	.LBB62_51
# %bb.13:                               #   in Loop: Header=BB62_5 Depth=1
	movq	%rbx, %rdi
	movq	(%rbx), %rbx
	addq	$16, %rdi
.Ltmp851:
	movq	(%rsp), %rsi                    # 8-byte Reload
	movq	48(%rsp), %r14                  # 8-byte Reload
	movq	%r14, %rdx
	xorl	%ecx, %ecx
	xorl	%r8d, %r8d
	callq	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
.Ltmp852:
# %bb.14:                               #   in Loop: Header=BB62_5 Depth=1
	movq	%rax, %r15
.LBB62_15:                              # %.loopexit
                                        #   in Loop: Header=BB62_5 Depth=1
	movq	%r15, %rax
	cmpq	%r14, %r15
	jne	.LBB62_5
	jmp	.LBB62_16
.LBB62_17:                              #   in Loop: Header=BB62_5 Depth=1
	movq	%rbx, 104(%rsp)                 # 8-byte Spill
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %r15
	movq	8(%rax), %r14
	movq	272(%rbp), %rbp
	testq	%rbp, %rbp
	je	.LBB62_30
# %bb.18:                               # %.lr.ph.i.i.i147.preheader
                                        #   in Loop: Header=BB62_5 Depth=1
	movq	64(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB62_21
	.p2align	4, 0x90
.LBB62_19:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i158
                                        #   in Loop: Header=BB62_21 Depth=2
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rbx
	movl	%ebx, %eax
.LBB62_20:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i164
                                        #   in Loop: Header=BB62_21 Depth=2
	testl	%eax, %eax
	cmovnsq	%rbp, %r12
	shrl	$31, %eax
	movq	16(%rbp,%rax,8), %rbp
	testq	%rbp, %rbp
	je	.LBB62_23
.LBB62_21:                              # %.lr.ph.i.i.i147
                                        #   Parent Loop BB62_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	32(%rbp), %rdx
	movq	%rdx, %rbx
	subq	%r14, %rbx
	cmovaeq	%r14, %rdx
	testq	%rdx, %rdx
	je	.LBB62_19
# %bb.22:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i154
                                        #   in Loop: Header=BB62_21 Depth=2
	movq	40(%rbp), %rdi
	movq	%r15, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB62_20
	jmp	.LBB62_19
.LBB62_23:                              # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS5_.exit.i.i
                                        #   in Loop: Header=BB62_5 Depth=1
	cmpq	64(%rsp), %r12                  # 8-byte Folded Reload
	je	.LBB62_30
# %bb.24:                               #   in Loop: Header=BB62_5 Depth=1
	movq	32(%r12), %rbp
	movq	%r14, %rbx
	subq	%rbp, %rbx
	movq	%rbp, %rdx
	cmovbq	%r14, %rdx
	testq	%rdx, %rdx
	je	.LBB62_26
# %bb.25:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i169
                                        #   in Loop: Header=BB62_5 Depth=1
	movq	40(%r12), %rsi
	movq	%r15, %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB62_27
.LBB62_26:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i173
                                        #   in Loop: Header=BB62_5 Depth=1
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rbx
	movl	%ebx, %eax
.LBB62_27:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit
                                        #   in Loop: Header=BB62_5 Depth=1
	testl	%eax, %eax
	js	.LBB62_30
# %bb.28:                               #   in Loop: Header=BB62_5 Depth=1
	movq	40(%r12), %r8
	movq	48(%r12), %rdi
	addq	$16, %rdi
	movq	(%rsp), %rsi                    # 8-byte Reload
	addq	$32, %rsi
.Ltmp829:
	movq	48(%rsp), %r14                  # 8-byte Reload
	movq	%r14, %rdx
	movq	%rbp, %rcx
	callq	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
.Ltmp830:
# %bb.29:                               #   in Loop: Header=BB62_5 Depth=1
	movq	%rax, %r15
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	40(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB62_15
.LBB62_30:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit.thread
                                        #   in Loop: Header=BB62_5 Depth=1
	cmpq	$2, %r14
	movq	(%rsp), %rbx                    # 8-byte Reload
	jb	.LBB62_88
# %bb.31:                               #   in Loop: Header=BB62_5 Depth=1
	movsbl	(%r15), %esi
	movq	112(%rsp), %rdi                 # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	je	.LBB62_88
# %bb.32:                               #   in Loop: Header=BB62_5 Depth=1
	movq	(%rbx), %rax
	movsbl	1(%rax), %esi
	movq	112(%rsp), %rdi                 # 8-byte Reload
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	jne	.LBB62_88
# %bb.33:                               #   in Loop: Header=BB62_5 Depth=1
	leaq	32(%rbx), %r15
	cmpq	$2, 8(%rbx)
	movq	40(%rsp), %rbp                  # 8-byte Reload
	jb	.LBB62_50
# %bb.34:                               # %.lr.ph.preheader
                                        #   in Loop: Header=BB62_5 Depth=1
	movl	$1, %r12d
	jmp	.LBB62_36
	.p2align	4, 0x90
.LBB62_35:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit217
                                        #   in Loop: Header=BB62_36 Depth=2
	incq	%r12
	cmpq	8(%rbx), %r12
	movq	40(%rsp), %rbp                  # 8-byte Reload
	jae	.LBB62_50
.LBB62_36:                              # %.lr.ph
                                        #   Parent Loop BB62_5 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB62_40 Depth 3
	movq	(%rbx), %rax
	movzbl	(%rax,%r12), %eax
	leaq	24(%rsp), %rcx
	movq	%rcx, 8(%rsp)
	movb	$45, 24(%rsp)
	movb	%al, 25(%rsp)
	movq	$2, 16(%rsp)
	movb	$0, 26(%rsp)
	movq	272(%rbp), %r14
	testq	%r14, %r14
	je	.LBB62_85
# %bb.37:                               # %.lr.ph.i.i.i184.preheader
                                        #   in Loop: Header=BB62_36 Depth=2
	movq	64(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB62_40
	.p2align	4, 0x90
.LBB62_38:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i195
                                        #   in Loop: Header=BB62_40 Depth=3
	addq	$-2, %rbx
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rbx
	movl	%ebx, %eax
.LBB62_39:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i201
                                        #   in Loop: Header=BB62_40 Depth=3
	testl	%eax, %eax
	cmovnsq	%r14, %rbp
	shrl	$31, %eax
	movq	16(%r14,%rax,8), %r14
	testq	%r14, %r14
	je	.LBB62_42
.LBB62_40:                              # %.lr.ph.i.i.i184
                                        #   Parent Loop BB62_5 Depth=1
                                        #     Parent Loop BB62_36 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	movq	32(%r14), %rbx
	cmpq	$2, %rbx
	movl	$2, %edx
	cmovbq	%rbx, %rdx
	testq	%rdx, %rdx
	je	.LBB62_38
# %bb.41:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i191
                                        #   in Loop: Header=BB62_40 Depth=3
	movq	40(%r14), %rdi
	leaq	24(%rsp), %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB62_39
	jmp	.LBB62_38
	.p2align	4, 0x90
.LBB62_42:                              # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPSt13_Rb_tree_nodeISA_EPSt18_Rb_tree_node_baseRS5_.exit.i.i202
                                        #   in Loop: Header=BB62_36 Depth=2
	cmpq	64(%rsp), %rbp                  # 8-byte Folded Reload
	je	.LBB62_85
# %bb.43:                               #   in Loop: Header=BB62_36 Depth=2
	movq	32(%rbp), %r14
	cmpq	$2, %r14
	movl	$2, %edx
	cmovbq	%r14, %rdx
	testq	%rdx, %rdx
	je	.LBB62_45
# %bb.44:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i207
                                        #   in Loop: Header=BB62_36 Depth=2
	movq	40(%rbp), %rsi
	leaq	24(%rsp), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB62_46
.LBB62_45:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i211
                                        #   in Loop: Header=BB62_36 Depth=2
	movl	$2, %eax
	subq	%r14, %rax
	cmpq	$-2147483647, %rax              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovlq	%rcx, %rax
	cmpq	$2147483647, %rax               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rax
.LBB62_46:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit216
                                        #   in Loop: Header=BB62_36 Depth=2
	testl	%eax, %eax
	js	.LBB62_85
# %bb.47:                               #   in Loop: Header=BB62_36 Depth=2
	movq	40(%rbp), %r8
	movq	48(%rbp), %rdi
	addq	$16, %rdi
.Ltmp832:
	movq	%r15, %rsi
	movq	48(%rsp), %rdx                  # 8-byte Reload
	movq	%r14, %rcx
	callq	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
.Ltmp833:
# %bb.48:                               #   in Loop: Header=BB62_36 Depth=2
	movq	%rax, %r15
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	movq	(%rsp), %rbx                    # 8-byte Reload
	je	.LBB62_35
# %bb.49:                               #   in Loop: Header=BB62_36 Depth=2
	callq	_ZdlPv
	jmp	.LBB62_35
.LBB62_50:                              #   in Loop: Header=BB62_5 Depth=1
	movq	104(%rsp), %rbx                 # 8-byte Reload
	movq	48(%rsp), %r14                  # 8-byte Reload
	jmp	.LBB62_15
.LBB62_16:                              # %.critedge
	movb	$1, 200(%rbp)
	jmp	.LBB62_73
.LBB62_51:
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %r15
	movq	8(%rax), %rbx
	movq	%rbx, 200(%rsp)
	movq	%r15, 208(%rsp)
	movq	376(%rbp), %r14
	testq	%r14, %r14
	je	.LBB62_91
# %bb.52:                               # %.lr.ph.i.i.i.preheader
	leaq	368(%rbp), %r12
	movl	$2147483647, %r13d              # imm = 0x7FFFFFFF
	movq	%r12, 64(%rsp)                  # 8-byte Spill
	jmp	.LBB62_55
	.p2align	4, 0x90
.LBB62_53:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB62_55 Depth=1
	cmpq	$-2147483647, %rbp              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbp
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	cmovgeq	%r13, %rbp
	movl	%ebp, %eax
.LBB62_54:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i
                                        #   in Loop: Header=BB62_55 Depth=1
	testl	%eax, %eax
	cmovnsq	%r14, %r12
	shrl	$31, %eax
	movq	16(%r14,%rax,8), %r14
	testq	%r14, %r14
	je	.LBB62_57
.LBB62_55:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	32(%r14), %rdx
	movq	%rdx, %rbp
	subq	%rbx, %rbp
	cmovaeq	%rbx, %rdx
	testq	%rdx, %rdx
	je	.LBB62_53
# %bb.56:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB62_55 Depth=1
	movq	40(%r14), %rdi
	movq	%r15, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB62_54
	jmp	.LBB62_53
.LBB62_57:                              # %_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEEESt10_Select1stISC_ESt4lessIS3_ESaISC_EE14_M_lower_boundEPSt13_Rb_tree_nodeISC_EPSt18_Rb_tree_node_baseRS5_.exit.i.i
	cmpq	64(%rsp), %r12                  # 8-byte Folded Reload
	movq	40(%rsp), %r13                  # 8-byte Reload
	je	.LBB62_91
# %bb.58:
	movq	32(%r12), %rdx
	movq	%rbx, %r14
	subq	%rdx, %r14
	cmovbq	%rbx, %rdx
	testq	%rdx, %rdx
	je	.LBB62_60
# %bb.59:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	movq	40(%r12), %rsi
	movq	%r15, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB62_61
.LBB62_60:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r14, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB62_61:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEE4findERSD_.exit
	testl	%eax, %eax
	js	.LBB62_91
# %bb.62:
	movq	48(%rsp), %rdx                  # 8-byte Reload
	movq	%rdx, %r14
	movq	(%rsp), %rcx                    # 8-byte Reload
	subq	%rcx, %r14
	movabsq	$9223372036854775777, %rax      # imm = 0x7FFFFFFFFFFFFFE1
	cmpq	%rax, %r14
	jae	.LBB62_99
# %bb.63:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_S_check_init_lenEmRKS6_.exit.i.i
	cmpq	%rcx, %rdx
	je	.LBB62_66
# %bb.64:                               # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i.i.i
.Ltmp854:
	movq	%r14, %rdi
	callq	_Znwm
.Ltmp855:
# %bb.65:
	movq	%rax, %rbx
	jmp	.LBB62_67
.LBB62_66:
	xorl	%ebx, %ebx
.LBB62_67:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit.i.i
	movq	%rbx, 8(%rsp)
	addq	%rbx, %r14
	movq	%r14, 24(%rsp)
.Ltmp856:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	48(%rsp), %rsi                  # 8-byte Reload
	movq	%rbx, %rdx
	callq	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_
.Ltmp857:
# %bb.68:
	movq	%rax, 16(%rsp)
	movb	$1, 200(%r13)
	addq	$408, %r13                      # imm = 0x198
.Ltmp859:
	leaq	200(%rsp), %rsi
	movq	%r13, %rdi
	callq	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_
.Ltmp860:
# %bb.69:
	movb	$1, (%rax)
	movq	48(%r12), %rax
	movq	16(%rax), %rdi
.Ltmp861:
	leaq	8(%rsp), %rsi
	callq	_ZN8argparse14ArgumentParser10parse_argsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Ltmp862:
# %bb.70:
	movq	8(%rsp), %rbx
	movq	16(%rsp), %r14
	cmpq	%r14, %rbx
	jne	.LBB62_81
# %bb.71:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i
	testq	%rbx, %rbx
	je	.LBB62_73
.LBB62_72:
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB62_73:
	movq	128(%rsp), %rbx
	movq	136(%rsp), %r14
	cmpq	%r14, %rbx
	jne	.LBB62_78
# %bb.74:                               # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exit.i229
	testq	%rbx, %rbx
	je	.LBB62_76
.LBB62_75:
	movq	%rbx, %rdi
	callq	_ZdlPv
.LBB62_76:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit231
	addq	$280, %rsp                      # imm = 0x118
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB62_77:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i225
                                        #   in Loop: Header=BB62_78 Depth=1
	.cfi_def_cfa_offset 336
	addq	$16, %rbx
	cmpq	%r14, %rbx
	je	.LBB62_83
.LBB62_78:                              # %.lr.ph.i.i.i.i223
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB62_77
# %bb.79:                               #   in Loop: Header=BB62_78 Depth=1
	callq	_ZdlPv
	jmp	.LBB62_77
	.p2align	4, 0x90
.LBB62_80:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB62_81 Depth=1
	addq	$16, %rbx
	cmpq	%r14, %rbx
	je	.LBB62_84
.LBB62_81:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB62_80
# %bb.82:                               #   in Loop: Header=BB62_81 Depth=1
	callq	_ZdlPv
	jmp	.LBB62_80
.LBB62_83:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i227
	movq	128(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB62_75
	jmp	.LBB62_76
.LBB62_84:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E.exitthread-pre-split.i
	movq	8(%rsp), %rbx
	testq	%rbx, %rbx
	jne	.LBB62_72
	jmp	.LBB62_73
.LBB62_85:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit216.thread
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r15
.Ltmp835:
	leaq	72(%rsp), %rdi
	movl	$.L.str.56, %esi
	movq	(%rsp), %rdx                    # 8-byte Reload
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp836:
# %bb.86:
	movb	$1, %bl
.Ltmp838:
	leaq	72(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp839:
# %bb.87:
	xorl	%ebx, %ebx
.Ltmp840:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r15, %rdi
	callq	__cxa_throw
.Ltmp841:
	jmp	.LBB62_117
.LBB62_88:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r15
.Ltmp843:
	leaq	8(%rsp), %rdi
	movl	$.L.str.56, %esi
	movq	%rbx, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp844:
# %bb.89:
	movb	$1, %bl
.Ltmp846:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp847:
# %bb.90:
	xorl	%ebx, %ebx
.Ltmp848:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r15, %rdi
	callq	__cxa_throw
.Ltmp849:
	jmp	.LBB62_117
.LBB62_91:                              # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorISt17reference_wrapperIN8argparse14ArgumentParserEEESt4lessIS3_ESaISt4pairIKS3_S9_EEE4findERSD_.exit.thread
	movq	120(%rsp), %rax                 # 8-byte Reload
	cmpq	%rax, (%rax)
	jne	.LBB62_95
# %bb.92:
	movq	40(%rsp), %rax                  # 8-byte Reload
	cmpq	$0, 400(%rax)
	jne	.LBB62_101
# %bb.93:
	movq	40(%rsp), %rcx                  # 8-byte Reload
	movq	232(%rcx), %r14
	addq	$232, %rcx
	cmpq	%rcx, %r14
	jne	.LBB62_109
# %bb.94:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp915:
	movl	$.L.str.54, %esi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc
.Ltmp916:
	jmp	.LBB62_119
.LBB62_95:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r15
.Ltmp867:
	leaq	72(%rsp), %rdi
	movl	$.L.str.55, %esi
	movq	(%rsp), %rdx                    # 8-byte Reload
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp868:
# %bb.96:
.Ltmp870:
	leaq	8(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movl	$.L.str.46, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp871:
# %bb.97:
	movb	$1, %bl
.Ltmp873:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp874:
# %bb.98:
	xorl	%ebx, %ebx
.Ltmp875:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r15, %rdi
	callq	__cxa_throw
.Ltmp876:
	jmp	.LBB62_117
.LBB62_99:
.Ltmp864:
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp865:
# %bb.100:                              # %.noexc.i
.LBB62_101:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r12
.Ltmp878:
	leaq	168(%rsp), %rdi
	movl	$.L.str.51, %esi
	movq	(%rsp), %rdx                    # 8-byte Reload
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp879:
# %bb.102:
.Ltmp881:
	leaq	248(%rsp), %rdi
	leaq	168(%rsp), %rsi
	movl	$.L.str.52, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp882:
# %bb.103:
	movq	40(%rsp), %rdi                  # 8-byte Reload
	addq	$360, %rdi                      # imm = 0x168
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rdx
	movq	8(%rax), %rsi
.Ltmp884:
	callq	_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_
.Ltmp885:
# %bb.104:
	movq	%rax, 152(%rsp)
	movq	%rdx, 160(%rsp)
.Ltmp887:
	leaq	216(%rsp), %rdi
	leaq	152(%rsp), %rsi
	leaq	63(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp888:
# %bb.105:
.Ltmp890:
	leaq	72(%rsp), %rdi
	leaq	248(%rsp), %rsi
	leaq	216(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
.Ltmp891:
# %bb.106:
.Ltmp893:
	leaq	8(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movl	$.L.str.46, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp894:
# %bb.107:
	movb	$1, %bl
.Ltmp896:
	leaq	8(%rsp), %rsi
	movq	%r12, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp897:
# %bb.108:
	xorl	%ebx, %ebx
.Ltmp898:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r12, %rdi
	callq	__cxa_throw
.Ltmp899:
	jmp	.LBB62_117
.LBB62_109:
	movq	%rcx, %rax
	jmp	.LBB62_111
.LBB62_110:                             #   in Loop: Header=BB62_111 Depth=1
	movq	(%r14), %r14
	cmpq	%rax, %r14
	je	.LBB62_118
.LBB62_111:                             # %.lr.ph353
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$0, 208(%r14)
	jne	.LBB62_110
# %bb.112:                              #   in Loop: Header=BB62_111 Depth=1
	testb	$16, 336(%r14)
	jne	.LBB62_110
# %bb.113:
	addq	$16, %r14
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r15
.Ltmp904:
	leaq	72(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Ltmp905:
# %bb.114:
.Ltmp907:
	leaq	8(%rsp), %rdi
	leaq	72(%rsp), %rdx
	movl	$.L.str.53, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp908:
# %bb.115:
	movb	$1, %bl
.Ltmp910:
	leaq	8(%rsp), %rsi
	movq	%r15, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp911:
# %bb.116:
	xorl	%ebx, %ebx
.Ltmp912:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r15, %rdi
	callq	__cxa_throw
.Ltmp913:
.LBB62_117:
.LBB62_118:                             # %._crit_edge
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp901:
	movl	$.L.str.54, %esi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc
.Ltmp902:
.LBB62_119:                             # %.invoke
.Ltmp918:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp919:
# %bb.120:                              # %.cont
.LBB62_121:
.Ltmp900:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_127
# %bb.122:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_129
.LBB62_123:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133
	movq	216(%rsp), %rdi
	leaq	232(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_131
.LBB62_124:
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_138
.LBB62_125:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit135
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_139
.LBB62_126:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit136
	testb	%bl, %bl
	jne	.LBB62_143
	jmp	.LBB62_178
.LBB62_127:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_123
	jmp	.LBB62_129
.LBB62_128:
.Ltmp895:
	movq	%rax, %r14
	movb	$1, %bl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_123
.LBB62_129:
	callq	_ZdlPv
	movq	216(%rsp), %rdi
	leaq	232(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_124
	jmp	.LBB62_131
.LBB62_130:
.Ltmp892:
	movq	%rax, %r14
	movb	$1, %bl
	movq	216(%rsp), %rdi
	leaq	232(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_124
.LBB62_131:
	callq	_ZdlPv
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_125
	jmp	.LBB62_138
.LBB62_132:
.Ltmp914:
	jmp	.LBB62_148
.LBB62_133:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit137.thread
.Ltmp909:
	jmp	.LBB62_155
.LBB62_134:
.Ltmp889:
	jmp	.LBB62_137
.LBB62_135:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138.thread
.Ltmp906:
	jmp	.LBB62_159
.LBB62_136:
.Ltmp886:
.LBB62_137:
	movq	%rax, %r14
	movb	$1, %bl
	movq	248(%rsp), %rdi
	leaq	264(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_125
.LBB62_138:
	callq	_ZdlPv
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_126
.LBB62_139:
	callq	_ZdlPv
	testb	%bl, %bl
	jne	.LBB62_143
	jmp	.LBB62_178
.LBB62_140:
.Ltmp903:
	jmp	.LBB62_145
.LBB62_141:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit135.thread
.Ltmp883:
	movq	%rax, %r14
	movq	168(%rsp), %rdi
	leaq	184(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_143
# %bb.142:                              # %.thread290
	callq	_ZdlPv
.LBB62_143:
	movq	%r12, %rdi
	callq	__cxa_free_exception
	jmp	.LBB62_178
.LBB62_144:
.Ltmp917:
.LBB62_145:
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	jmp	.LBB62_178
.LBB62_146:
.Ltmp920:
	jmp	.LBB62_172
.LBB62_147:
.Ltmp877:
.LBB62_148:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_151
# %bb.149:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit137
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_152
	jmp	.LBB62_150
.LBB62_151:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_150
.LBB62_152:
	callq	_ZdlPv
	testb	%bl, %bl
	jne	.LBB62_160
	jmp	.LBB62_178
.LBB62_153:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit136.thread
.Ltmp880:
	movq	%rax, %r14
	movq	%r12, %rdi
	callq	__cxa_free_exception
	jmp	.LBB62_178
.LBB62_154:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit139.thread
.Ltmp872:
.LBB62_155:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit139.thread
	movq	%rax, %r14
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_160
# %bb.156:                              # %.thread310
	callq	_ZdlPv
	jmp	.LBB62_160
.LBB62_157:
.Ltmp831:
	jmp	.LBB62_172
.LBB62_158:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit140.thread
.Ltmp869:
	jmp	.LBB62_159
.LBB62_161:
.Ltmp825:
	jmp	.LBB62_172
.LBB62_162:
.Ltmp858:
	movq	%rax, %r14
	testq	%rbx, %rbx
	je	.LBB62_178
# %bb.163:
	movq	%rbx, %rdi
	jmp	.LBB62_177
.LBB62_164:                             # %.thread
.Ltmp866:
	jmp	.LBB62_172
.LBB62_165:
.Ltmp863:
	movq	%rax, %r14
	leaq	8(%rsp), %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	jmp	.LBB62_178
.LBB62_166:
.Ltmp850:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_150
# %bb.167:
	callq	_ZdlPv
.LBB62_150:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138
	testb	%bl, %bl
	jne	.LBB62_160
	jmp	.LBB62_178
.LBB62_169:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit220.thread
.Ltmp845:
.LBB62_159:
	movq	%rax, %r14
.LBB62_160:
	movq	%r15, %rdi
	callq	__cxa_free_exception
	jmp	.LBB62_178
.LBB62_170:
.Ltmp828:
	jmp	.LBB62_172
.LBB62_171:
.Ltmp853:
.LBB62_172:
	movq	%rax, %r14
	jmp	.LBB62_178
.LBB62_173:
.Ltmp834:
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_177
	jmp	.LBB62_178
.LBB62_174:
.Ltmp842:
	movq	%rax, %r14
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_179
# %bb.175:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit218
	testb	%bl, %bl
	jne	.LBB62_181
	jmp	.LBB62_176
.LBB62_179:
	callq	_ZdlPv
	testb	%bl, %bl
	jne	.LBB62_181
.LBB62_176:
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB62_178
.LBB62_177:
	callq	_ZdlPv
.LBB62_178:
	leaq	128(%rsp), %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB62_180:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit218.thread
.Ltmp837:
	movq	%rax, %r14
.LBB62_181:
	movq	%r15, %rdi
	callq	__cxa_free_exception
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB62_177
	jmp	.LBB62_178
.Lfunc_end62:
	.size	_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end62-_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"aG",@progbits,_ZN8argparse14ArgumentParser19parse_args_internalERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.p2align	2, 0x0
GCC_except_table62:
.Lexception29:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end29-.Lcst_begin29
.Lcst_begin29:
	.uleb128 .Lfunc_begin29-.Lfunc_begin29  # >> Call Site 1 <<
	.uleb128 .Ltmp823-.Lfunc_begin29        #   Call between .Lfunc_begin29 and .Ltmp823
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp823-.Lfunc_begin29        # >> Call Site 2 <<
	.uleb128 .Ltmp824-.Ltmp823              #   Call between .Ltmp823 and .Ltmp824
	.uleb128 .Ltmp825-.Lfunc_begin29        #     jumps to .Ltmp825
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp826-.Lfunc_begin29        # >> Call Site 3 <<
	.uleb128 .Ltmp827-.Ltmp826              #   Call between .Ltmp826 and .Ltmp827
	.uleb128 .Ltmp828-.Lfunc_begin29        #     jumps to .Ltmp828
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp851-.Lfunc_begin29        # >> Call Site 4 <<
	.uleb128 .Ltmp852-.Ltmp851              #   Call between .Ltmp851 and .Ltmp852
	.uleb128 .Ltmp853-.Lfunc_begin29        #     jumps to .Ltmp853
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp829-.Lfunc_begin29        # >> Call Site 5 <<
	.uleb128 .Ltmp830-.Ltmp829              #   Call between .Ltmp829 and .Ltmp830
	.uleb128 .Ltmp831-.Lfunc_begin29        #     jumps to .Ltmp831
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp832-.Lfunc_begin29        # >> Call Site 6 <<
	.uleb128 .Ltmp833-.Ltmp832              #   Call between .Ltmp832 and .Ltmp833
	.uleb128 .Ltmp834-.Lfunc_begin29        #     jumps to .Ltmp834
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp854-.Lfunc_begin29        # >> Call Site 7 <<
	.uleb128 .Ltmp855-.Ltmp854              #   Call between .Ltmp854 and .Ltmp855
	.uleb128 .Ltmp866-.Lfunc_begin29        #     jumps to .Ltmp866
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp856-.Lfunc_begin29        # >> Call Site 8 <<
	.uleb128 .Ltmp857-.Ltmp856              #   Call between .Ltmp856 and .Ltmp857
	.uleb128 .Ltmp858-.Lfunc_begin29        #     jumps to .Ltmp858
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp859-.Lfunc_begin29        # >> Call Site 9 <<
	.uleb128 .Ltmp862-.Ltmp859              #   Call between .Ltmp859 and .Ltmp862
	.uleb128 .Ltmp863-.Lfunc_begin29        #     jumps to .Ltmp863
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp862-.Lfunc_begin29        # >> Call Site 10 <<
	.uleb128 .Ltmp835-.Ltmp862              #   Call between .Ltmp862 and .Ltmp835
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp835-.Lfunc_begin29        # >> Call Site 11 <<
	.uleb128 .Ltmp836-.Ltmp835              #   Call between .Ltmp835 and .Ltmp836
	.uleb128 .Ltmp837-.Lfunc_begin29        #     jumps to .Ltmp837
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp838-.Lfunc_begin29        # >> Call Site 12 <<
	.uleb128 .Ltmp841-.Ltmp838              #   Call between .Ltmp838 and .Ltmp841
	.uleb128 .Ltmp842-.Lfunc_begin29        #     jumps to .Ltmp842
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp841-.Lfunc_begin29        # >> Call Site 13 <<
	.uleb128 .Ltmp843-.Ltmp841              #   Call between .Ltmp841 and .Ltmp843
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp843-.Lfunc_begin29        # >> Call Site 14 <<
	.uleb128 .Ltmp844-.Ltmp843              #   Call between .Ltmp843 and .Ltmp844
	.uleb128 .Ltmp845-.Lfunc_begin29        #     jumps to .Ltmp845
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp846-.Lfunc_begin29        # >> Call Site 15 <<
	.uleb128 .Ltmp849-.Ltmp846              #   Call between .Ltmp846 and .Ltmp849
	.uleb128 .Ltmp850-.Lfunc_begin29        #     jumps to .Ltmp850
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp849-.Lfunc_begin29        # >> Call Site 16 <<
	.uleb128 .Ltmp915-.Ltmp849              #   Call between .Ltmp849 and .Ltmp915
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp915-.Lfunc_begin29        # >> Call Site 17 <<
	.uleb128 .Ltmp916-.Ltmp915              #   Call between .Ltmp915 and .Ltmp916
	.uleb128 .Ltmp917-.Lfunc_begin29        #     jumps to .Ltmp917
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp916-.Lfunc_begin29        # >> Call Site 18 <<
	.uleb128 .Ltmp867-.Ltmp916              #   Call between .Ltmp916 and .Ltmp867
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp867-.Lfunc_begin29        # >> Call Site 19 <<
	.uleb128 .Ltmp868-.Ltmp867              #   Call between .Ltmp867 and .Ltmp868
	.uleb128 .Ltmp869-.Lfunc_begin29        #     jumps to .Ltmp869
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp870-.Lfunc_begin29        # >> Call Site 20 <<
	.uleb128 .Ltmp871-.Ltmp870              #   Call between .Ltmp870 and .Ltmp871
	.uleb128 .Ltmp872-.Lfunc_begin29        #     jumps to .Ltmp872
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp873-.Lfunc_begin29        # >> Call Site 21 <<
	.uleb128 .Ltmp876-.Ltmp873              #   Call between .Ltmp873 and .Ltmp876
	.uleb128 .Ltmp877-.Lfunc_begin29        #     jumps to .Ltmp877
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp864-.Lfunc_begin29        # >> Call Site 22 <<
	.uleb128 .Ltmp865-.Ltmp864              #   Call between .Ltmp864 and .Ltmp865
	.uleb128 .Ltmp866-.Lfunc_begin29        #     jumps to .Ltmp866
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp865-.Lfunc_begin29        # >> Call Site 23 <<
	.uleb128 .Ltmp878-.Ltmp865              #   Call between .Ltmp865 and .Ltmp878
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp878-.Lfunc_begin29        # >> Call Site 24 <<
	.uleb128 .Ltmp879-.Ltmp878              #   Call between .Ltmp878 and .Ltmp879
	.uleb128 .Ltmp880-.Lfunc_begin29        #     jumps to .Ltmp880
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp881-.Lfunc_begin29        # >> Call Site 25 <<
	.uleb128 .Ltmp882-.Ltmp881              #   Call between .Ltmp881 and .Ltmp882
	.uleb128 .Ltmp883-.Lfunc_begin29        #     jumps to .Ltmp883
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp884-.Lfunc_begin29        # >> Call Site 26 <<
	.uleb128 .Ltmp885-.Ltmp884              #   Call between .Ltmp884 and .Ltmp885
	.uleb128 .Ltmp886-.Lfunc_begin29        #     jumps to .Ltmp886
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp887-.Lfunc_begin29        # >> Call Site 27 <<
	.uleb128 .Ltmp888-.Ltmp887              #   Call between .Ltmp887 and .Ltmp888
	.uleb128 .Ltmp889-.Lfunc_begin29        #     jumps to .Ltmp889
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp890-.Lfunc_begin29        # >> Call Site 28 <<
	.uleb128 .Ltmp891-.Ltmp890              #   Call between .Ltmp890 and .Ltmp891
	.uleb128 .Ltmp892-.Lfunc_begin29        #     jumps to .Ltmp892
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp893-.Lfunc_begin29        # >> Call Site 29 <<
	.uleb128 .Ltmp894-.Ltmp893              #   Call between .Ltmp893 and .Ltmp894
	.uleb128 .Ltmp895-.Lfunc_begin29        #     jumps to .Ltmp895
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp896-.Lfunc_begin29        # >> Call Site 30 <<
	.uleb128 .Ltmp899-.Ltmp896              #   Call between .Ltmp896 and .Ltmp899
	.uleb128 .Ltmp900-.Lfunc_begin29        #     jumps to .Ltmp900
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp899-.Lfunc_begin29        # >> Call Site 31 <<
	.uleb128 .Ltmp904-.Ltmp899              #   Call between .Ltmp899 and .Ltmp904
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp904-.Lfunc_begin29        # >> Call Site 32 <<
	.uleb128 .Ltmp905-.Ltmp904              #   Call between .Ltmp904 and .Ltmp905
	.uleb128 .Ltmp906-.Lfunc_begin29        #     jumps to .Ltmp906
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp907-.Lfunc_begin29        # >> Call Site 33 <<
	.uleb128 .Ltmp908-.Ltmp907              #   Call between .Ltmp907 and .Ltmp908
	.uleb128 .Ltmp909-.Lfunc_begin29        #     jumps to .Ltmp909
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp910-.Lfunc_begin29        # >> Call Site 34 <<
	.uleb128 .Ltmp913-.Ltmp910              #   Call between .Ltmp910 and .Ltmp913
	.uleb128 .Ltmp914-.Lfunc_begin29        #     jumps to .Ltmp914
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp913-.Lfunc_begin29        # >> Call Site 35 <<
	.uleb128 .Ltmp901-.Ltmp913              #   Call between .Ltmp913 and .Ltmp901
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp901-.Lfunc_begin29        # >> Call Site 36 <<
	.uleb128 .Ltmp902-.Ltmp901              #   Call between .Ltmp901 and .Ltmp902
	.uleb128 .Ltmp903-.Lfunc_begin29        #     jumps to .Ltmp903
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp918-.Lfunc_begin29        # >> Call Site 37 <<
	.uleb128 .Ltmp919-.Ltmp918              #   Call between .Ltmp918 and .Ltmp919
	.uleb128 .Ltmp920-.Lfunc_begin29        #     jumps to .Ltmp920
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp919-.Lfunc_begin29        # >> Call Site 38 <<
	.uleb128 .Lfunc_end62-.Ltmp919          #   Call between .Ltmp919 and .Lfunc_end62
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument8validateEv,"axG",@progbits,_ZNK8argparse8Argument8validateEv,comdat
	.weak	_ZNK8argparse8Argument8validateEv # -- Begin function _ZNK8argparse8Argument8validateEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument8validateEv,@function
_ZNK8argparse8Argument8validateEv:      # @_ZNK8argparse8Argument8validateEv
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movzbl	320(%rdi), %eax
	testb	$2, %al
	jne	.LBB63_1
# %bb.8:
	movq	288(%rbx), %rax
	subq	280(%rbx), %rax
	sarq	$4, %rax
	cmpq	%rax, 304(%rbx)
	setbe	%cl
	cmpq	%rax, 312(%rbx)
	setae	%al
	testb	%al, %cl
	jne	.LBB63_11
# %bb.9:
	cmpq	$0, 104(%rbx)
	jne	.LBB63_11
# %bb.10:
	movq	%rbx, %rdi
	callq	_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv
	cmpb	$0, 232(%rbx)
	jne	.LBB63_13
	jmp	.LBB63_12
.LBB63_1:
	testb	$16, %al
	jne	.LBB63_5
# %bb.2:
	cmpq	$0, 104(%rbx)
	jne	.LBB63_5
# %bb.3:
	movl	%eax, %ecx
	andb	$4, %cl
	je	.LBB63_5
# %bb.4:
	movq	%rbx, %rdi
	callq	_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv
	movzbl	320(%rbx), %eax
.LBB63_5:
	notb	%al
	testb	$20, %al
	jne	.LBB63_11
# %bb.6:
	movq	280(%rbx), %rax
	cmpq	288(%rbx), %rax
	je	.LBB63_7
.LBB63_11:
	cmpb	$0, 232(%rbx)
	je	.LBB63_12
.LBB63_13:
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv # TAILCALL
.LBB63_7:
	.cfi_def_cfa_offset 16
	movq	%rbx, %rdi
	callq	_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv
	cmpb	$0, 232(%rbx)
	jne	.LBB63_13
.LBB63_12:
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end63:
	.size	_ZNK8argparse8Argument8validateEv, .Lfunc_end63-_ZNK8argparse8Argument8validateEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rdx, %rdi
	callq	strlen
	movabsq	$4611686018427387903, %rcx      # imm = 0x3FFFFFFFFFFFFFFF
	subq	8(%r15), %rcx
	cmpq	%rax, %rcx
	jb	.LBB64_5
# %bb.1:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit
	movq	%r15, %rdi
	movq	%r14, %rsi
	movq	%rax, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB64_2
# %bb.3:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB64_4
.LBB64_2:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB64_4:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB64_5:
	.cfi_def_cfa_offset 32
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Lfunc_end64:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_, .Lfunc_end64-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	movq	(%rsi), %rcx
	movq	8(%rsi), %r8
	movq	8(%rdx), %rax
	leaq	(%rax,%r8), %rdi
	leaq	16(%rsi), %r9
	movl	$15, %r10d
	cmpq	%r9, %rcx
	je	.LBB65_2
# %bb.1:
	movq	16(%rsi), %r10
.LBB65_2:
	movq	(%rdx), %r9
	cmpq	%r10, %rdi
	jbe	.LBB65_7
# %bb.3:
	leaq	16(%rdx), %r11
	movl	$15, %r10d
	cmpq	%r11, %r9
	je	.LBB65_5
# %bb.4:
	movq	16(%rdx), %r10
.LBB65_5:
	cmpq	%r10, %rdi
	jbe	.LBB65_6
.LBB65_7:                               # %.critedge
	movq	%rsi, %rdi
	movq	%r9, %rsi
	movq	%rax, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
	jmp	.LBB65_8
.LBB65_6:
	movq	%rdx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.LBB65_8:
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	leaq	16(%rax), %rcx
	cmpq	%rcx, %rsi
	je	.LBB65_9
# %bb.10:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB65_11
.LBB65_9:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB65_11:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end65:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_, .Lfunc_end65-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen
	movq	%r14, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	movq	%r15, %rcx
	movq	%rax, %r8
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB66_1
# %bb.2:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB66_3
.LBB66_1:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB66_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end66:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_, .Lfunc_end66-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8argparse8Argument14get_usage_fullB5cxx11Ev,"axG",@progbits,_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev,comdat
	.weak	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev # -- Begin function _ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev,@function
_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev: # @_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
.Lfunc_begin30:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception30
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$520, %rsp                      # imm = 0x208
	.cfi_def_cfa_offset 576
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbp
	movq	%rdi, %r13
	leaq	128(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	movb	$47, 7(%rsp)
	movq	(%rbp), %r15
	movq	8(%rbp), %r14
	leaq	56(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	$0, 48(%rsp)
	movb	$0, 56(%rsp)
	leaq	7(%rsp), %rax
	movq	%rax, 120(%rsp)
	cmpq	%r14, %r15
	je	.LBB67_19
# %bb.1:                                # %.lr.ph.i
	movq	%rbp, 72(%rsp)                  # 8-byte Spill
	movq	%r13, 80(%rsp)                  # 8-byte Spill
	leaq	24(%rsp), %r12
	leaq	8(%rsp), %r13
	leaq	120(%rsp), %rbp
	leaq	40(%rsp), %rbx
	jmp	.LBB67_3
	.p2align	4, 0x90
.LBB67_2:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i
                                        #   in Loop: Header=BB67_3 Depth=1
	addq	$32, %r15
	cmpq	%r14, %r15
	je	.LBB67_17
.LBB67_3:                               # =>This Inner Loop Header: Depth=1
.Ltmp921:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	movq	%rbx, %rdx
	movq	%r15, %rcx
	callq	_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
.Ltmp922:
# %bb.4:                                # %.noexc28
                                        #   in Loop: Header=BB67_3 Depth=1
	movq	8(%rsp), %rcx
	cmpq	%r12, %rcx
	je	.LBB67_8
# %bb.5:                                #   in Loop: Header=BB67_3 Depth=1
	movq	40(%rsp), %rax
	leaq	56(%rsp), %rdx
	cmpq	%rdx, %rax
	je	.LBB67_11
# %bb.6:                                #   in Loop: Header=BB67_3 Depth=1
	movq	56(%rsp), %rdx
	movq	%rcx, 40(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
	testq	%rax, %rax
	je	.LBB67_12
# %bb.7:                                #   in Loop: Header=BB67_3 Depth=1
	movq	%rax, 8(%rsp)
	movq	%rdx, 24(%rsp)
	jmp	.LBB67_15
	.p2align	4, 0x90
.LBB67_8:                               #   in Loop: Header=BB67_3 Depth=1
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB67_14
# %bb.9:                                #   in Loop: Header=BB67_3 Depth=1
	movq	40(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB67_13
# %bb.10:                               #   in Loop: Header=BB67_3 Depth=1
	movzbl	24(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB67_14
	.p2align	4, 0x90
.LBB67_11:                              # %.thread.i.i
                                        #   in Loop: Header=BB67_3 Depth=1
	movq	%rcx, 40(%rsp)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 48(%rsp)
.LBB67_12:                              #   in Loop: Header=BB67_3 Depth=1
	movq	%r12, 8(%rsp)
	movq	%r12, %rax
	jmp	.LBB67_15
.LBB67_13:                              #   in Loop: Header=BB67_3 Depth=1
	movq	%r12, %rsi
	callq	memcpy@PLT
.LBB67_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i
                                        #   in Loop: Header=BB67_3 Depth=1
	movq	16(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	40(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB67_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit.i
                                        #   in Loop: Header=BB67_3 Depth=1
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB67_2
# %bb.16:                               #   in Loop: Header=BB67_3 Depth=1
	callq	_ZdlPv
	jmp	.LBB67_2
.LBB67_17:                              # %._crit_edge.i
	movq	40(%rsp), %rsi
	leaq	104(%rsp), %r14
	movq	%r14, 88(%rsp)
	leaq	56(%rsp), %rax
	cmpq	%rax, %rsi
	je	.LBB67_20
# %bb.18:
	movq	%rsi, 88(%rsp)
	movq	56(%rsp), %rax
	movq	%rax, 104(%rsp)
	movq	80(%rsp), %r13                  # 8-byte Reload
	movq	72(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB67_22
.LBB67_19:                              # %._crit_edge.i.thread
	leaq	104(%rsp), %r14
	movq	%r14, 88(%rsp)
	jmp	.LBB67_21
.LBB67_20:
	movq	80(%rsp), %r13                  # 8-byte Reload
	movq	72(%rsp), %rbp                  # 8-byte Reload
.LBB67_21:
	leaq	56(%rsp), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, (%r14)
	movq	%r14, %rsi
.LBB67_22:
	leaq	144(%rsp), %r15
	movq	48(%rsp), %rdx
	movq	%rdx, 96(%rsp)
.Ltmp924:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp925:
# %bb.23:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	movq	88(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB67_25
# %bb.24:
	callq	_ZdlPv
.LBB67_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	80(%rbp), %rbx
	testq	%rbx, %rbx
	je	.LBB67_29
# %bb.26:
	leaq	24(%rsp), %rdi
	movq	%rdi, 8(%rsp)
	movq	72(%rbp), %r12
	movq	%rbx, 40(%rsp)
	cmpq	$16, %rbx
	jb	.LBB67_30
# %bb.27:                               # %.noexc6.i
.Ltmp927:
	leaq	8(%rsp), %rdi
	leaq	40(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp928:
# %bb.28:                               # %._crit_edge.i.i.i.i.thread
	movq	%rax, %rdi
	movq	%rax, 8(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB67_32
.LBB67_29:                              # %._crit_edge.i.i.i.i15
	leaq	24(%rsp), %rax
	movq	%rax, 8(%rsp)
	movl	$5390678, 24(%rsp)              # imm = 0x524156
	movq	$3, 16(%rsp)
	cmpq	$0, 312(%rbp)
	jne	.LBB67_34
	jmp	.LBB67_38
.LBB67_30:                              # %._crit_edge.i.i.i.i
	cmpq	$1, %rbx
	jne	.LBB67_32
# %bb.31:
	movzbl	(%r12), %eax
	movb	%al, 24(%rsp)
	jmp	.LBB67_33
.LBB67_32:
	movq	%r12, %rsi
	movq	%rbx, %rdx
	callq	memcpy@PLT
.LBB67_33:
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	cmpq	$0, 312(%rbp)
	je	.LBB67_38
.LBB67_34:
.Ltmp930:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp931:
# %bb.35:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp932:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp933:
# %bb.36:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit19
	cmpq	$2, 312(%rbp)
	jb	.LBB67_38
# %bb.37:
.Ltmp934:
	movl	$.L.str.82, %esi
	movl	$3, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp935:
.LBB67_38:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit21
	leaq	16(%r13), %r14
	movq	%r14, (%r13)
	movq	$0, 8(%r13)
	movb	$0, 16(%r13)
	movq	192(%rsp), %rax
	testq	%rax, %rax
	je	.LBB67_40
# %bb.39:                               # %.invoke.i.i
	movq	176(%rsp), %r8
	movq	184(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp937:
	movq	%r13, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp938:
	jmp	.LBB67_41
.LBB67_40:
	leaq	224(%rsp), %rsi
.Ltmp939:
	movq	%r13, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp940:
.LBB67_41:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB67_43
# %bb.42:
	callq	_ZdlPv
.LBB67_43:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit26
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 128(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 128(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 144(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 152(%rsp)
	movq	224(%rsp), %rdi
	leaq	240(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB67_45
# %bb.44:
	callq	_ZdlPv
.LBB67_45:                              # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 152(%rsp)
	leaq	208(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 128(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 128(%rsp,%rax)
	movq	$0, 136(%rsp)
	leaq	256(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%r13, %rax
	addq	$520, %rsp                      # imm = 0x208
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB67_46:
	.cfi_def_cfa_offset 576
.Ltmp929:
	movq	%rax, %rbx
	jmp	.LBB67_55
.LBB67_47:
.Ltmp941:
	movq	%rax, %rbx
	movq	(%r13), %rdi
	cmpq	%r14, %rdi
	je	.LBB67_51
# %bb.48:
	callq	_ZdlPv
	jmp	.LBB67_51
.LBB67_49:
.Ltmp926:
	movq	%rax, %rbx
	movq	88(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB67_54
	jmp	.LBB67_55
.LBB67_50:
.Ltmp936:
	movq	%rax, %rbx
.LBB67_51:                              # %.body24
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB67_54
	jmp	.LBB67_55
.LBB67_53:
.Ltmp923:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB67_55
.LBB67_54:                              # %.body.sink.split
	callq	_ZdlPv
.LBB67_55:
	leaq	128(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end67:
	.size	_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev, .Lfunc_end67-_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument14get_usage_fullB5cxx11Ev,"aG",@progbits,_ZNK8argparse8Argument14get_usage_fullB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table67:
.Lexception30:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end30-.Lcst_begin30
.Lcst_begin30:
	.uleb128 .Lfunc_begin30-.Lfunc_begin30  # >> Call Site 1 <<
	.uleb128 .Ltmp921-.Lfunc_begin30        #   Call between .Lfunc_begin30 and .Ltmp921
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp921-.Lfunc_begin30        # >> Call Site 2 <<
	.uleb128 .Ltmp922-.Ltmp921              #   Call between .Ltmp921 and .Ltmp922
	.uleb128 .Ltmp923-.Lfunc_begin30        #     jumps to .Ltmp923
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp922-.Lfunc_begin30        # >> Call Site 3 <<
	.uleb128 .Ltmp924-.Ltmp922              #   Call between .Ltmp922 and .Ltmp924
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp924-.Lfunc_begin30        # >> Call Site 4 <<
	.uleb128 .Ltmp925-.Ltmp924              #   Call between .Ltmp924 and .Ltmp925
	.uleb128 .Ltmp926-.Lfunc_begin30        #     jumps to .Ltmp926
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp927-.Lfunc_begin30        # >> Call Site 5 <<
	.uleb128 .Ltmp928-.Ltmp927              #   Call between .Ltmp927 and .Ltmp928
	.uleb128 .Ltmp929-.Lfunc_begin30        #     jumps to .Ltmp929
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp928-.Lfunc_begin30        # >> Call Site 6 <<
	.uleb128 .Ltmp930-.Ltmp928              #   Call between .Ltmp928 and .Ltmp930
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp930-.Lfunc_begin30        # >> Call Site 7 <<
	.uleb128 .Ltmp935-.Ltmp930              #   Call between .Ltmp930 and .Ltmp935
	.uleb128 .Ltmp936-.Lfunc_begin30        #     jumps to .Ltmp936
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp937-.Lfunc_begin30        # >> Call Site 8 <<
	.uleb128 .Ltmp940-.Ltmp937              #   Call between .Ltmp937 and .Ltmp940
	.uleb128 .Ltmp941-.Lfunc_begin30        #     jumps to .Ltmp941
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp940-.Lfunc_begin30        # >> Call Site 9 <<
	.uleb128 .Lfunc_end67-.Ltmp940          #   Call between .Ltmp940 and .Lfunc_end67
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Lfunc_begin31:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception31
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rdi, %rbx
	movq	%rsi, %rdi
	callq	strlen
	movq	%rax, %r12
	leaq	16(%rbx), %r13
	movq	%r13, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	movq	8(%r14), %rsi
	addq	%rax, %rsi
.Ltmp942:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm
.Ltmp943:
# %bb.1:
	movabsq	$4611686018427387903, %rax      # imm = 0x3FFFFFFFFFFFFFFF
	subq	8(%rbx), %rax
	cmpq	%r12, %rax
	jb	.LBB68_2
# %bb.4:                                # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
.Ltmp944:
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp945:
# %bb.5:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm.exit
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp946:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp947:
# %bb.6:                                # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_.exit
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB68_2:
	.cfi_def_cfa_offset 48
.Ltmp948:
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp949:
# %bb.3:                                # %.noexc
.LBB68_7:
.Ltmp950:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r13, %rdi
	je	.LBB68_9
# %bb.8:
	callq	_ZdlPv
.LBB68_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end68:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_, .Lfunc_end68-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
	.cfi_endproc
	.section	.gcc_except_table._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"aG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,comdat
	.p2align	2, 0x0
GCC_except_table68:
.Lexception31:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end31-.Lcst_begin31
.Lcst_begin31:
	.uleb128 .Ltmp942-.Lfunc_begin31        # >> Call Site 1 <<
	.uleb128 .Ltmp949-.Ltmp942              #   Call between .Ltmp942 and .Ltmp949
	.uleb128 .Ltmp950-.Lfunc_begin31        #     jumps to .Ltmp950
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp949-.Lfunc_begin31        # >> Call Site 2 <<
	.uleb128 .Lfunc_end68-.Ltmp949          #   Call between .Ltmp949 and .Lfunc_end68
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"axG",@progbits,_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.weak	_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE # -- Begin function _ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.p2align	4, 0x90
	.type	_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,@function
_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE: # @_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
.Lfunc_begin32:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception32
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 96(%rsp)                  # 8-byte Spill
	movq	%rdi, %rbx
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rdi)
	movq	$0, 16(%rdi)
	movq	(%rdx), %r15
	movq	8(%rdx), %rax
	movq	%rax, 112(%rsp)                 # 8-byte Spill
	cmpq	%rax, %r15
	je	.LBB69_78
# %bb.1:                                # %.lr.ph
	movq	96(%rsp), %rax                  # 8-byte Reload
	leaq	264(%rax), %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	leaq	136(%rax), %r14
	movq	%r14, 32(%rsp)                  # 8-byte Spill
	movq	%rbx, 40(%rsp)                  # 8-byte Spill
	jmp	.LBB69_5
.LBB69_2:                               #   in Loop: Header=BB69_5 Depth=1
	movzbl	(%r12), %ecx
	movb	%cl, (%rax)
.LBB69_3:                               # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRKS5_EEEvRS6_PT_DpOT0_.exit.i
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	addq	$32, 8(%rbx)
.LBB69_4:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	addq	$32, %r15
	cmpq	112(%rsp), %r15                 # 8-byte Folded Reload
	je	.LBB69_78
.LBB69_5:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB69_9 Depth 2
                                        #     Child Loop BB69_36 Depth 2
	movq	96(%rsp), %rbx                  # 8-byte Reload
	movq	168(%rbx), %rsi
	movq	176(%rbx), %rcx
	movq	%r15, %rdi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm
	movq	%rax, 56(%rsp)                  # 8-byte Spill
	movq	8(%r15), %r12
	movq	272(%rbx), %rbx
	testq	%rbx, %rbx
	je	.LBB69_17
# %bb.6:                                # %.lr.ph.i.i.i.preheader
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	(%r15), %r13
	movq	48(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB69_9
	.p2align	4, 0x90
.LBB69_7:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB69_9 Depth=2
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB69_8:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i
                                        #   in Loop: Header=BB69_9 Depth=2
	testl	%eax, %eax
	cmovnsq	%rbx, %rbp
	shrl	$31, %eax
	movq	16(%rbx,%rax,8), %rbx
	testq	%rbx, %rbx
	je	.LBB69_11
.LBB69_9:                               # %.lr.ph.i.i.i
                                        #   Parent Loop BB69_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	32(%rbx), %rdx
	movq	%rdx, %r14
	subq	%r12, %r14
	cmovaeq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB69_7
# %bb.10:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB69_9 Depth=2
	movq	40(%rbx), %rdi
	movq	%r13, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB69_8
	jmp	.LBB69_7
	.p2align	4, 0x90
.LBB69_11:                              # %_ZNKSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISA_EPKSt18_Rb_tree_node_baseRS5_.exit.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	48(%rsp), %rbp                  # 8-byte Folded Reload
	movq	32(%rsp), %r14                  # 8-byte Reload
	je	.LBB69_17
# %bb.12:                               #   in Loop: Header=BB69_5 Depth=1
	movq	32(%rbp), %rdx
	movq	%r12, %rbx
	subq	%rdx, %rbx
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB69_14
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	40(%rbp), %rsi
	movq	%r13, %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB69_15
.LBB69_14:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rbx
	movl	%ebx, %eax
.LBB69_15:                              # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	testl	%eax, %eax
	movq	40(%rsp), %rbx                  # 8-byte Reload
	jns	.LBB69_49
# %bb.16:                               # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	testq	%r12, %r12
	jne	.LBB69_18
	jmp	.LBB69_49
	.p2align	4, 0x90
.LBB69_17:                              # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit.thread
                                        #   in Loop: Header=BB69_5 Depth=1
	testq	%r12, %r12
	movq	40(%rsp), %rbx                  # 8-byte Reload
	je	.LBB69_49
.LBB69_18:                              #   in Loop: Header=BB69_5 Depth=1
	movq	%r14, %rdi
	movl	$47, %esi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	je	.LBB69_28
# %bb.19:                               #   in Loop: Header=BB69_5 Depth=1
	movq	(%r15), %rax
	movsbl	(%rax), %esi
.LBB69_20:                              # %_ZZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEENKUlRKS7_E_clESD_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, 56(%rsp)                   # 8-byte Folded Reload
	je	.LBB69_49
# %bb.21:                               # %_ZZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEENKUlRKS7_E_clESD_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$-1, %rax
	je	.LBB69_49
# %bb.22:                               #   in Loop: Header=BB69_5 Depth=1
	movq	8(%r15), %r12
	leaq	16(%rsp), %rax
	movq	%rax, (%rsp)
	movq	56(%rsp), %rcx                  # 8-byte Reload
	cmpq	%rcx, %r12
	cmovaeq	%rcx, %r12
	movq	(%r15), %r13
	movq	%r12, 64(%rsp)
	cmpq	$16, %r12
	jb	.LBB69_25
# %bb.23:                               # %.noexc11.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
.Ltmp951:
	movq	%rsp, %rdi
	leaq	64(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp952:
# %bb.24:                               # %.noexc
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, (%rsp)
	movq	64(%rsp), %rcx
	movq	%rcx, 16(%rsp)
.LBB69_25:                              # %._crit_edge.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	testq	%r12, %r12
	je	.LBB69_32
# %bb.26:                               # %._crit_edge.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$1, %r12
	jne	.LBB69_31
# %bb.27:                               #   in Loop: Header=BB69_5 Depth=1
	movzbl	(%r13), %ecx
	movb	%cl, (%rax)
	jmp	.LBB69_32
	.p2align	4, 0x90
.LBB69_28:                              #   in Loop: Header=BB69_5 Depth=1
	cmpq	$2, 8(%r15)
	jb	.LBB69_49
# %bb.29:                               #   in Loop: Header=BB69_5 Depth=1
	movq	(%r15), %rax
	movsbl	(%rax), %esi
	movq	%r14, %rdi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	je	.LBB69_49
# %bb.30:                               # %_ZZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EEENKUlRKS7_E_clESD_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	(%r15), %rax
	movsbl	1(%rax), %esi
	jmp	.LBB69_20
.LBB69_31:                              #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB69_32:                              #   in Loop: Header=BB69_5 Depth=1
	movq	64(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %r13
	movq	96(%rsp), %rax                  # 8-byte Reload
	movq	272(%rax), %rbx
	testq	%rbx, %rbx
	je	.LBB69_46
# %bb.33:                               # %.lr.ph.i.i.i41.preheader
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	8(%rsp), %r12
	movq	48(%rsp), %rbp                  # 8-byte Reload
	jmp	.LBB69_36
	.p2align	4, 0x90
.LBB69_34:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i52
                                        #   in Loop: Header=BB69_36 Depth=2
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %r14
	cmpq	$2147483647, %r14               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %r14
	movl	%r14d, %eax
.LBB69_35:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i58
                                        #   in Loop: Header=BB69_36 Depth=2
	testl	%eax, %eax
	cmovnsq	%rbx, %rbp
	shrl	$31, %eax
	movq	16(%rbx,%rax,8), %rbx
	testq	%rbx, %rbx
	je	.LBB69_38
.LBB69_36:                              # %.lr.ph.i.i.i41
                                        #   Parent Loop BB69_5 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	32(%rbx), %rdx
	movq	%rdx, %r14
	subq	%r12, %r14
	cmovaeq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB69_34
# %bb.37:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i48
                                        #   in Loop: Header=BB69_36 Depth=2
	movq	40(%rbx), %rdi
	movq	%r13, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB69_35
	jmp	.LBB69_34
.LBB69_38:                              # %_ZNKSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISA_EPKSt18_Rb_tree_node_baseRS5_.exit.i.i59
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	48(%rsp), %rbp                  # 8-byte Folded Reload
	leaq	80(%rsp), %r14
	je	.LBB69_46
# %bb.39:                               #   in Loop: Header=BB69_5 Depth=1
	movq	32(%rbp), %rdx
	movq	%r12, %rbx
	subq	%rdx, %rbx
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB69_45
# %bb.40:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i64
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	40(%rbp), %rsi
	movq	%r13, %rdi
	callq	memcmp
	testl	%eax, %eax
	je	.LBB69_45
# %bb.41:                               # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit73
                                        #   in Loop: Header=BB69_5 Depth=1
	testl	%eax, %eax
	js	.LBB69_46
.LBB69_42:                              #   in Loop: Header=BB69_5 Depth=1
	movq	40(%rsp), %rbx                  # 8-byte Reload
	movq	8(%rbx), %rsi
	cmpq	16(%rbx), %rsi
	je	.LBB69_57
# %bb.43:                               #   in Loop: Header=BB69_5 Depth=1
	leaq	16(%rsi), %rax
	movq	%rax, (%rsi)
	movq	(%rsp), %rcx
	leaq	16(%rsp), %rdx
	cmpq	%rdx, %rcx
	je	.LBB69_58
# %bb.44:                               #   in Loop: Header=BB69_5 Depth=1
	movq	%rcx, (%rsi)
	movq	16(%rsp), %rax
	movq	%rax, 16(%rsi)
	jmp	.LBB69_59
.LBB69_45:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i68
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovgeq	%rax, %rbx
	movl	%ebx, %eax
	testl	%eax, %eax
	jns	.LBB69_42
.LBB69_46:                              # %.critedge34
                                        #   in Loop: Header=BB69_5 Depth=1
	leaq	16(%rsp), %rax
	cmpq	%rax, %r13
	je	.LBB69_48
# %bb.47:                               #   in Loop: Header=BB69_5 Depth=1
	movq	%r13, %rdi
	callq	_ZdlPv
.LBB69_48:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit87
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	40(%rsp), %rbx                  # 8-byte Reload
	movq	32(%rsp), %r14                  # 8-byte Reload
	.p2align	4, 0x90
.LBB69_49:                              # %.critedge
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	8(%rbx), %r13
	cmpq	16(%rbx), %r13
	je	.LBB69_56
# %bb.50:                               #   in Loop: Header=BB69_5 Depth=1
	leaq	16(%r13), %rax
	movq	%rax, (%r13)
	movq	(%r15), %r12
	movq	8(%r15), %rbp
	movq	%rbp, (%rsp)
	cmpq	$16, %rbp
	jb	.LBB69_53
# %bb.51:                               # %.noexc6.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
.Ltmp966:
	movq	%r13, %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp967:
# %bb.52:                               # %.noexc89
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, (%r13)
	movq	(%rsp), %rcx
	movq	%rcx, 16(%r13)
.LBB69_53:                              # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	testq	%rbp, %rbp
	je	.LBB69_3
# %bb.54:                               # %._crit_edge.i.i.i.i.i.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$1, %rbp
	je	.LBB69_2
# %bb.55:                               #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, %rdi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	memcpy@PLT
	jmp	.LBB69_3
	.p2align	4, 0x90
.LBB69_56:                              #   in Loop: Header=BB69_5 Depth=1
.Ltmp968:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r15, %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp969:
	jmp	.LBB69_4
.LBB69_57:                              #   in Loop: Header=BB69_5 Depth=1
.Ltmp954:
	movq	%rbx, %rdi
	movq	%rsp, %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp955:
	jmp	.LBB69_60
.LBB69_58:                              #   in Loop: Header=BB69_5 Depth=1
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rax)
.LBB69_59:                              # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%r12, 8(%rsi)
	movq	%rdx, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	addq	$32, 8(%rbx)
.LBB69_60:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	56(%rsp), %rax                  # 8-byte Reload
	leaq	1(%rax), %r13
	movq	8(%r15), %r12
	cmpq	%rax, %r12
	jbe	.LBB69_79
# %bb.61:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc.exit.i.i
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%r14, 64(%rsp)
	subq	%r13, %r12
	addq	(%r15), %r13
	movq	%r12, 104(%rsp)
	movq	%r14, %rax
	cmpq	$16, %r12
	jb	.LBB69_64
# %bb.62:                               # %.noexc11.i.i75
                                        #   in Loop: Header=BB69_5 Depth=1
.Ltmp960:
	leaq	64(%rsp), %rdi
	leaq	104(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp961:
# %bb.63:                               # %.noexc78
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, 64(%rsp)
	movq	104(%rsp), %rcx
	movq	%rcx, 80(%rsp)
.LBB69_64:                              # %._crit_edge.i.i.i.i.i76
                                        #   in Loop: Header=BB69_5 Depth=1
	testq	%r12, %r12
	je	.LBB69_68
# %bb.65:                               # %._crit_edge.i.i.i.i.i76
                                        #   in Loop: Header=BB69_5 Depth=1
	cmpq	$1, %r12
	jne	.LBB69_67
# %bb.66:                               #   in Loop: Header=BB69_5 Depth=1
	movzbl	(%r13), %ecx
	movb	%cl, (%rax)
	jmp	.LBB69_68
.LBB69_67:                              #   in Loop: Header=BB69_5 Depth=1
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB69_68:                              #   in Loop: Header=BB69_5 Depth=1
	movq	104(%rsp), %rax
	movq	%rax, 72(%rsp)
	movq	64(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rbx), %rsi
	cmpq	16(%rbx), %rsi
	je	.LBB69_71
# %bb.69:                               #   in Loop: Header=BB69_5 Depth=1
	leaq	16(%rsi), %rax
	movq	%rax, (%rsi)
	movq	64(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB69_74
# %bb.70:                               #   in Loop: Header=BB69_5 Depth=1
	movq	%rcx, (%rsi)
	movq	80(%rsp), %rax
	movq	%rax, 16(%rsi)
	jmp	.LBB69_75
.LBB69_71:                              #   in Loop: Header=BB69_5 Depth=1
.Ltmp963:
	movq	%rbx, %rdi
	leaq	64(%rsp), %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp964:
# %bb.72:                               # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit83
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	64(%rsp), %rdi
	cmpq	%r14, %rdi
	movq	32(%rsp), %r14                  # 8-byte Reload
	je	.LBB69_76
# %bb.73:                               #   in Loop: Header=BB69_5 Depth=1
	callq	_ZdlPv
	jmp	.LBB69_76
.LBB69_74:                              #   in Loop: Header=BB69_5 Depth=1
	movups	(%r14), %xmm0
	movups	%xmm0, (%rax)
.LBB69_75:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_.exit83.thread
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	32(%rsp), %r14                  # 8-byte Reload
	movq	72(%rsp), %rax
	movq	%rax, 8(%rsi)
	addq	$32, 8(%rbx)
.LBB69_76:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB69_5 Depth=1
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB69_4
# %bb.77:                               #   in Loop: Header=BB69_5 Depth=1
	callq	_ZdlPv
	jmp	.LBB69_4
.LBB69_78:                              # %._crit_edge
	movq	%rbx, %rax
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB69_79:
	.cfi_def_cfa_offset 176
.Ltmp957:
	movl	$.L.str.39, %edi
	movl	$.L.str.57, %esi
	movq	%r13, %rdx
	movq	%r12, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz
.Ltmp958:
# %bb.80:                               # %.noexc77
.LBB69_81:
.Ltmp965:
	movq	%r14, %rcx
	movq	%rax, %r14
	movq	64(%rsp), %rdi
	cmpq	%rcx, %rdi
	jne	.LBB69_84
# %bb.82:
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB69_89
.LBB69_83:
	movq	40(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB69_84:
	callq	_ZdlPv
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB69_83
	jmp	.LBB69_89
.LBB69_85:
.Ltmp956:
	jmp	.LBB69_86
.LBB69_87:                              # %.loopexit
.Ltmp962:
	jmp	.LBB69_86
.LBB69_88:                              # %.loopexit.split-lp
.Ltmp959:
.LBB69_86:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB69_83
.LBB69_89:
	callq	_ZdlPv
	movq	40(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB69_90:
.Ltmp953:
	jmp	.LBB69_92
.LBB69_91:
.Ltmp970:
.LBB69_92:
	movq	%rax, %r14
	movq	40(%rsp), %rdi                  # 8-byte Reload
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end69:
	.size	_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE, .Lfunc_end69-_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,"aG",@progbits,_ZNK8argparse14ArgumentParser20preprocess_argumentsERKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS7_EE,comdat
	.p2align	2, 0x0
GCC_except_table69:
.Lexception32:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end32-.Lcst_begin32
.Lcst_begin32:
	.uleb128 .Ltmp951-.Lfunc_begin32        # >> Call Site 1 <<
	.uleb128 .Ltmp952-.Ltmp951              #   Call between .Ltmp951 and .Ltmp952
	.uleb128 .Ltmp953-.Lfunc_begin32        #     jumps to .Ltmp953
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp952-.Lfunc_begin32        # >> Call Site 2 <<
	.uleb128 .Ltmp966-.Ltmp952              #   Call between .Ltmp952 and .Ltmp966
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp966-.Lfunc_begin32        # >> Call Site 3 <<
	.uleb128 .Ltmp967-.Ltmp966              #   Call between .Ltmp966 and .Ltmp967
	.uleb128 .Ltmp970-.Lfunc_begin32        #     jumps to .Ltmp970
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp967-.Lfunc_begin32        # >> Call Site 4 <<
	.uleb128 .Ltmp968-.Ltmp967              #   Call between .Ltmp967 and .Ltmp968
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp968-.Lfunc_begin32        # >> Call Site 5 <<
	.uleb128 .Ltmp969-.Ltmp968              #   Call between .Ltmp968 and .Ltmp969
	.uleb128 .Ltmp970-.Lfunc_begin32        #     jumps to .Ltmp970
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp954-.Lfunc_begin32        # >> Call Site 6 <<
	.uleb128 .Ltmp955-.Ltmp954              #   Call between .Ltmp954 and .Ltmp955
	.uleb128 .Ltmp956-.Lfunc_begin32        #     jumps to .Ltmp956
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp960-.Lfunc_begin32        # >> Call Site 7 <<
	.uleb128 .Ltmp961-.Ltmp960              #   Call between .Ltmp960 and .Ltmp961
	.uleb128 .Ltmp962-.Lfunc_begin32        #     jumps to .Ltmp962
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp961-.Lfunc_begin32        # >> Call Site 8 <<
	.uleb128 .Ltmp963-.Ltmp961              #   Call between .Ltmp961 and .Ltmp963
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp963-.Lfunc_begin32        # >> Call Site 9 <<
	.uleb128 .Ltmp964-.Ltmp963              #   Call between .Ltmp963 and .Ltmp964
	.uleb128 .Ltmp965-.Lfunc_begin32        #     jumps to .Ltmp965
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp957-.Lfunc_begin32        # >> Call Site 10 <<
	.uleb128 .Ltmp958-.Ltmp957              #   Call between .Ltmp957 and .Ltmp958
	.uleb128 .Ltmp959-.Lfunc_begin32        #     jumps to .Ltmp959
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp958-.Lfunc_begin32        # >> Call Site 11 <<
	.uleb128 .Lfunc_end69-.Ltmp958          #   Call between .Ltmp958 and .Lfunc_end69
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end32:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_,"axG",@progbits,_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_,comdat
	.weak	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_ # -- Begin function _ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_
	.p2align	4, 0x90
	.type	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_,@function
_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_: # @_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %r12
	movq	16(%rdi), %r14
	leaq	8(%rdi), %r9
	testq	%r14, %r14
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	je	.LBB70_11
# %bb.1:                                # %.lr.ph.i.i.i
	movq	%r12, 16(%rsp)                  # 8-byte Spill
	movq	(%rsi), %rbp
	movq	8(%rsi), %r13
	movl	$2147483647, %r12d              # imm = 0x7FFFFFFF
	movq	%r9, 8(%rsp)                    # 8-byte Spill
	movq	%r9, %r15
	jmp	.LBB70_2
	.p2align	4, 0x90
.LBB70_4:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_2 Depth=1
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbx
	cmpq	$2147483647, %rbx               # imm = 0x7FFFFFFF
	cmovgeq	%r12, %rbx
	movl	%ebx, %eax
.LBB70_5:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i
                                        #   in Loop: Header=BB70_2 Depth=1
	testl	%eax, %eax
	cmovnsq	%r14, %r15
	shrl	$31, %eax
	movq	16(%r14,%rax,8), %r14
	testq	%r14, %r14
	je	.LBB70_6
.LBB70_2:                               # =>This Inner Loop Header: Depth=1
	movq	32(%r14), %rdx
	movq	%rdx, %rbx
	subq	%rbp, %rbx
	cmovaeq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB70_4
# %bb.3:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB70_2 Depth=1
	movq	40(%r14), %rdi
	movq	%r13, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB70_5
	jmp	.LBB70_4
.LBB70_6:                               # %_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEE11lower_boundERS7_.exit
	movq	8(%rsp), %r9                    # 8-byte Reload
	cmpq	%r9, %r15
	movq	16(%rsp), %r12                  # 8-byte Reload
	je	.LBB70_11
# %bb.7:
	movq	32(%r15), %rdx
	movq	%rbp, %rbx
	subq	%rdx, %rbx
	cmovbq	%rbp, %rdx
	testq	%rdx, %rdx
	je	.LBB70_9
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	movq	40(%r15), %rsi
	movq	%r13, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB70_10
.LBB70_9:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%rbx, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB70_10:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
	movq	%r15, %r9
	testl	%eax, %eax
	jns	.LBB70_12
.LBB70_11:                              # %.critedge
	movq	24(%rsp), %rax                  # 8-byte Reload
	movq	%rax, 32(%rsp)
	leaq	32(%rsp), %rcx
	leaq	7(%rsp), %r8
	movl	$_ZSt19piecewise_construct, %edx
	movq	%r12, %rdi
	movq	%r9, %rsi
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_
	movq	%rax, %r15
.LBB70_12:
	addq	$48, %r15
	movq	%r15, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end70:
	.size	_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_, .Lfunc_end70-_ZNSt3mapISt17basic_string_viewIcSt11char_traitsIcEEbSt4lessIS3_ESaISt4pairIKS3_bEEEixERS7_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_,"axG",@progbits,_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_,comdat
	.weak	_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_ # -- Begin function _ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_
	.p2align	4, 0x90
	.type	_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_,@function
_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_: # @_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	movq	%rsi, 8(%rsp)
	movq	%rdx, 16(%rsp)
	movq	24(%rdi), %r14
	addq	$8, %rbx
	cmpq	%rbx, %r14
	je	.LBB71_1
# %bb.3:                                # %.lr.ph.preheader
	movq	$-1, %rbp
	xorl	%r15d, %r15d
	leaq	8(%rsp), %r13
	xorl	%r12d, %r12d
	jmp	.LBB71_4
	.p2align	4, 0x90
.LBB71_6:                               #   in Loop: Header=BB71_4 Depth=1
	movq	%r14, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	movq	%rax, %r14
	cmpq	%rbx, %rax
	je	.LBB71_2
.LBB71_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	leaq	32(%r14), %rdi
	movq	%r13, %rsi
	callq	_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_
	cmpq	%rbp, %rax
	jae	.LBB71_6
# %bb.5:                                #   in Loop: Header=BB71_4 Depth=1
	movq	32(%r14), %r15
	movq	40(%r14), %r12
	movq	%rax, %rbp
	jmp	.LBB71_6
.LBB71_1:
	xorl	%r12d, %r12d
	xorl	%r15d, %r15d
.LBB71_2:                               # %._crit_edge
	movq	%r15, %rax
	movq	%r12, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end71:
	.size	_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_, .Lfunc_end71-_ZN8argparse7details23get_most_similar_stringISt14_List_iteratorISt17reference_wrapperINS_14ArgumentParserEEEEESt17basic_string_viewIcSt11char_traitsIcEERKSt3mapISA_T_St4lessISA_ESaISt4pairIKSA_SC_EEESA_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E,"axG",@progbits,_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E,comdat
	.weak	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E # -- Begin function _ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
	.p2align	4, 0x90
	.type	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E,@function
_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E: # @_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
.Lfunc_begin33:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception33
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$112, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movzbl	320(%rdi), %eax
	movl	%eax, %edx
	andb	$24, %dl
	cmpb	$16, %dl
	je	.LBB72_25
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	orb	$16, %al
	movb	%al, 320(%rdi)
	movq	%rcx, 24(%rdi)
	movq	%r8, 32(%rdi)
	cmpb	$0, 232(%rdi)
	je	.LBB72_5
# %bb.2:
	cmpq	%r15, %r14
	je	.LBB72_5
# %bb.3:                                # %.lr.ph.preheader
	movq	%r14, %r12
	.p2align	4, 0x90
.LBB72_4:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, %rdi
	movq	%r12, %rsi
	callq	_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_
	addq	$32, %r12
	cmpq	%r15, %r12
	jne	.LBB72_4
.LBB72_5:                               # %.loopexit
	movq	312(%rbx), %rax
	testq	%rax, %rax
	je	.LBB72_14
# %bb.6:
	movq	304(%rbx), %r12
	movq	%r15, %rcx
	subq	%r14, %rcx
	sarq	$5, %rcx
	cmpq	%r12, %rcx
	jae	.LBB72_17
# %bb.7:
	cmpq	$0, 104(%rbx)
	jne	.LBB72_24
# %bb.8:
	addq	$24, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp974:
	leaq	48(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movq	%rbx, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp975:
# %bb.9:
.Ltmp977:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rdx
	movl	$.L.str.62, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp978:
# %bb.10:
.Ltmp980:
	leaq	16(%rsp), %rdi
	leaq	80(%rsp), %rsi
	movl	$.L.str.63, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp981:
# %bb.11:
	movb	$1, %bpl
.Ltmp983:
	leaq	16(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp984:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp985:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp986:
# %bb.13:
.LBB72_14:
	leaq	192(%rbx), %rax
	movq	288(%rbx), %rsi
	cmpq	296(%rbx), %rsi
	je	.LBB72_20
# %bb.15:
	movq	$0, 8(%rsi)
	movq	(%rax), %rcx
	testq	%rcx, %rcx
	je	.LBB72_21
# %bb.16:
	movq	%rsi, 16(%rsp)
	leaq	16(%rsp), %rdx
	movl	$2, %edi
	movq	%rax, %rsi
	callq	*%rcx
	jmp	.LBB72_22
.LBB72_17:                              # %_ZSt4nextIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEET_SD_NSt15iterator_traitsISD_E15difference_typeE.exit
	movq	%rax, %rdx
	shlq	$5, %rdx
	addq	%r14, %rdx
	cmpq	%rcx, %rax
	cmovbq	%rdx, %r15
	testb	$1, 320(%rbx)
	jne	.LBB72_19
# %bb.18:
	movups	328(%rbx), %xmm0
	movups	%xmm0, 24(%rsp)
	movq	$_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_, 16(%rsp)
	leaq	16(%rsp), %rdx
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag
	movq	%rax, %r15
	subq	%r14, %rax
	sarq	$5, %rax
	cmpq	%r12, %rax
	jb	.LBB72_27
.LBB72_19:
	movq	%r14, 16(%rsp)
	movq	%r15, 24(%rsp)
	movq	%rbx, 32(%rsp)
	movzbl	272(%rbx), %eax
	addq	$240, %rbx
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE(,%rcx,8)
	movq	%r15, %r14
	jmp	.LBB72_24
.LBB72_20:
	leaq	280(%rbx), %rdi
	movq	%rax, %rdx
	callq	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	jmp	.LBB72_23
.LBB72_21:
	movq	$0, (%rsi)
.LBB72_22:                              # %_ZNSt6vectorISt3anySaIS0_EE12emplace_backIJRS0_EEES4_DpOT_.exit
	addq	$16, 288(%rbx)
.LBB72_23:                              # %_ZNSt6vectorISt3anySaIS0_EE12emplace_backIJRS0_EEES4_DpOT_.exit
	movzbl	272(%rbx), %eax
	addq	$240, %rbx
	cmpq	$255, %rax
	movq	$-1, %rcx
	cmovneq	%rax, %rcx
	leaq	16(%rsp), %rdi
	movq	%rbx, %rsi
	callq	*_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE(,%rcx,8)
.LBB72_24:
	movq	%r14, %rax
	addq	$112, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB72_25:
	.cfi_def_cfa_offset 160
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp988:
	movl	$.L.str.60, %esi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc
.Ltmp989:
.LBB72_26:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.LBB72_27:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp971:
	movl	$.L.str.61, %esi
	movq	%rax, %rdi
	callq	_ZNSt13runtime_errorC1EPKc
.Ltmp972:
	jmp	.LBB72_26
.LBB72_28:
.Ltmp987:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB72_32
# %bb.29:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB72_34
.LBB72_30:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB72_35
.LBB72_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	testb	%bpl, %bpl
	je	.LBB72_36
	jmp	.LBB72_43
.LBB72_32:
	callq	_ZdlPv
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB72_30
	jmp	.LBB72_34
.LBB72_33:
.Ltmp982:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB72_30
.LBB72_34:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB72_31
.LBB72_35:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB72_43
.LBB72_36:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB72_37:
.Ltmp973:
	jmp	.LBB72_42
.LBB72_38:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
.Ltmp979:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB72_43
# %bb.39:                               # %.thread
	callq	_ZdlPv
	jmp	.LBB72_43
.LBB72_40:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48.thread
.Ltmp976:
	jmp	.LBB72_42
.LBB72_41:
.Ltmp990:
.LBB72_42:
	movq	%rax, %rbx
.LBB72_43:
	movq	%r14, %rdi
	callq	__cxa_free_exception
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end72:
	.size	_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E, .Lfunc_end72-_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E,"aG",@progbits,_ZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_E,comdat
	.p2align	2, 0x0
GCC_except_table72:
.Lexception33:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end33-.Lcst_begin33
.Lcst_begin33:
	.uleb128 .Lfunc_begin33-.Lfunc_begin33  # >> Call Site 1 <<
	.uleb128 .Ltmp974-.Lfunc_begin33        #   Call between .Lfunc_begin33 and .Ltmp974
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp974-.Lfunc_begin33        # >> Call Site 2 <<
	.uleb128 .Ltmp975-.Ltmp974              #   Call between .Ltmp974 and .Ltmp975
	.uleb128 .Ltmp976-.Lfunc_begin33        #     jumps to .Ltmp976
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp977-.Lfunc_begin33        # >> Call Site 3 <<
	.uleb128 .Ltmp978-.Ltmp977              #   Call between .Ltmp977 and .Ltmp978
	.uleb128 .Ltmp979-.Lfunc_begin33        #     jumps to .Ltmp979
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp980-.Lfunc_begin33        # >> Call Site 4 <<
	.uleb128 .Ltmp981-.Ltmp980              #   Call between .Ltmp980 and .Ltmp981
	.uleb128 .Ltmp982-.Lfunc_begin33        #     jumps to .Ltmp982
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp983-.Lfunc_begin33        # >> Call Site 5 <<
	.uleb128 .Ltmp986-.Ltmp983              #   Call between .Ltmp983 and .Ltmp986
	.uleb128 .Ltmp987-.Lfunc_begin33        #     jumps to .Ltmp987
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp986-.Lfunc_begin33        # >> Call Site 6 <<
	.uleb128 .Ltmp988-.Ltmp986              #   Call between .Ltmp986 and .Ltmp988
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp988-.Lfunc_begin33        # >> Call Site 7 <<
	.uleb128 .Ltmp989-.Ltmp988              #   Call between .Ltmp988 and .Ltmp989
	.uleb128 .Ltmp990-.Lfunc_begin33        #     jumps to .Ltmp990
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp989-.Lfunc_begin33        # >> Call Site 8 <<
	.uleb128 .Ltmp971-.Ltmp989              #   Call between .Ltmp989 and .Ltmp971
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp971-.Lfunc_begin33        # >> Call Site 9 <<
	.uleb128 .Ltmp972-.Ltmp971              #   Call between .Ltmp971 and .Ltmp972
	.uleb128 .Ltmp973-.Lfunc_begin33        #     jumps to .Ltmp973
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp972-.Lfunc_begin33        # >> Call Site 10 <<
	.uleb128 .Lfunc_end72-.Ltmp972          #   Call between .Ltmp972 and .Lfunc_end72
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end33:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	(%rdi), %rsi
	movq	8(%rdi), %rbx
	movq	%rbx, %rax
	subq	%rsi, %rax
	movabsq	$9223372036854775776, %rcx      # imm = 0x7FFFFFFFFFFFFFE0
	cmpq	%rcx, %rax
	je	.LBB73_25
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r13
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
	sarq	$5, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %rbp
	movq	%rbp, %rdx
	shrq	$58, %rdx
	movabsq	$288230376151711743, %rdx       # imm = 0x3FFFFFFFFFFFFFF
	cmovneq	%rdx, %rbp
	addq	%rax, %rcx
	cmovbq	%rdx, %rbp
	movq	%r15, %r14
	movq	%rsi, 8(%rsp)                   # 8-byte Spill
	subq	%rsi, %r14
	sarq	$5, %r14
	testq	%rbp, %rbp
	je	.LBB73_2
# %bb.3:                                # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i
	movq	%rbp, %rdi
	shlq	$5, %rdi
	callq	_Znwm
	movq	%rax, %r12
	jmp	.LBB73_4
.LBB73_2:
	xorl	%r12d, %r12d
.LBB73_4:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	shlq	$5, %r14
	leaq	(%r12,%r14), %rcx
	addq	$16, %rcx
	movq	%rcx, (%r12,%r14)
	movq	(%r13), %rdx
	leaq	16(%r13), %rax
	cmpq	%rax, %rdx
	je	.LBB73_5
# %bb.6:
	leaq	(%r12,%r14), %rsi
	movq	%rdx, (%rsi)
	movq	(%rax), %rdx
	movq	%rdx, (%rcx)
	jmp	.LBB73_7
.LBB73_5:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%rcx)
.LBB73_7:                               # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	8(%r13), %rcx
	movq	%rcx, 8(%r12,%r14)
	movq	%rax, (%r13)
	movq	$0, 8(%r13)
	movb	$0, 16(%r13)
	movq	%r12, %r13
	cmpq	%r15, %rdi
	je	.LBB73_14
# %bb.8:                                # %.lr.ph.i.i.i.i.preheader
	leaq	16(%r12), %r13
	leaq	16(%rdi), %rax
	jmp	.LBB73_9
	.p2align	4, 0x90
.LBB73_11:                              #   in Loop: Header=BB73_9 Depth=1
	movq	%rcx, -16(%r13)
	movq	(%rax), %rcx
	movq	%rcx, (%r13)
.LBB73_12:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB73_9 Depth=1
	movq	-8(%rax), %rcx
	movq	%rcx, -8(%r13)
	movq	%rax, -16(%rax)
	movq	$0, -8(%rax)
	movb	$0, (%rax)
	addq	$32, %r13
	leaq	32(%rax), %rcx
	addq	$16, %rax
	cmpq	%r15, %rax
	movq	%rcx, %rax
	je	.LBB73_13
.LBB73_9:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, -16(%r13)
	movq	-16(%rax), %rcx
	cmpq	%rcx, %rax
	jne	.LBB73_11
# %bb.10:                               #   in Loop: Header=BB73_9 Depth=1
	movups	(%rcx), %xmm0
	movups	%xmm0, (%r13)
	jmp	.LBB73_12
.LBB73_13:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	addq	$-16, %r13
.LBB73_14:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	cmpq	%r15, %rbx
	je	.LBB73_15
# %bb.16:                               # %.lr.ph.i.i.i.i19.preheader
	addq	$48, %r13
	addq	$16, %r15
	jmp	.LBB73_17
	.p2align	4, 0x90
.LBB73_19:                              #   in Loop: Header=BB73_17 Depth=1
	movq	%rax, -16(%r13)
	movq	(%r15), %rax
	movq	%rax, (%r13)
.LBB73_20:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i21
                                        #   in Loop: Header=BB73_17 Depth=1
	movq	-8(%r15), %rax
	movq	%rax, -8(%r13)
	movq	%r15, -16(%r15)
	movq	$0, -8(%r15)
	movb	$0, (%r15)
	addq	$32, %r13
	leaq	32(%r15), %rax
	addq	$16, %r15
	cmpq	%rbx, %r15
	movq	%rax, %r15
	je	.LBB73_21
.LBB73_17:                              # %.lr.ph.i.i.i.i19
                                        # =>This Inner Loop Header: Depth=1
	movq	%r13, -16(%r13)
	movq	-16(%r15), %rax
	cmpq	%rax, %r15
	jne	.LBB73_19
# %bb.18:                               #   in Loop: Header=BB73_17 Depth=1
	movups	(%rax), %xmm0
	movups	%xmm0, (%r13)
	jmp	.LBB73_20
.LBB73_21:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit23.loopexit
	addq	$-16, %r13
	testq	%rdi, %rdi
	je	.LBB73_24
.LBB73_23:
	callq	_ZdlPv
.LBB73_24:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	movq	16(%rsp), %rax                  # 8-byte Reload
	movq	%r12, (%rax)
	movq	%r13, 8(%rax)
	shlq	$5, %rbp
	addq	%r12, %rbp
	movq	%rbp, 16(%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB73_15:
	.cfi_def_cfa_offset 80
	addq	$32, %r13
	testq	%rdi, %rdi
	jne	.LBB73_23
	jmp	.LBB73_24
.LBB73_25:
	movl	$.L.str.37, %edi
	callq	_ZSt20__throw_length_errorPKc
.Lfunc_end73:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_, .Lfunc_end73-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"axG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ # -- Begin function _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,@function
_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_: # @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Lfunc_begin34:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception34
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	(%rdi), %rsi
	movq	8(%rdi), %rbp
	movq	%rbp, %rax
	subq	%rsi, %rax
	movabsq	$9223372036854775776, %rcx      # imm = 0x7FFFFFFFFFFFFFE0
	cmpq	%rcx, %rax
	je	.LBB74_34
# %bb.1:                                # %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r13
	sarq	$5, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r14
	movq	%r14, %rdx
	shrq	$58, %rdx
	movabsq	$288230376151711743, %rdx       # imm = 0x3FFFFFFFFFFFFFF
	cmovneq	%rdx, %r14
	addq	%rax, %rcx
	cmovbq	%rdx, %r14
	movq	%r15, %r12
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	subq	%rsi, %r12
	sarq	$5, %r12
	testq	%r14, %r14
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	je	.LBB74_2
# %bb.3:                                # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i
	movq	%r14, %rdi
	shlq	$5, %rdi
	callq	_Znwm
	jmp	.LBB74_4
.LBB74_2:
	xorl	%eax, %eax
.LBB74_4:                               # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
	shlq	$5, %r12
	leaq	(%rax,%r12), %rdx
	leaq	(%rax,%r12), %rbx
	addq	$16, %rbx
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	%rbx, (%rax,%r12)
	movq	(%r13), %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	movq	8(%r13), %r13
	movq	%r13, 16(%rsp)
	cmpq	$16, %r13
	jb	.LBB74_7
# %bb.5:                                # %.noexc6.i.i.i
.Ltmp991:
	leaq	16(%rsp), %rsi
	movq	%rdx, %rdi
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp992:
# %bb.6:                                # %.noexc
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	%rax, (%rdx)
	movq	16(%rsp), %rcx
	movq	%rcx, (%rbx)
	movq	%rax, %rbx
.LBB74_7:                               # %._crit_edge.i.i.i.i.i.i
	testq	%r13, %r13
	je	.LBB74_11
# %bb.8:                                # %._crit_edge.i.i.i.i.i.i
	cmpq	$1, %r13
	jne	.LBB74_10
# %bb.9:
	movq	24(%rsp), %rax                  # 8-byte Reload
	movzbl	(%rax), %eax
	movb	%al, (%rbx)
	jmp	.LBB74_11
.LBB74_10:
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rbx, %rdi
	movq	24(%rsp), %rsi                  # 8-byte Reload
	movq	%r13, %rdx
	callq	memcpy@PLT
	movq	8(%rsp), %rdx                   # 8-byte Reload
.LBB74_11:
	movq	16(%rsp), %rax
	movq	32(%rsp), %rcx                  # 8-byte Reload
	movq	%rax, 8(%rcx,%r12)
	movq	%rcx, %r12
	movq	(%rdx), %rcx
	movb	$0, (%rcx,%rax)
	movq	%r12, %rbx
	movq	40(%rsp), %rdi                  # 8-byte Reload
	cmpq	%r15, %rdi
	je	.LBB74_18
# %bb.12:                               # %.lr.ph.i.i.i.i.preheader
	leaq	16(%r12), %rbx
	leaq	16(%rdi), %rax
	jmp	.LBB74_13
	.p2align	4, 0x90
.LBB74_15:                              #   in Loop: Header=BB74_13 Depth=1
	movq	%rcx, -16(%rbx)
	movq	(%rax), %rcx
	movq	%rcx, (%rbx)
.LBB74_16:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB74_13 Depth=1
	movq	-8(%rax), %rcx
	movq	%rcx, -8(%rbx)
	movq	%rax, -16(%rax)
	movq	$0, -8(%rax)
	movb	$0, (%rax)
	addq	$32, %rbx
	leaq	32(%rax), %rcx
	addq	$16, %rax
	cmpq	%r15, %rax
	movq	%rcx, %rax
	je	.LBB74_17
.LBB74_13:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, -16(%rbx)
	movq	-16(%rax), %rcx
	cmpq	%rcx, %rax
	jne	.LBB74_15
# %bb.14:                               #   in Loop: Header=BB74_13 Depth=1
	movups	(%rcx), %xmm0
	movups	%xmm0, (%rbx)
	jmp	.LBB74_16
.LBB74_17:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit.loopexit
	addq	$-16, %rbx
.LBB74_18:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
	cmpq	%r15, %rbp
	je	.LBB74_19
# %bb.20:                               # %.lr.ph.i.i.i.i29.preheader
	addq	$48, %rbx
	addq	$16, %r15
	jmp	.LBB74_21
	.p2align	4, 0x90
.LBB74_23:                              #   in Loop: Header=BB74_21 Depth=1
	movq	%rax, -16(%rbx)
	movq	(%r15), %rax
	movq	%rax, (%rbx)
.LBB74_24:                              # %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i31
                                        #   in Loop: Header=BB74_21 Depth=1
	movq	-8(%r15), %rax
	movq	%rax, -8(%rbx)
	movq	%r15, -16(%r15)
	movq	$0, -8(%r15)
	movb	$0, (%r15)
	addq	$32, %rbx
	leaq	32(%r15), %rax
	addq	$16, %r15
	cmpq	%rbp, %r15
	movq	%rax, %r15
	je	.LBB74_25
.LBB74_21:                              # %.lr.ph.i.i.i.i29
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, -16(%rbx)
	movq	-16(%r15), %rax
	cmpq	%rax, %r15
	jne	.LBB74_23
# %bb.22:                               #   in Loop: Header=BB74_21 Depth=1
	movups	(%rax), %xmm0
	movups	%xmm0, (%rbx)
	jmp	.LBB74_24
.LBB74_25:                              # %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit33.loopexit
	addq	$-16, %rbx
	testq	%rdi, %rdi
	je	.LBB74_28
.LBB74_27:
	callq	_ZdlPv
.LBB74_28:                              # %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit
	movq	48(%rsp), %rax                  # 8-byte Reload
	movq	%r12, (%rax)
	movq	%rbx, 8(%rax)
	shlq	$5, %r14
	addq	%r12, %r14
	movq	%r14, 16(%rax)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB74_19:
	.cfi_def_cfa_offset 112
	addq	$32, %rbx
	testq	%rdi, %rdi
	jne	.LBB74_27
	jmp	.LBB74_28
.LBB74_34:
	movl	$.L.str.37, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB74_32:
.Ltmp993:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	32(%rsp), %rdi                  # 8-byte Reload
	callq	_ZdlPv
.Ltmp994:
	callq	__cxa_rethrow
.Ltmp995:
# %bb.33:
.LBB74_29:
.Ltmp996:
	movq	%rax, %rbx
.Ltmp997:
	callq	__cxa_end_catch
.Ltmp998:
# %bb.30:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB74_31:
.Ltmp999:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end74:
	.size	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_, .Lfunc_end74-_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,"aG",@progbits,_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table74:
.Lexception34:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase18-.Lttbaseref18
.Lttbaseref18:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end34-.Lcst_begin34
.Lcst_begin34:
	.uleb128 .Lfunc_begin34-.Lfunc_begin34  # >> Call Site 1 <<
	.uleb128 .Ltmp991-.Lfunc_begin34        #   Call between .Lfunc_begin34 and .Ltmp991
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp991-.Lfunc_begin34        # >> Call Site 2 <<
	.uleb128 .Ltmp992-.Ltmp991              #   Call between .Ltmp991 and .Ltmp992
	.uleb128 .Ltmp993-.Lfunc_begin34        #     jumps to .Ltmp993
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp992-.Lfunc_begin34        # >> Call Site 3 <<
	.uleb128 .Ltmp994-.Ltmp992              #   Call between .Ltmp992 and .Ltmp994
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp994-.Lfunc_begin34        # >> Call Site 4 <<
	.uleb128 .Ltmp995-.Ltmp994              #   Call between .Ltmp994 and .Ltmp995
	.uleb128 .Ltmp996-.Lfunc_begin34        #     jumps to .Ltmp996
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp997-.Lfunc_begin34        # >> Call Site 5 <<
	.uleb128 .Ltmp998-.Ltmp997              #   Call between .Ltmp997 and .Ltmp998
	.uleb128 .Ltmp999-.Lfunc_begin34        #     jumps to .Ltmp999
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp998-.Lfunc_begin34        # >> Call Site 6 <<
	.uleb128 .Lfunc_end74-.Ltmp998          #   Call between .Ltmp998 and .Lfunc_end74
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end34:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase18:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_,"axG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_,comdat
	.weak	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_ # -- Begin function _ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_
	.p2align	4, 0x90
	.type	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_,@function
_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_: # @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_
.Lfunc_begin35:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception35
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 16(%rsp)                  # 8-byte Spill
	cmpq	%rsi, %rdi
	je	.LBB75_1
# %bb.2:                                # %.lr.ph.preheader
	movq	%rdi, %r12
	xorl	%r15d, %r15d
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%rdx, %r14
	jmp	.LBB75_3
	.p2align	4, 0x90
.LBB75_8:                               #   in Loop: Header=BB75_3 Depth=1
	movzbl	(%rbp), %ecx
	movb	%cl, (%rax)
.LBB75_10:                              #   in Loop: Header=BB75_3 Depth=1
	movq	(%rsp), %rax
	movq	%rax, 8(%r14)
	movq	(%r14), %rcx
	movb	$0, (%rcx,%rax)
	addq	$32, %r14
	addq	$32, %r15
	addq	$32, %rbx
	cmpq	16(%rsp), %rbx                  # 8-byte Folded Reload
	je	.LBB75_11
.LBB75_3:                               # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	leaq	16(%r14), %rax
	movq	%rax, (%r14)
	movq	(%r12,%r15), %rbp
	movq	8(%r12,%r15), %r13
	movq	%r13, (%rsp)
	cmpq	$16, %r13
	jb	.LBB75_6
# %bb.4:                                # %.noexc6.i.i
                                        #   in Loop: Header=BB75_3 Depth=1
.Ltmp1000:
	movq	%r14, %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1001:
# %bb.5:                                # %.noexc
                                        #   in Loop: Header=BB75_3 Depth=1
	movq	%rax, (%r14)
	movq	(%rsp), %rcx
	movq	%rcx, 16(%r14)
.LBB75_6:                               # %._crit_edge.i.i.i.i.i
                                        #   in Loop: Header=BB75_3 Depth=1
	leaq	(%r12,%r15), %rbx
	testq	%r13, %r13
	je	.LBB75_10
# %bb.7:                                # %._crit_edge.i.i.i.i.i
                                        #   in Loop: Header=BB75_3 Depth=1
	cmpq	$1, %r13
	je	.LBB75_8
# %bb.9:                                #   in Loop: Header=BB75_3 Depth=1
	movq	%rax, %rdi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	memcpy@PLT
	jmp	.LBB75_10
.LBB75_1:
	movq	%rdx, %r14
.LBB75_11:                              # %._crit_edge
	movq	%r14, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB75_12:
	.cfi_def_cfa_offset 80
.Ltmp1002:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	testq	%r15, %r15
	movq	8(%rsp), %rbx                   # 8-byte Reload
	jne	.LBB75_13
.LBB75_16:                              # %_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_.exit
.Ltmp1003:
	callq	__cxa_rethrow
.Ltmp1004:
# %bb.20:
	.p2align	4, 0x90
.LBB75_15:                              # %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB75_13 Depth=1
	addq	$16, %rbx
	cmpq	%rbx, %r14
	je	.LBB75_16
.LBB75_13:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	addq	$16, %rbx
	cmpq	%rbx, %rdi
	je	.LBB75_15
# %bb.14:                               #   in Loop: Header=BB75_13 Depth=1
	callq	_ZdlPv
	jmp	.LBB75_15
.LBB75_17:
.Ltmp1005:
	movq	%rax, %rbx
.Ltmp1006:
	callq	__cxa_end_catch
.Ltmp1007:
# %bb.18:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB75_19:
.Ltmp1008:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end75:
	.size	_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_, .Lfunc_end75-_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_,"aG",@progbits,_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEESA_EET0_T_SG_SF_,comdat
	.p2align	2, 0x0
GCC_except_table75:
.Lexception35:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase19-.Lttbaseref19
.Lttbaseref19:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end35-.Lcst_begin35
.Lcst_begin35:
	.uleb128 .Ltmp1000-.Lfunc_begin35       # >> Call Site 1 <<
	.uleb128 .Ltmp1001-.Ltmp1000            #   Call between .Ltmp1000 and .Ltmp1001
	.uleb128 .Ltmp1002-.Lfunc_begin35       #     jumps to .Ltmp1002
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1001-.Lfunc_begin35       # >> Call Site 2 <<
	.uleb128 .Ltmp1003-.Ltmp1001            #   Call between .Ltmp1001 and .Ltmp1003
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1003-.Lfunc_begin35       # >> Call Site 3 <<
	.uleb128 .Ltmp1004-.Ltmp1003            #   Call between .Ltmp1003 and .Ltmp1004
	.uleb128 .Ltmp1005-.Lfunc_begin35       #     jumps to .Ltmp1005
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1006-.Lfunc_begin35       # >> Call Site 4 <<
	.uleb128 .Ltmp1007-.Ltmp1006            #   Call between .Ltmp1006 and .Ltmp1007
	.uleb128 .Ltmp1008-.Lfunc_begin35       #     jumps to .Ltmp1008
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1007-.Lfunc_begin35       # >> Call Site 5 <<
	.uleb128 .Lfunc_end75-.Ltmp1007         #   Call between .Ltmp1007 and .Lfunc_end75
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end35:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase19:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_
.Lfunc_begin36:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception36
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r15
	movq	%rsi, %r12
	movq	%rdi, %r14
	movl	$56, %edi
	callq	_Znwm
	movq	%rax, %rbx
	leaq	32(%rax), %r13
	movq	(%r15), %rax
	movups	(%rax), %xmm0
	movups	%xmm0, 32(%rbx)
	movb	$0, 48(%rbx)
.Ltmp1009:
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r13, %rdx
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_
.Ltmp1010:
# %bb.1:
	movq	%rax, %rbp
	movq	%rdx, %r15
	testq	%rdx, %rdx
	je	.LBB76_9
# %bb.2:
	leaq	8(%r14), %r12
	movb	$1, %al
	testq	%rbp, %rbp
	jne	.LBB76_8
# %bb.3:
	cmpq	%r15, %r12
	je	.LBB76_8
# %bb.4:
	movq	(%r13), %rax
	movq	32(%r15), %rdx
	movq	%rax, %r13
	subq	%rdx, %r13
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB76_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	movq	40(%r15), %rsi
	movq	40(%rbx), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB76_7
.LBB76_6:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
	cmpq	$-2147483647, %r13              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r13, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB76_7:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i
	shrl	$31, %eax
.LBB76_8:
	movzbl	%al, %edi
	movq	%rbx, %rsi
	movq	%r15, %rdx
	movq	%r12, %rcx
	callq	_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_
	incq	40(%r14)
	jmp	.LBB76_10
.LBB76_9:
	movq	%rbx, %rdi
	callq	_ZdlPv
	movq	%rbp, %rbx
.LBB76_10:
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB76_14:
	.cfi_def_cfa_offset 64
.Ltmp1011:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	%rbx, %rdi
	callq	_ZdlPv
.Ltmp1012:
	callq	__cxa_rethrow
.Ltmp1013:
# %bb.15:
.LBB76_11:
.Ltmp1014:
	movq	%rax, %rbx
.Ltmp1015:
	callq	__cxa_end_catch
.Ltmp1016:
# %bb.12:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB76_13:
.Ltmp1017:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end76:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_, .Lfunc_end76-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_,"aG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS5_EESH_IJEEEEESt17_Rb_tree_iteratorIS6_ESt23_Rb_tree_const_iteratorIS6_EDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table76:
.Lexception36:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase20-.Lttbaseref20
.Lttbaseref20:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end36-.Lcst_begin36
.Lcst_begin36:
	.uleb128 .Lfunc_begin36-.Lfunc_begin36  # >> Call Site 1 <<
	.uleb128 .Ltmp1009-.Lfunc_begin36       #   Call between .Lfunc_begin36 and .Ltmp1009
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1009-.Lfunc_begin36       # >> Call Site 2 <<
	.uleb128 .Ltmp1010-.Ltmp1009            #   Call between .Ltmp1009 and .Ltmp1010
	.uleb128 .Ltmp1011-.Lfunc_begin36       #     jumps to .Ltmp1011
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1010-.Lfunc_begin36       # >> Call Site 3 <<
	.uleb128 .Ltmp1012-.Ltmp1010            #   Call between .Ltmp1010 and .Ltmp1012
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1012-.Lfunc_begin36       # >> Call Site 4 <<
	.uleb128 .Ltmp1013-.Ltmp1012            #   Call between .Ltmp1012 and .Ltmp1013
	.uleb128 .Ltmp1014-.Lfunc_begin36       #     jumps to .Ltmp1014
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1015-.Lfunc_begin36       # >> Call Site 5 <<
	.uleb128 .Ltmp1016-.Ltmp1015            #   Call between .Ltmp1015 and .Ltmp1016
	.uleb128 .Ltmp1017-.Lfunc_begin36       #     jumps to .Ltmp1017
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1016-.Lfunc_begin36       # >> Call Site 6 <<
	.uleb128 .Lfunc_end76-.Ltmp1016         #   Call between .Ltmp1016 and .Lfunc_end76
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end36:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase20:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbp
	movq	%rdi, %r15
	leaq	8(%rdi), %rax
	cmpq	%rsi, %rax
	je	.LBB77_4
# %bb.1:
	movq	%rsi, %rbx
	movq	%r15, (%rsp)                    # 8-byte Spill
	movq	(%rbp), %r14
	movq	32(%rsi), %r15
	movq	%r14, %r12
	subq	%r15, %r12
	movq	%r15, %r13
	cmovbq	%r14, %r13
	testq	%r13, %r13
	movq	%rbp, 8(%rsp)                   # 8-byte Spill
	je	.LBB77_10
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i17
	movq	%rbp, %rax
	movq	40(%rbx), %rbp
	movq	8(%rax), %rdi
	movq	%rdi, 16(%rsp)                  # 8-byte Spill
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	memcmp
	testl	%eax, %eax
	je	.LBB77_11
# %bb.3:                                # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23.thread
	js	.LBB77_12
	jmp	.LBB77_18
.LBB77_4:
	cmpq	$0, 40(%r15)
	je	.LBB77_9
# %bb.5:
	movq	32(%r15), %rbx
	movq	32(%rbx), %rax
	movq	(%rbp), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB77_7
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	movq	8(%rbp), %rsi
	movq	40(%rbx), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB77_8
.LBB77_7:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r14, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB77_8:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
	testl	%eax, %eax
	js	.LBB77_30
.LBB77_9:
	movq	%r15, %rdi
	movq	%rbp, %rsi
	jmp	.LBB77_28
.LBB77_10:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovgeq	%r12, %rax
	cmpq	$2147483647, %rax               # imm = 0x7FFFFFFF
	movl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	cmovlq	%rax, %rcx
	testl	%ecx, %ecx
	js	.LBB77_12
	jmp	.LBB77_21
.LBB77_11:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit23.thread88
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovgeq	%r12, %rax
	cmpq	$2147483647, %rax               # imm = 0x7FFFFFFF
	movl	$2147483647, %ecx               # imm = 0x7FFFFFFF
	cmovlq	%rax, %rcx
	testl	%ecx, %ecx
	jns	.LBB77_18
.LBB77_12:
	movq	(%rsp), %rax                    # 8-byte Reload
	cmpq	%rbx, 24(%rax)
	je	.LBB77_29
# %bb.13:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	movq	%rax, %r13
	movq	32(%rax), %rax
	movq	%rax, %r15
	subq	%r14, %r15
	cmovbq	%rax, %r14
	testq	%r14, %r14
	movq	8(%rsp), %r12                   # 8-byte Reload
	je	.LBB77_15
# %bb.14:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i31
	movq	8(%r12), %rsi
	movq	40(%r13), %rdi
	movq	%r14, %rdx
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB77_16
.LBB77_15:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i35
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB77_16:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit37
	testl	%eax, %eax
	js	.LBB77_31
# %bb.17:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r12, %rsi
	jmp	.LBB77_28
.LBB77_18:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i45
	movq	%rbp, %rdi
	movq	16(%rsp), %rsi                  # 8-byte Reload
	movq	%r13, %rdx
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	je	.LBB77_21
# %bb.19:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit51
	testl	%eax, %eax
	js	.LBB77_22
.LBB77_20:
	movq	%rbx, %rax
	xorl	%ebx, %ebx
	jmp	.LBB77_34
.LBB77_21:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i49
	subq	%r14, %r15
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
	testl	%eax, %eax
	jns	.LBB77_20
.LBB77_22:
	movq	(%rsp), %rax                    # 8-byte Reload
	cmpq	%rbx, 32(%rax)
	je	.LBB77_30
# %bb.23:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base
	movq	%rax, %r13
	movq	32(%rax), %rdx
	movq	%r14, %r15
	subq	%rdx, %r15
	cmovbq	%r14, %rdx
	testq	%rdx, %rdx
	movq	8(%rsp), %r14                   # 8-byte Reload
	je	.LBB77_25
# %bb.24:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i59
	movq	40(%r13), %rsi
	movq	8(%r14), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB77_26
.LBB77_25:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i63
	cmpq	$-2147483647, %r15              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r15, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB77_26:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit65
	testl	%eax, %eax
	js	.LBB77_33
# %bb.27:
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r14, %rsi
.LBB77_28:
	callq	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_
	movq	%rdx, %rbx
	jmp	.LBB77_34
.LBB77_30:
	xorl	%eax, %eax
	jmp	.LBB77_34
.LBB77_29:
	movq	%rbx, %rax
	jmp	.LBB77_34
.LBB77_31:
	movq	24(%r13), %rax
	testq	%rax, %rax
	cmovneq	%rbx, %rax
	cmoveq	%r13, %rbx
	jmp	.LBB77_34
.LBB77_33:
	movq	24(%rbx), %rax
	testq	%rax, %rax
	cmovneq	%r13, %rax
	cmovneq	%r13, %rbx
.LBB77_34:
	movq	%rbx, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end77:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_, .Lfunc_end77-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_,"axG",@progbits,_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_,comdat
	.weak	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_ # -- Begin function _ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_
	.p2align	4, 0x90
	.type	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_,@function
_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_: # @_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r13
	movq	16(%rdi), %rcx
	testq	%rcx, %rcx
	je	.LBB78_1
# %bb.2:                                # %.lr.ph
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	movq	(%r13), %r15
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	movq	8(%r13), %r12
	movq	$-2147483648, %rbp              # imm = 0x80000000
	movl	$2147483647, %r14d              # imm = 0x7FFFFFFF
	jmp	.LBB78_3
	.p2align	4, 0x90
.LBB78_5:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i
                                        #   in Loop: Header=BB78_3 Depth=1
	cmpq	$-2147483647, %r13              # imm = 0x80000001
	cmovlq	%rbp, %r13
	cmpq	$2147483647, %r13               # imm = 0x7FFFFFFF
	cmovgeq	%r14, %r13
	movl	%r13d, %eax
.LBB78_6:                               # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit
                                        #   in Loop: Header=BB78_3 Depth=1
	xorl	%ecx, %ecx
	testl	%eax, %eax
	setns	%cl
	movq	16(%rbx,%rcx,8), %rcx
	testq	%rcx, %rcx
	je	.LBB78_7
.LBB78_3:                               # =>This Inner Loop Header: Depth=1
	movq	%rcx, %rbx
	movq	32(%rcx), %rdx
	movq	%r15, %r13
	subq	%rdx, %r13
	cmovbq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB78_5
# %bb.4:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
                                        #   in Loop: Header=BB78_3 Depth=1
	movq	40(%rbx), %rsi
	movq	%r12, %rdi
	callq	memcmp
	testl	%eax, %eax
	jne	.LBB78_6
	jmp	.LBB78_5
.LBB78_7:                               # %._crit_edge
	movq	%rbx, %r12
	testl	%eax, %eax
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	8(%rsp), %rdi                   # 8-byte Reload
	jns	.LBB78_11
# %bb.8:                                # %._crit_edge.thread
	cmpq	24(%rdi), %rbx
	je	.LBB78_9
.LBB78_10:
	movq	%rbx, %rdi
	callq	_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base
	movq	%rax, %r12
.LBB78_11:
	movq	32(%r12), %rax
	movq	(%r13), %rdx
	movq	%rax, %r14
	subq	%rdx, %r14
	cmovbq	%rax, %rdx
	testq	%rdx, %rdx
	je	.LBB78_13
# %bb.12:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i12
	movq	8(%r13), %rsi
	movq	40(%r12), %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB78_14
.LBB78_13:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i16
	cmpq	$-2147483647, %r14              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r14, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB78_14:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit18
	xorl	%ecx, %ecx
	testl	%eax, %eax
	cmovsq	%rcx, %r12
	cmovnsq	%rcx, %rbx
	jmp	.LBB78_15
.LBB78_1:
	leaq	8(%rdi), %rbx
	cmpq	24(%rdi), %rbx
	jne	.LBB78_10
.LBB78_9:
	xorl	%r12d, %r12d
.LBB78_15:
	movq	%r12, %rax
	movq	%rbx, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end78:
	.size	_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_, .Lfunc_end78-_ZNSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_bESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE24_M_get_insert_unique_posERS5_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_,"axG",@progbits,_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_,comdat
	.weak	_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_ # -- Begin function _ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_
	.p2align	4, 0x90
	.type	_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_,@function
_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_: # @_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_
.Lfunc_begin37:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception37
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	(%rsi), %r13
	leaq	1(%r13), %rbp
	movq	%rbp, %rax
	shrq	$60, %rax
	jne	.LBB79_41
# %bb.1:                                # %_ZNSt6vectorImSaImEE17_S_check_init_lenEmRKS0_.exit.i
	movq	%rsi, %rbx
	movq	%rdi, %r14
	movq	(%rdi), %r12
	testq	%rbp, %rbp
	je	.LBB79_2
# %bb.3:                                # %_ZNSt12_Vector_baseImSaImEEC2EmRKS0_.exit.i
	leaq	(,%rbp,8), %rdi
	callq	_Znwm
	movq	%rax, %r15
	movq	%rax, (%rsp)
	leaq	(%rax,%rbp,8), %rax
	movq	%rax, 16(%rsp)
	leaq	8(,%r13,8), %rdx
	movq	%r15, %rdi
	xorl	%esi, %esi
	callq	memset@PLT
	leaq	(%r15,%r13,8), %rax
	addq	$8, %rax
	jmp	.LBB79_4
.LBB79_2:                               # %_ZNSt12_Vector_baseImSaImEEC2EmRKS0_.exit.thread.i
	xorps	%xmm0, %xmm0
	movaps	%xmm0, (%rsp)
	movq	$0, 16(%rsp)
	xorl	%eax, %eax
.LBB79_4:                               # %.loopexit
	movq	%rax, 8(%rsp)
	incq	%r12
	movabsq	$384307168202282326, %rax       # imm = 0x555555555555556
	cmpq	%rax, %r12
	jae	.LBB79_5
# %bb.7:                                # %_ZNSt6vectorIS_ImSaImEESaIS1_EE17_S_check_init_lenEmRKS2_.exit.i
	testq	%r12, %r12
	je	.LBB79_8
# %bb.9:                                # %_ZNSt16allocator_traitsISaISt6vectorImSaImEEEE8allocateERS3_m.exit.i.i.i.i
	leaq	(,%r12,8), %rax
	leaq	(%rax,%rax,2), %rdi
.Ltmp1018:
	callq	_Znwm
.Ltmp1019:
# %bb.10:
	movq	%rax, %r15
	jmp	.LBB79_11
.LBB79_8:
	xorl	%r15d, %r15d
.LBB79_11:                              # %_ZNSt12_Vector_baseISt6vectorImSaImEESaIS2_EEC2EmRKS3_.exit.i
.Ltmp1020:
	movq	%rsp, %rdx
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_
.Ltmp1021:
# %bb.12:
	movq	%rax, %r12
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB79_14
# %bb.13:
	callq	_ZdlPv
.LBB79_14:                              # %_ZNSt6vectorImSaImEED2Ev.exit
	xorl	%eax, %eax
	jmp	.LBB79_15
	.p2align	4, 0x90
.LBB79_40:                              # %.split.us
                                        #   in Loop: Header=BB79_15 Depth=1
	incq	%rax
	movq	(%r14), %rcx
	cmpq	%rcx, %rax
	ja	.LBB79_23
.LBB79_15:                              # %.preheader
                                        # =>This Loop Header: Depth=1
                                        #     Child Loop BB79_17 Depth 2
                                        #     Child Loop BB79_22 Depth 2
	movq	%rax, %rcx
	subq	$1, %rcx
	jae	.LBB79_16
# %bb.21:                               # %.preheader.split.us
                                        #   in Loop: Header=BB79_15 Depth=1
	movq	(%r15), %rcx
	xorl	%edx, %edx
	.p2align	4, 0x90
.LBB79_22:                              #   Parent Loop BB79_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%rdx, (%rcx,%rdx,8)
	incq	%rdx
	movq	(%rbx), %r10
	cmpq	%r10, %rdx
	jbe	.LBB79_22
	jmp	.LBB79_40
	.p2align	4, 0x90
.LBB79_16:                              # %.preheader.split.preheader
                                        #   in Loop: Header=BB79_15 Depth=1
	movq	8(%r14), %rdx
	movq	8(%rbx), %rsi
	leaq	(%rcx,%rcx,2), %rdi
	leaq	(%r15,%rdi,8), %rdi
	leaq	(%rax,%rax,2), %r8
	leaq	(%r15,%r8,8), %r8
	xorl	%r9d, %r9d
	jmp	.LBB79_17
	.p2align	4, 0x90
.LBB79_18:                              #   in Loop: Header=BB79_17 Depth=2
	movq	(%r8), %r10
	movq	%rax, (%r10)
	incq	%r9
	movq	(%rbx), %r10
	cmpq	%r10, %r9
	ja	.LBB79_40
.LBB79_17:                              # %.preheader.split
                                        #   Parent Loop BB79_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	testq	%r9, %r9
	je	.LBB79_18
# %bb.35:                               #   in Loop: Header=BB79_17 Depth=2
	movzbl	(%rdx,%rcx), %ebp
	movq	(%rdi), %r11
	movq	(%r8), %r10
	cmpb	-1(%rsi,%r9), %bpl
	jne	.LBB79_37
# %bb.36:                               #   in Loop: Header=BB79_17 Depth=2
	movq	-8(%r11,%r9,8), %r11
	jmp	.LBB79_38
	.p2align	4, 0x90
.LBB79_37:                              # %.lr.ph.i.i.i
                                        #   in Loop: Header=BB79_17 Depth=2
	movq	-8(%r11,%r9,8), %r13
	movq	(%r11,%r9,8), %r11
	movq	-8(%r10,%r9,8), %rbp
	cmpq	%r11, %rbp
	cmovbq	%rbp, %r11
	cmpq	%r11, %r13
	cmovbq	%r13, %r11
	incq	%r11
.LBB79_38:                              #   in Loop: Header=BB79_17 Depth=2
	movq	%r11, (%r10,%r9,8)
	incq	%r9
	movq	(%rbx), %r10
	cmpq	%r10, %r9
	jbe	.LBB79_17
	jmp	.LBB79_40
.LBB79_23:
	leaq	(%rcx,%rcx,2), %rax
	movq	(%r15,%rax,8), %rax
	movq	(%rax,%r10,8), %rbx
	cmpq	%r12, %r15
	je	.LBB79_29
# %bb.24:                               # %.lr.ph.i.i.i.i.preheader
	movq	%r15, %r14
	jmp	.LBB79_25
	.p2align	4, 0x90
.LBB79_27:                              # %_ZSt8_DestroyISt6vectorImSaImEEEvPT_.exit.i.i.i.i
                                        #   in Loop: Header=BB79_25 Depth=1
	addq	$24, %r14
	cmpq	%r12, %r14
	je	.LBB79_28
.LBB79_25:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%r14), %rdi
	testq	%rdi, %rdi
	je	.LBB79_27
# %bb.26:                               #   in Loop: Header=BB79_25 Depth=1
	callq	_ZdlPv
	jmp	.LBB79_27
.LBB79_28:                              # %_ZSt8_DestroyIPSt6vectorImSaImEES2_EvT_S4_RSaIT0_E.exit.i
	testq	%r15, %r15
	je	.LBB79_30
.LBB79_29:                              # %_ZSt8_DestroyIPSt6vectorImSaImEES2_EvT_S4_RSaIT0_E.exit.i.thread
	movq	%r15, %rdi
	callq	_ZdlPv
.LBB79_30:                              # %_ZNSt6vectorIS_ImSaImEESaIS1_EED2Ev.exit
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB79_41:                              # %.noexc
	.cfi_def_cfa_offset 80
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB79_5:
.Ltmp1023:
	movl	$.L.str.59, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp1024:
# %bb.6:                                # %.noexc45
.LBB79_19:
.Ltmp1022:
	movq	%rax, %rbx
	testq	%r15, %r15
	jne	.LBB79_20
# %bb.32:                               # %.body
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	jne	.LBB79_33
.LBB79_34:                              # %_ZNSt6vectorImSaImEED2Ev.exit52
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB79_20:
	movq	%r15, %rdi
	callq	_ZdlPv
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB79_34
	jmp	.LBB79_33
.LBB79_31:
.Ltmp1025:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	testq	%rdi, %rdi
	je	.LBB79_34
.LBB79_33:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end79:
	.size	_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_, .Lfunc_end79-_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_,"aG",@progbits,_ZN8argparse7details24get_levenshtein_distanceISt17basic_string_viewIcSt11char_traitsIcEEEEmRKT_S8_,comdat
	.p2align	2, 0x0
GCC_except_table79:
.Lexception37:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end37-.Lcst_begin37
.Lcst_begin37:
	.uleb128 .Lfunc_begin37-.Lfunc_begin37  # >> Call Site 1 <<
	.uleb128 .Ltmp1018-.Lfunc_begin37       #   Call between .Lfunc_begin37 and .Ltmp1018
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1018-.Lfunc_begin37       # >> Call Site 2 <<
	.uleb128 .Ltmp1019-.Ltmp1018            #   Call between .Ltmp1018 and .Ltmp1019
	.uleb128 .Ltmp1025-.Lfunc_begin37       #     jumps to .Ltmp1025
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1020-.Lfunc_begin37       # >> Call Site 3 <<
	.uleb128 .Ltmp1021-.Ltmp1020            #   Call between .Ltmp1020 and .Ltmp1021
	.uleb128 .Ltmp1022-.Lfunc_begin37       #     jumps to .Ltmp1022
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1021-.Lfunc_begin37       # >> Call Site 4 <<
	.uleb128 .Ltmp1023-.Ltmp1021            #   Call between .Ltmp1021 and .Ltmp1023
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1023-.Lfunc_begin37       # >> Call Site 5 <<
	.uleb128 .Ltmp1024-.Ltmp1023            #   Call between .Ltmp1023 and .Ltmp1024
	.uleb128 .Ltmp1025-.Lfunc_begin37       #     jumps to .Ltmp1025
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1024-.Lfunc_begin37       # >> Call Site 6 <<
	.uleb128 .Lfunc_end79-.Ltmp1024         #   Call between .Ltmp1024 and .Lfunc_end79
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end37:
	.p2align	2, 0x0
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4, 0x0                          # -- Begin function _ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_
.LCPI80_0:
	.zero	16
	.section	.text._ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_,"axG",@progbits,_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_,comdat
	.weak	_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_
	.p2align	4, 0x90
	.type	_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_,@function
_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_: # @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_
.Lfunc_begin38:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception38
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	testq	%rsi, %rsi
	je	.LBB80_13
# %bb.1:                                # %.lr.ph
	movq	%rsi, %r15
	movq	(%rdx), %r12
	xorl	%r14d, %r14d
	movq	%rdx, (%rsp)                    # 8-byte Spill
	jmp	.LBB80_2
	.p2align	4, 0x90
.LBB80_11:                              #   in Loop: Header=BB80_2 Depth=1
	addq	%rbp, %r13
	movq	%r13, 8(%rbx,%r14)
	addq	$24, %r14
	decq	%r15
	movq	(%rsp), %rdx                    # 8-byte Reload
	je	.LBB80_12
.LBB80_2:                               # =>This Inner Loop Header: Depth=1
	movq	8(%rdx), %rdi
	movq	%rdi, %rbp
	subq	%r12, %rbp
	xorps	%xmm0, %xmm0
	movups	%xmm0, (%rbx,%r14)
	movq	$0, 16(%rbx,%r14)
	subq	%r12, %rdi
	je	.LBB80_3
# %bb.4:                                #   in Loop: Header=BB80_2 Depth=1
	movabsq	$9223372036854775801, %rax      # imm = 0x7FFFFFFFFFFFFFF9
	cmpq	%rax, %rdi
	jae	.LBB80_5
# %bb.7:                                # %_ZNSt16allocator_traitsISaImEE8allocateERS0_m.exit.i.i.i.i.i
                                        #   in Loop: Header=BB80_2 Depth=1
.Ltmp1026:
	callq	_Znwm
.Ltmp1027:
# %bb.8:                                #   in Loop: Header=BB80_2 Depth=1
	movq	%rax, %r13
	jmp	.LBB80_9
	.p2align	4, 0x90
.LBB80_3:                               #   in Loop: Header=BB80_2 Depth=1
	xorl	%r13d, %r13d
.LBB80_9:                               # %.noexc12
                                        #   in Loop: Header=BB80_2 Depth=1
	sarq	$3, %rbp
	movq	%r13, (%rbx,%r14)
	movq	%r13, 8(%rbx,%r14)
	leaq	(,%rbp,8), %rax
	addq	%r13, %rax
	movq	%rax, 16(%rbx,%r14)
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %r12
	movq	8(%rax), %rbp
	subq	%r12, %rbp
	je	.LBB80_11
# %bb.10:                               #   in Loop: Header=BB80_2 Depth=1
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	memmove@PLT
	jmp	.LBB80_11
.LBB80_12:                              # %._crit_edge.loopexit
	addq	%r14, %rbx
.LBB80_13:                              # %._crit_edge
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB80_5:                               # %.noexc.i.i.i
	.cfi_def_cfa_offset 64
.Ltmp1029:
	callq	_ZSt17__throw_bad_allocv
.Ltmp1030:
# %bb.6:                                # %.noexc
.LBB80_14:                              # %.loopexit
.Ltmp1028:
	jmp	.LBB80_16
.LBB80_15:                              # %.loopexit.split-lp
.Ltmp1031:
.LBB80_16:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	testq	%r14, %r14
	jne	.LBB80_17
.LBB80_20:                              # %_ZSt8_DestroyIPSt6vectorImSaImEEEvT_S4_.exit
.Ltmp1032:
	callq	__cxa_rethrow
.Ltmp1033:
# %bb.24:
	.p2align	4, 0x90
.LBB80_19:                              # %_ZSt8_DestroyISt6vectorImSaImEEEvPT_.exit.i.i
                                        #   in Loop: Header=BB80_17 Depth=1
	addq	$24, %rbx
	addq	$-24, %r14
	je	.LBB80_20
.LBB80_17:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rdi
	testq	%rdi, %rdi
	je	.LBB80_19
# %bb.18:                               #   in Loop: Header=BB80_17 Depth=1
	callq	_ZdlPv
	jmp	.LBB80_19
.LBB80_21:
.Ltmp1034:
	movq	%rax, %rbx
.Ltmp1035:
	callq	__cxa_end_catch
.Ltmp1036:
# %bb.22:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB80_23:
.Ltmp1037:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end80:
	.size	_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_, .Lfunc_end80-_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_,"aG",@progbits,_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorImSaImEEmS4_EET_S6_T0_RKT1_,comdat
	.p2align	2, 0x0
GCC_except_table80:
.Lexception38:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase21-.Lttbaseref21
.Lttbaseref21:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end38-.Lcst_begin38
.Lcst_begin38:
	.uleb128 .Ltmp1026-.Lfunc_begin38       # >> Call Site 1 <<
	.uleb128 .Ltmp1027-.Ltmp1026            #   Call between .Ltmp1026 and .Ltmp1027
	.uleb128 .Ltmp1028-.Lfunc_begin38       #     jumps to .Ltmp1028
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1027-.Lfunc_begin38       # >> Call Site 2 <<
	.uleb128 .Ltmp1029-.Ltmp1027            #   Call between .Ltmp1027 and .Ltmp1029
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1029-.Lfunc_begin38       # >> Call Site 3 <<
	.uleb128 .Ltmp1030-.Ltmp1029            #   Call between .Ltmp1029 and .Ltmp1030
	.uleb128 .Ltmp1031-.Lfunc_begin38       #     jumps to .Ltmp1031
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1030-.Lfunc_begin38       # >> Call Site 4 <<
	.uleb128 .Ltmp1032-.Ltmp1030            #   Call between .Ltmp1030 and .Ltmp1032
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1032-.Lfunc_begin38       # >> Call Site 5 <<
	.uleb128 .Ltmp1033-.Ltmp1032            #   Call between .Ltmp1032 and .Ltmp1033
	.uleb128 .Ltmp1034-.Lfunc_begin38       #     jumps to .Ltmp1034
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1035-.Lfunc_begin38       # >> Call Site 6 <<
	.uleb128 .Ltmp1036-.Ltmp1035            #   Call between .Ltmp1035 and .Ltmp1036
	.uleb128 .Ltmp1037-.Lfunc_begin38       #     jumps to .Ltmp1037
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1036-.Lfunc_begin38       # >> Call Site 7 <<
	.uleb128 .Lfunc_end80-.Ltmp1036         #   Call between .Ltmp1036 and .Lfunc_end80
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end38:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase21:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_,"axG",@progbits,_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_,comdat
	.weak	_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ # -- Begin function _ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_,@function
_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_: # @_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_
.Lfunc_begin39:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception39
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$272, %rsp                      # imm = 0x110
	.cfi_def_cfa_offset 304
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	cmpb	$0, 232(%rdi)
	je	.LBB81_40
# %bb.1:                                # %_ZNKRSt8optionalISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEE5valueEv.exit
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	208(%rdi), %rdi
	movq	216(%rbx), %rsi
	movq	%r14, %rdx
	callq	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag
	cmpq	216(%rbx), %rax
	je	.LBB81_2
# %bb.38:
	addq	$272, %rsp                      # imm = 0x110
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB81_40:
	.cfi_def_cfa_offset 304
	callq	_ZSt27__throw_bad_optional_accessv
.LBB81_2:
	movq	208(%rbx), %rsi
	leaq	32(%rsp), %rbx
	movq	%rbx, 16(%rsp)
	movq	$0, 24(%rsp)
	movb	$0, 32(%rsp)
.Ltmp1038:
	leaq	240(%rsp), %rdi
	leaq	16(%rsp), %rcx
	movq	%rax, %rdx
	callq	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_
.Ltmp1039:
# %bb.3:
	movq	16(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB81_5
# %bb.4:
	callq	_ZdlPv
.LBB81_5:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1041:
	leaq	48(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movl	$.L.str.64, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
.Ltmp1042:
# %bb.6:
.Ltmp1044:
	leaq	80(%rsp), %rdi
	movq	%r14, %rsi
	callq	_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_
.Ltmp1045:
# %bb.7:
.Ltmp1047:
	leaq	112(%rsp), %rdi
	leaq	48(%rsp), %rsi
	leaq	80(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_
.Ltmp1048:
# %bb.8:
.Ltmp1050:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	movl	$.L.str.65, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1051:
# %bb.9:
.Ltmp1053:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	leaq	240(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
.Ltmp1054:
# %bb.10:
.Ltmp1056:
	leaq	208(%rsp), %rdi
	leaq	176(%rsp), %rsi
	movl	$.L.str.66, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1057:
# %bb.11:
	movb	$1, %bpl
.Ltmp1059:
	leaq	208(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1060:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp1061:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1062:
# %bb.39:
.LBB81_19:
.Ltmp1063:
	movq	%rax, %r14
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_20
# %bb.21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_22
.LBB81_23:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_24
.LBB81_25:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit35
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_26
.LBB81_27:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit36
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_28
.LBB81_29:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_30
.LBB81_31:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	testb	%bpl, %bpl
	jne	.LBB81_34
.LBB81_35:
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_36
	jmp	.LBB81_37
.LBB81_20:
	callq	_ZdlPv
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_23
	jmp	.LBB81_22
.LBB81_18:
.Ltmp1058:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_23
.LBB81_22:
	callq	_ZdlPv
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_25
	jmp	.LBB81_24
.LBB81_17:
.Ltmp1055:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_25
.LBB81_24:
	callq	_ZdlPv
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_27
	jmp	.LBB81_26
.LBB81_16:
.Ltmp1052:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_27
.LBB81_26:
	callq	_ZdlPv
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_29
	jmp	.LBB81_28
.LBB81_15:
.Ltmp1049:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_29
.LBB81_28:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_31
.LBB81_30:
	callq	_ZdlPv
	testb	%bpl, %bpl
	je	.LBB81_35
	jmp	.LBB81_34
.LBB81_32:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit37.thread
.Ltmp1046:
	movq	%rax, %r14
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB81_34
# %bb.33:                               # %.thread
	callq	_ZdlPv
	jmp	.LBB81_34
.LBB81_14:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38.thread
.Ltmp1043:
	movq	%rax, %r14
.LBB81_34:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	240(%rsp), %rdi
	leaq	256(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB81_36
	jmp	.LBB81_37
.LBB81_13:
.Ltmp1040:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB81_37
.LBB81_36:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32.sink.split
	callq	_ZdlPv
.LBB81_37:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end81:
	.size	_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_, .Lfunc_end81-_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_,"aG",@progbits,_ZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_,comdat
	.p2align	2, 0x0
GCC_except_table81:
.Lexception39:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end39-.Lcst_begin39
.Lcst_begin39:
	.uleb128 .Lfunc_begin39-.Lfunc_begin39  # >> Call Site 1 <<
	.uleb128 .Ltmp1038-.Lfunc_begin39       #   Call between .Lfunc_begin39 and .Ltmp1038
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1038-.Lfunc_begin39       # >> Call Site 2 <<
	.uleb128 .Ltmp1039-.Ltmp1038            #   Call between .Ltmp1038 and .Ltmp1039
	.uleb128 .Ltmp1040-.Lfunc_begin39       #     jumps to .Ltmp1040
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1039-.Lfunc_begin39       # >> Call Site 3 <<
	.uleb128 .Ltmp1041-.Ltmp1039            #   Call between .Ltmp1039 and .Ltmp1041
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1041-.Lfunc_begin39       # >> Call Site 4 <<
	.uleb128 .Ltmp1042-.Ltmp1041            #   Call between .Ltmp1041 and .Ltmp1042
	.uleb128 .Ltmp1043-.Lfunc_begin39       #     jumps to .Ltmp1043
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1044-.Lfunc_begin39       # >> Call Site 5 <<
	.uleb128 .Ltmp1045-.Ltmp1044            #   Call between .Ltmp1044 and .Ltmp1045
	.uleb128 .Ltmp1046-.Lfunc_begin39       #     jumps to .Ltmp1046
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1047-.Lfunc_begin39       # >> Call Site 6 <<
	.uleb128 .Ltmp1048-.Ltmp1047            #   Call between .Ltmp1047 and .Ltmp1048
	.uleb128 .Ltmp1049-.Lfunc_begin39       #     jumps to .Ltmp1049
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1050-.Lfunc_begin39       # >> Call Site 7 <<
	.uleb128 .Ltmp1051-.Ltmp1050            #   Call between .Ltmp1050 and .Ltmp1051
	.uleb128 .Ltmp1052-.Lfunc_begin39       #     jumps to .Ltmp1052
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1053-.Lfunc_begin39       # >> Call Site 8 <<
	.uleb128 .Ltmp1054-.Ltmp1053            #   Call between .Ltmp1053 and .Ltmp1054
	.uleb128 .Ltmp1055-.Lfunc_begin39       #     jumps to .Ltmp1055
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1056-.Lfunc_begin39       # >> Call Site 9 <<
	.uleb128 .Ltmp1057-.Ltmp1056            #   Call between .Ltmp1056 and .Ltmp1057
	.uleb128 .Ltmp1058-.Lfunc_begin39       #     jumps to .Ltmp1058
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1059-.Lfunc_begin39       # >> Call Site 10 <<
	.uleb128 .Ltmp1062-.Ltmp1059            #   Call between .Ltmp1059 and .Ltmp1062
	.uleb128 .Ltmp1063-.Lfunc_begin39       #     jumps to .Ltmp1063
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1062-.Lfunc_begin39       # >> Call Site 11 <<
	.uleb128 .Lfunc_end81-.Ltmp1062         #   Call between .Ltmp1062 and .Lfunc_end81
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end39:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_,"axG",@progbits,_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_,comdat
	.weak	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_ # -- Begin function _ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_
	.p2align	4, 0x90
	.type	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_,@function
_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_: # @_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %rbx
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	cmpq	%rdx, %rsi
	je	.LBB82_16
# %bb.1:                                # %.lr.ph
	movq	%rdx, %r15
	movq	%rsi, %r12
	leaq	16(%rbx), %rbp
	leaq	32(%rsp), %r13
	leaq	15(%rsp), %r14
	jmp	.LBB82_2
	.p2align	4, 0x90
.LBB82_15:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB82_2 Depth=1
	addq	$32, %r12
	cmpq	%r15, %r12
	je	.LBB82_16
.LBB82_2:                               # =>This Inner Loop Header: Depth=1
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	movq	%r12, %rcx
	callq	_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_
	movq	16(%rsp), %rcx
	cmpq	%r13, %rcx
	je	.LBB82_3
# %bb.8:                                #   in Loop: Header=BB82_2 Depth=1
	movq	(%rbx), %rax
	cmpq	%rbp, %rax
	je	.LBB82_9
# %bb.11:                               #   in Loop: Header=BB82_2 Depth=1
	movq	16(%rbx), %rdx
	movq	%rcx, (%rbx)
	movups	24(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
	testq	%rax, %rax
	je	.LBB82_10
# %bb.12:                               #   in Loop: Header=BB82_2 Depth=1
	movq	%rax, 16(%rsp)
	movq	%rdx, 32(%rsp)
	jmp	.LBB82_13
	.p2align	4, 0x90
.LBB82_3:                               #   in Loop: Header=BB82_2 Depth=1
	movq	24(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB82_7
# %bb.4:                                #   in Loop: Header=BB82_2 Depth=1
	movq	(%rbx), %rdi
	cmpq	$1, %rdx
	jne	.LBB82_6
# %bb.5:                                #   in Loop: Header=BB82_2 Depth=1
	movzbl	32(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB82_7
	.p2align	4, 0x90
.LBB82_9:                               # %.thread.i
                                        #   in Loop: Header=BB82_2 Depth=1
	movq	%rcx, (%rbx)
	movups	24(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
.LBB82_10:                              #   in Loop: Header=BB82_2 Depth=1
	movq	%r13, 16(%rsp)
	movq	%r13, %rax
	jmp	.LBB82_13
.LBB82_6:                               #   in Loop: Header=BB82_2 Depth=1
	movq	%r13, %rsi
	callq	memcpy@PLT
.LBB82_7:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB82_2 Depth=1
	movq	24(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	16(%rsp), %rax
.LBB82_13:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB82_2 Depth=1
	movq	$0, 24(%rsp)
	movb	$0, (%rax)
	movq	16(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB82_15
# %bb.14:                               #   in Loop: Header=BB82_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB82_15
.LBB82_16:                              # %._crit_edge
	movq	48(%rsp), %rax                  # 8-byte Reload
	leaq	16(%rax), %rcx
	movq	%rcx, (%rax)
	movq	(%rbx), %rdx
	leaq	16(%rbx), %rsi
	cmpq	%rsi, %rdx
	je	.LBB82_17
# %bb.18:
	movq	%rdx, (%rax)
	movq	(%rsi), %rcx
	movq	%rcx, 16(%rax)
	jmp	.LBB82_19
.LBB82_17:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rcx)
.LBB82_19:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	%rsi, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end82:
	.size	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_, .Lfunc_end82-_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument30find_value_in_choices_or_throwINS1_IPS7_SC_EEEEvT_EUlRS8_SK_E_ET0_SJ_SJ_SM_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,"axG",@progbits,_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,comdat
	.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_ # -- Begin function _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.p2align	4, 0x90
	.type	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_,@function
_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_: # @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rsi, %rax
	movq	%rdi, %rbx
	movq	(%rdx), %rsi
	movq	8(%rdx), %rdx
	movq	%rax, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB83_1
# %bb.2:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB83_3
.LBB83_1:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB83_3:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end83:
	.size	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_, .Lfunc_end83-_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_,"axG",@progbits,_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_,comdat
	.weak	_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_ # -- Begin function _ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_
	.p2align	4, 0x90
	.type	_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_,@function
_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_: # @_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_
.Lfunc_begin40:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception40
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rsi), %r14
	movq	8(%rsi), %r15
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	%r15, (%rsp)
	movq	%r12, %rax
	cmpq	$16, %r15
	jb	.LBB84_2
# %bb.1:                                # %.noexc6.i.i.i
	leaq	8(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
.LBB84_2:                               # %._crit_edge.i.i.i.i.i.i
	testq	%r15, %r15
	je	.LBB84_6
# %bb.3:                                # %._crit_edge.i.i.i.i.i.i
	cmpq	$1, %r15
	jne	.LBB84_5
# %bb.4:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB84_6
.LBB84_5:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB84_6:
	movq	(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
.Ltmp1064:
	leaq	8(%rsp), %rdi
	movl	$1, %ecx
	xorl	%esi, %esi
	xorl	%edx, %edx
	movl	$34, %r8d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
.Ltmp1065:
# %bb.7:                                # %.noexc6
	leaq	56(%rsp), %r14
	movq	%r14, 40(%rsp)
	movq	(%rax), %rdx
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rdx
	je	.LBB84_8
# %bb.9:
	movq	%rdx, 40(%rsp)
	movq	(%rcx), %rdx
	movq	%rdx, 56(%rsp)
	jmp	.LBB84_10
.LBB84_8:
	movups	(%rdx), %xmm0
	movups	%xmm0, (%r14)
.LBB84_10:
	movq	8(%rax), %rdx
	movq	%rdx, 48(%rsp)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	48(%rsp), %rsi
.Ltmp1067:
	leaq	40(%rsp), %rdi
	movl	$1, %ecx
	xorl	%edx, %edx
	movl	$34, %r8d
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
.Ltmp1068:
# %bb.11:                               # %.noexc7
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB84_12
# %bb.13:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB84_14
.LBB84_12:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB84_14:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB84_16
# %bb.15:
	callq	_ZdlPv
.LBB84_16:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB84_18
# %bb.17:
	callq	_ZdlPv
.LBB84_18:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit8
	movq	%rbx, %rax
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB84_20:
	.cfi_def_cfa_offset 112
.Ltmp1069:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB84_21
# %bb.22:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit9
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB84_23
.LBB84_24:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit10
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB84_21:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB84_24
	jmp	.LBB84_23
.LBB84_19:
.Ltmp1066:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB84_24
.LBB84_23:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end84:
	.size	_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_, .Lfunc_end84-_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_,"aG",@progbits,_ZN8argparse7details4reprINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES7_RKT_,comdat
	.p2align	2, 0x0
GCC_except_table84:
.Lexception40:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end40-.Lcst_begin40
.Lcst_begin40:
	.uleb128 .Lfunc_begin40-.Lfunc_begin40  # >> Call Site 1 <<
	.uleb128 .Ltmp1064-.Lfunc_begin40       #   Call between .Lfunc_begin40 and .Ltmp1064
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1064-.Lfunc_begin40       # >> Call Site 2 <<
	.uleb128 .Ltmp1065-.Ltmp1064            #   Call between .Ltmp1064 and .Ltmp1065
	.uleb128 .Ltmp1066-.Lfunc_begin40       #     jumps to .Ltmp1066
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1067-.Lfunc_begin40       # >> Call Site 3 <<
	.uleb128 .Ltmp1068-.Ltmp1067            #   Call between .Ltmp1067 and .Ltmp1068
	.uleb128 .Ltmp1069-.Lfunc_begin40       #     jumps to .Ltmp1069
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1068-.Lfunc_begin40       # >> Call Site 4 <<
	.uleb128 .Lfunc_end84-.Ltmp1068         #   Call between .Ltmp1068 and .Lfunc_end84
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end40:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt27__throw_bad_optional_accessv,"axG",@progbits,_ZSt27__throw_bad_optional_accessv,comdat
	.weak	_ZSt27__throw_bad_optional_accessv # -- Begin function _ZSt27__throw_bad_optional_accessv
	.p2align	4, 0x90
	.type	_ZSt27__throw_bad_optional_accessv,@function
_ZSt27__throw_bad_optional_accessv:     # @_ZSt27__throw_bad_optional_accessv
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	$8, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt19bad_optional_access+16, (%rax)
	movl	$_ZTISt19bad_optional_access, %esi
	movl	$_ZNSt9exceptionD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Lfunc_end85:
	.size	_ZSt27__throw_bad_optional_accessv, .Lfunc_end85-_ZSt27__throw_bad_optional_accessv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt19bad_optional_accessD0Ev,"axG",@progbits,_ZNSt19bad_optional_accessD0Ev,comdat
	.weak	_ZNSt19bad_optional_accessD0Ev  # -- Begin function _ZNSt19bad_optional_accessD0Ev
	.p2align	4, 0x90
	.type	_ZNSt19bad_optional_accessD0Ev,@function
_ZNSt19bad_optional_accessD0Ev:         # @_ZNSt19bad_optional_accessD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZNSt9exceptionD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end86:
	.size	_ZNSt19bad_optional_accessD0Ev, .Lfunc_end86-_ZNSt19bad_optional_accessD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt19bad_optional_access4whatEv,"axG",@progbits,_ZNKSt19bad_optional_access4whatEv,comdat
	.weak	_ZNKSt19bad_optional_access4whatEv # -- Begin function _ZNKSt19bad_optional_access4whatEv
	.p2align	4, 0x90
	.type	_ZNKSt19bad_optional_access4whatEv,@function
_ZNKSt19bad_optional_access4whatEv:     # @_ZNKSt19bad_optional_access4whatEv
	.cfi_startproc
# %bb.0:
	movl	$.L.str.67, %eax
	retq
.Lfunc_end87:
	.size	_ZNKSt19bad_optional_access4whatEv, .Lfunc_end87-_ZNKSt19bad_optional_access4whatEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag,"axG",@progbits,_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag,comdat
	.weak	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag # -- Begin function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag,@function
_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag: # @_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %r13
	movq	%rdi, %rbx
	movq	%rsi, %r14
	subq	%rdi, %r14
	cmpq	$128, %r14
	jl	.LBB88_17
# %bb.1:                                # %.lr.ph
	movq	%r13, (%rsp)                    # 8-byte Spill
	movq	%r14, %r13
	shrq	$7, %r13
	movq	8(%r15), %r12
	incq	%r13
	leaq	64(%rbx), %rbp
	jmp	.LBB88_3
	.p2align	4, 0x90
.LBB88_2:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit21.thread49
                                        #   in Loop: Header=BB88_3 Depth=1
	subq	$-128, %rbx
	decq	%r13
	subq	$-128, %rbp
	addq	$-128, %r14
	cmpq	$1, %r13
	jle	.LBB88_16
.LBB88_3:                               # =>This Inner Loop Header: Depth=1
	cmpq	%r12, -56(%rbp)
	jne	.LBB88_6
# %bb.4:                                #   in Loop: Header=BB88_3 Depth=1
	testq	%r12, %r12
	je	.LBB88_40
# %bb.5:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit
                                        #   in Loop: Header=BB88_3 Depth=1
	movq	(%r15), %rsi
	movq	-64(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_34
.LBB88_6:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread46
                                        #   in Loop: Header=BB88_3 Depth=1
	cmpq	%r12, -24(%rbp)
	jne	.LBB88_9
# %bb.7:                                #   in Loop: Header=BB88_3 Depth=1
	testq	%r12, %r12
	je	.LBB88_35
# %bb.8:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit17
                                        #   in Loop: Header=BB88_3 Depth=1
	movq	(%r15), %rsi
	movq	-32(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_36
.LBB88_9:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit17.thread47
                                        #   in Loop: Header=BB88_3 Depth=1
	cmpq	%r12, 8(%rbp)
	jne	.LBB88_12
# %bb.10:                               #   in Loop: Header=BB88_3 Depth=1
	testq	%r12, %r12
	je	.LBB88_37
# %bb.11:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit19
                                        #   in Loop: Header=BB88_3 Depth=1
	movq	(%r15), %rsi
	movq	(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_39
.LBB88_12:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit19.thread48
                                        #   in Loop: Header=BB88_3 Depth=1
	cmpq	%r12, 40(%rbp)
	jne	.LBB88_2
# %bb.13:                               #   in Loop: Header=BB88_3 Depth=1
	testq	%r12, %r12
	je	.LBB88_38
# %bb.14:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit21
                                        #   in Loop: Header=BB88_3 Depth=1
	movq	(%r15), %rsi
	movq	32(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	jne	.LBB88_2
# %bb.15:
	addq	$96, %rbx
	jmp	.LBB88_40
.LBB88_16:                              # %._crit_edge.loopexit
	addq	$-64, %rbp
	movq	%rbp, %rbx
	movq	(%rsp), %r13                    # 8-byte Reload
.LBB88_17:                              # %._crit_edge
	sarq	$5, %r14
	cmpq	$3, %r14
	je	.LBB88_22
# %bb.18:                               # %._crit_edge
	cmpq	$2, %r14
	je	.LBB88_26
# %bb.19:                               # %._crit_edge
	cmpq	$1, %r14
	jne	.LBB88_33
# %bb.20:                               # %._crit_edge._crit_edge56
	movq	8(%r15), %r12
	cmpq	%r12, 8(%rbx)
	je	.LBB88_30
	jmp	.LBB88_33
.LBB88_22:
	movq	8(%rbx), %rdx
	movq	8(%r15), %r12
	cmpq	%r12, %rdx
	jne	.LBB88_25
# %bb.23:
	testq	%rdx, %rdx
	je	.LBB88_40
# %bb.24:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit23
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_40
.LBB88_25:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit23.thread50
	addq	$32, %rbx
	cmpq	%r12, 8(%rbx)
	je	.LBB88_27
	jmp	.LBB88_29
.LBB88_26:                              # %._crit_edge._crit_edge
	movq	8(%r15), %r12
	cmpq	%r12, 8(%rbx)
	jne	.LBB88_29
.LBB88_27:
	testq	%r12, %r12
	je	.LBB88_40
# %bb.28:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit25
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_40
.LBB88_29:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit25.thread51
	addq	$32, %rbx
	cmpq	%r12, 8(%rbx)
	jne	.LBB88_33
.LBB88_30:
	testq	%r12, %r12
	je	.LBB88_40
# %bb.31:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit27
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB88_40
.LBB88_33:
	movq	%r13, %rbx
	jmp	.LBB88_40
.LBB88_34:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit._ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread.loopexit_crit_edge
	addq	$-64, %rbp
	jmp	.LBB88_39
.LBB88_35:                              # %._ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread.loopexitsplit_crit_edge
	addq	$-32, %rbp
	jmp	.LBB88_39
.LBB88_36:
	addq	$32, %rbx
	jmp	.LBB88_40
.LBB88_37:
	addq	$64, %rbx
	jmp	.LBB88_40
.LBB88_38:                              # %._ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread.loopexitsplitsplitsplit_crit_edge
	addq	$32, %rbp
.LBB88_39:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread
	movq	%rbp, %rbx
.LBB88_40:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEclINS_17__normal_iteratorIPS8_St6vectorIS7_SaIS7_EEEEEEbT_.exit.thread
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end88:
	.size	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag, .Lfunc_end88-_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIS8_EEET_SH_SH_T0_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_,"axG",@progbits,_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_,comdat
	.weak	_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_ # -- Begin function _ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_
	.p2align	4, 0x90
	.type	_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_,@function
_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_: # @_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_
.Lfunc_begin41:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception41
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	movq	8(%rdx), %r12
	testq	%r12, %r12
	movl	$.L.str.68, %eax
	movl	$.L.str.17, %r15d
	cmoveq	%rax, %r15
	leaq	24(%rsp), %rbp
	movq	%rbp, 8(%rsp)
	movq	(%rdx), %r13
	movq	%r12, (%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r12
	jb	.LBB89_2
# %bb.1:                                # %.noexc6.i.i
	leaq	8(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
.LBB89_2:                               # %._crit_edge.i.i.i.i.i
	testq	%r12, %r12
	je	.LBB89_6
# %bb.3:                                # %._crit_edge.i.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB89_5
# %bb.4:
	movzbl	(%r13), %ecx
	movb	%cl, (%rax)
	jmp	.LBB89_6
.LBB89_5:
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB89_6:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	xorl	%edx, %edx
	testq	%r12, %r12
	setne	%dl
	movq	(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	addq	%rdx, %rdx
	movabsq	$4611686018427387903, %rax      # imm = 0x3FFFFFFFFFFFFFFF
	subq	16(%rsp), %rax
	cmpq	%rdx, %rax
	jb	.LBB89_7
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
.Ltmp1070:
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1071:
# %bb.14:                               # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp1072:
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1073:
# %bb.15:                               # %.noexc
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB89_16
# %bb.17:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB89_18
.LBB89_16:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB89_18:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB89_20
# %bb.19:
	callq	_ZdlPv
.LBB89_20:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB89_7:
	.cfi_def_cfa_offset 96
.Ltmp1075:
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp1076:
# %bb.8:                                # %.noexc.i
.LBB89_21:
.Ltmp1074:
	jmp	.LBB89_10
.LBB89_9:
.Ltmp1077:
.LBB89_10:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB89_12
# %bb.11:
	callq	_ZdlPv
.LBB89_12:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end89:
	.size	_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_, .Lfunc_end89-_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_
	.cfi_endproc
	.section	.gcc_except_table._ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_,"aG",@progbits,_ZZNK8argparse8Argument30find_value_in_choices_or_throwIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEEvT_ENKUlRKS9_SH_E_clB5cxx11ESH_SH_,comdat
	.p2align	2, 0x0
GCC_except_table89:
.Lexception41:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end41-.Lcst_begin41
.Lcst_begin41:
	.uleb128 .Lfunc_begin41-.Lfunc_begin41  # >> Call Site 1 <<
	.uleb128 .Ltmp1070-.Lfunc_begin41       #   Call between .Lfunc_begin41 and .Ltmp1070
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1070-.Lfunc_begin41       # >> Call Site 2 <<
	.uleb128 .Ltmp1071-.Ltmp1070            #   Call between .Ltmp1070 and .Ltmp1071
	.uleb128 .Ltmp1077-.Lfunc_begin41       #     jumps to .Ltmp1077
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1072-.Lfunc_begin41       # >> Call Site 3 <<
	.uleb128 .Ltmp1073-.Ltmp1072            #   Call between .Ltmp1072 and .Ltmp1073
	.uleb128 .Ltmp1074-.Lfunc_begin41       #     jumps to .Ltmp1074
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1075-.Lfunc_begin41       # >> Call Site 4 <<
	.uleb128 .Ltmp1076-.Ltmp1075            #   Call between .Ltmp1075 and .Ltmp1076
	.uleb128 .Ltmp1077-.Lfunc_begin41       #     jumps to .Ltmp1077
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1076-.Lfunc_begin41       # >> Call Site 5 <<
	.uleb128 .Lfunc_end89-.Ltmp1076         #   Call between .Ltmp1076 and .Lfunc_end89
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end41:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"axG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,comdat
	.weak	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_ # -- Begin function _ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,@function
_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_: # @_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
.Lfunc_begin42:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception42
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	(%rdi), %rsi
	movq	8(%rdi), %rbx
	movq	%rbx, %rax
	subq	%rsi, %rax
	movabsq	$9223372036854775792, %rcx      # imm = 0x7FFFFFFFFFFFFFF0
	cmpq	%rcx, %rax
	je	.LBB90_30
# %bb.1:                                # %_ZNKSt6vectorISt3anySaIS0_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r14
	movq	%rdi, %rbp
	sarq	$4, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r15
	movq	%r15, %rdx
	shrq	$59, %rdx
	movabsq	$576460752303423487, %rdx       # imm = 0x7FFFFFFFFFFFFFF
	cmovneq	%rdx, %r15
	addq	%rax, %rcx
	cmovbq	%rdx, %r15
	movq	%r12, %r13
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	subq	%rsi, %r13
	shlq	$4, %r15
	movq	%r15, %rdi
	callq	_Znwm
	leaq	(%rax,%r13), %rcx
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	$0, 8(%rax,%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	movq	%rbp, 32(%rsp)                  # 8-byte Spill
	je	.LBB90_2
# %bb.3:
	movq	%rcx, 8(%rsp)
.Ltmp1078:
	leaq	8(%rsp), %rdx
	movl	$2, %edi
	movq	%r14, %rsi
	callq	*%rax
.Ltmp1079:
# %bb.4:                                # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JRS0_EEEvRS1_PT_DpOT0_.exit
	movq	16(%rsp), %r13                  # 8-byte Reload
	cmpq	%r12, 24(%rsp)                  # 8-byte Folded Reload
	jne	.LBB90_5
	jmp	.LBB90_13
.LBB90_2:
	movq	$0, (%rcx)
	movq	16(%rsp), %r13                  # 8-byte Reload
	cmpq	%r12, 24(%rsp)                  # 8-byte Folded Reload
	je	.LBB90_13
.LBB90_5:                               # %.lr.ph.i.i.i.i.preheader
	leaq	8(%rsp), %rbp
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	24(%rsp), %r14                  # 8-byte Reload
	jmp	.LBB90_6
	.p2align	4, 0x90
.LBB90_12:                              # %_ZSt19__relocate_object_aISt3anyS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB90_6 Depth=1
	addq	$16, %r14
	addq	$16, %r13
	cmpq	%r12, %r14
	je	.LBB90_13
.LBB90_6:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	$0, 8(%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB90_7
# %bb.8:                                #   in Loop: Header=BB90_6 Depth=1
	movq	%r13, 8(%rsp)
.Ltmp1087:
	movl	$4, %edi
	movq	%r14, %rsi
	movq	%rbp, %rdx
	callq	*%rax
.Ltmp1088:
# %bb.9:                                # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB90_6 Depth=1
	movq	(%r14), %rax
	testq	%rax, %rax
	jne	.LBB90_10
	jmp	.LBB90_12
	.p2align	4, 0x90
.LBB90_7:                               #   in Loop: Header=BB90_6 Depth=1
	movq	$0, (%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB90_12
.LBB90_10:                              #   in Loop: Header=BB90_6 Depth=1
.Ltmp1090:
	movl	$3, %edi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1091:
# %bb.11:                               #   in Loop: Header=BB90_6 Depth=1
	movq	$0, (%r14)
	jmp	.LBB90_12
.LBB90_13:                              # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit
	addq	$16, %r13
	cmpq	%r12, %rbx
	je	.LBB90_22
# %bb.14:                               # %.lr.ph.i.i.i.i30.preheader
	leaq	8(%rsp), %rbp
	jmp	.LBB90_15
	.p2align	4, 0x90
.LBB90_20:                              #   in Loop: Header=BB90_15 Depth=1
	movq	$0, (%r12)
.LBB90_21:                              # %_ZSt19__relocate_object_aISt3anyS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i.i34
                                        #   in Loop: Header=BB90_15 Depth=1
	addq	$16, %r12
	addq	$16, %r13
	cmpq	%rbx, %r12
	je	.LBB90_22
.LBB90_15:                              # %.lr.ph.i.i.i.i30
                                        # =>This Inner Loop Header: Depth=1
	movq	$0, 8(%r13)
	movq	(%r12), %rax
	testq	%rax, %rax
	je	.LBB90_16
# %bb.17:                               #   in Loop: Header=BB90_15 Depth=1
	movq	%r13, 8(%rsp)
.Ltmp1093:
	movl	$4, %edi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	*%rax
.Ltmp1094:
# %bb.18:                               # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit.i.i.i.i.i32
                                        #   in Loop: Header=BB90_15 Depth=1
	movq	(%r12), %rax
	testq	%rax, %rax
	jne	.LBB90_19
	jmp	.LBB90_21
	.p2align	4, 0x90
.LBB90_16:                              #   in Loop: Header=BB90_15 Depth=1
	movq	$0, (%r13)
	movq	(%r12), %rax
	testq	%rax, %rax
	je	.LBB90_21
.LBB90_19:                              #   in Loop: Header=BB90_15 Depth=1
.Ltmp1096:
	movl	$3, %edi
	movq	%r12, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1097:
	jmp	.LBB90_20
.LBB90_22:                              # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit36
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB90_24
# %bb.23:
	callq	_ZdlPv
.LBB90_24:                              # %_ZNSt12_Vector_baseISt3anySaIS0_EE13_M_deallocateEPS0_m.exit
	movq	32(%rsp), %rax                  # 8-byte Reload
	movq	16(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, (%rax)
	movq	%r13, 8(%rax)
	addq	%r15, %rcx
	movq	%rcx, 16(%rax)
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB90_30:
	.cfi_def_cfa_offset 96
	movl	$.L.str.37, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB90_28:
.Ltmp1080:
	movq	%rax, %rdi
	callq	__cxa_begin_catch
	movq	16(%rsp), %rdi                  # 8-byte Reload
	callq	_ZdlPv
.Ltmp1081:
	callq	__cxa_rethrow
.Ltmp1082:
# %bb.29:
.LBB90_25:
.Ltmp1083:
	movq	%rax, %rbx
.Ltmp1084:
	callq	__cxa_end_catch
.Ltmp1085:
# %bb.26:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB90_27:
.Ltmp1086:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB90_33:
.Ltmp1095:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB90_34:
.Ltmp1098:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB90_31:
.Ltmp1089:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB90_32:
.Ltmp1092:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end90:
	.size	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, .Lfunc_end90-_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"aG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJRS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table90:
.Lexception42:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase22-.Lttbaseref22
.Lttbaseref22:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end42-.Lcst_begin42
.Lcst_begin42:
	.uleb128 .Lfunc_begin42-.Lfunc_begin42  # >> Call Site 1 <<
	.uleb128 .Ltmp1078-.Lfunc_begin42       #   Call between .Lfunc_begin42 and .Ltmp1078
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1078-.Lfunc_begin42       # >> Call Site 2 <<
	.uleb128 .Ltmp1079-.Ltmp1078            #   Call between .Ltmp1078 and .Ltmp1079
	.uleb128 .Ltmp1080-.Lfunc_begin42       #     jumps to .Ltmp1080
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1087-.Lfunc_begin42       # >> Call Site 3 <<
	.uleb128 .Ltmp1088-.Ltmp1087            #   Call between .Ltmp1087 and .Ltmp1088
	.uleb128 .Ltmp1089-.Lfunc_begin42       #     jumps to .Ltmp1089
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1090-.Lfunc_begin42       # >> Call Site 4 <<
	.uleb128 .Ltmp1091-.Ltmp1090            #   Call between .Ltmp1090 and .Ltmp1091
	.uleb128 .Ltmp1092-.Lfunc_begin42       #     jumps to .Ltmp1092
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1093-.Lfunc_begin42       # >> Call Site 5 <<
	.uleb128 .Ltmp1094-.Ltmp1093            #   Call between .Ltmp1093 and .Ltmp1094
	.uleb128 .Ltmp1095-.Lfunc_begin42       #     jumps to .Ltmp1095
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1096-.Lfunc_begin42       # >> Call Site 6 <<
	.uleb128 .Ltmp1097-.Ltmp1096            #   Call between .Ltmp1096 and .Ltmp1097
	.uleb128 .Ltmp1098-.Lfunc_begin42       #     jumps to .Ltmp1098
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1097-.Lfunc_begin42       # >> Call Site 7 <<
	.uleb128 .Ltmp1081-.Ltmp1097            #   Call between .Ltmp1097 and .Ltmp1081
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1081-.Lfunc_begin42       # >> Call Site 8 <<
	.uleb128 .Ltmp1082-.Ltmp1081            #   Call between .Ltmp1081 and .Ltmp1082
	.uleb128 .Ltmp1083-.Lfunc_begin42       #     jumps to .Ltmp1083
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1084-.Lfunc_begin42       # >> Call Site 9 <<
	.uleb128 .Ltmp1085-.Ltmp1084            #   Call between .Ltmp1084 and .Ltmp1085
	.uleb128 .Ltmp1086-.Lfunc_begin42       #     jumps to .Ltmp1086
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1085-.Lfunc_begin42       # >> Call Site 10 <<
	.uleb128 .Lfunc_end90-.Ltmp1085         #   Call between .Ltmp1085 and .Lfunc_end90
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end42:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase22:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_
.Lfunc_begin43:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception43
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$56, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	40(%rsp), %r14
	movq	%r14, 24(%rsp)
	movq	$0, 32(%rsp)
	movb	$0, 40(%rsp)
	cmpq	$0, 16(%rsi)
	je	.LBB91_1
# %bb.3:
.Ltmp1099:
	leaq	8(%rsp), %rdi
	leaq	24(%rsp), %rdx
	callq	*24(%rsi)
.Ltmp1100:
# %bb.4:                                # %_ZNKSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclES8_.exit.i.i.i.i.i
	movq	8(%rsp), %rax
	testq	%rax, %rax
	je	.LBB91_7
# %bb.5:
.Ltmp1101:
	leaq	8(%rsp), %rsi
	movl	$3, %edi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1102:
# %bb.6:
	movq	$0, 8(%rsp)
.LBB91_7:                               # %_ZNSt3anyD2Ev.exit.i.i.i.i.i
	movq	24(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB91_9
# %bb.8:
	callq	_ZdlPv
.LBB91_9:                               # %_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE17__do_visit_invokeESP_S10_.exit
	addq	$56, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB91_1:
	.cfi_def_cfa_offset 80
.Ltmp1104:
	callq	_ZSt25__throw_bad_function_callv
.Ltmp1105:
# %bb.2:                                # %.noexc.i.i.i.i.i
.LBB91_13:
.Ltmp1103:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB91_10:
.Ltmp1106:
	movq	%rax, %rbx
	movq	24(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB91_12
# %bb.11:
	callq	_ZdlPv
.LBB91_12:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit5.i.i.i.i.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end91:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_, .Lfunc_end91-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_,"aG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_,comdat
	.p2align	2, 0x0
GCC_except_table91:
.Lexception43:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase23-.Lttbaseref23
.Lttbaseref23:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end43-.Lcst_begin43
.Lcst_begin43:
	.uleb128 .Ltmp1099-.Lfunc_begin43       # >> Call Site 1 <<
	.uleb128 .Ltmp1100-.Ltmp1099            #   Call between .Ltmp1099 and .Ltmp1100
	.uleb128 .Ltmp1106-.Lfunc_begin43       #     jumps to .Ltmp1106
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1101-.Lfunc_begin43       # >> Call Site 2 <<
	.uleb128 .Ltmp1102-.Ltmp1101            #   Call between .Ltmp1101 and .Ltmp1102
	.uleb128 .Ltmp1103-.Lfunc_begin43       #     jumps to .Ltmp1103
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1104-.Lfunc_begin43       # >> Call Site 3 <<
	.uleb128 .Ltmp1105-.Ltmp1104            #   Call between .Ltmp1104 and .Ltmp1105
	.uleb128 .Ltmp1106-.Lfunc_begin43       #     jumps to .Ltmp1106
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1105-.Lfunc_begin43       # >> Call Site 4 <<
	.uleb128 .Lfunc_end91-.Ltmp1105         #   Call between .Ltmp1105 and .Lfunc_end91
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end43:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase23:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_
.Lfunc_begin44:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception44
# %bb.0:
	pushq	%r14
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	subq	$40, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -24
	.cfi_offset %r14, -16
	leaq	24(%rsp), %r14
	movq	%r14, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
	cmpq	$0, 16(%rsi)
	je	.LBB92_1
# %bb.3:
.Ltmp1107:
	movq	%rsi, %rdi
	leaq	8(%rsp), %rsi
	callq	*24(%rdi)
.Ltmp1108:
# %bb.4:                                # %_ZNKSt8functionIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclES7_.exit.i.i.i.i.i
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB92_6
# %bb.5:
	callq	_ZdlPv
.LBB92_6:                               # %_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE17__do_visit_invokeESP_S10_.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r14
	.cfi_def_cfa_offset 8
	retq
.LBB92_1:
	.cfi_def_cfa_offset 64
.Ltmp1109:
	callq	_ZSt25__throw_bad_function_callv
.Ltmp1110:
# %bb.2:                                # %.noexc.i.i.i.i.i
.LBB92_7:
.Ltmp1111:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB92_9
# %bb.8:
	callq	_ZdlPv
.LBB92_9:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit4.i.i.i.i.i
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end92:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_, .Lfunc_end92-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_,"aG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_,comdat
	.p2align	2, 0x0
GCC_except_table92:
.Lexception44:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end44-.Lcst_begin44
.Lcst_begin44:
	.uleb128 .Ltmp1107-.Lfunc_begin44       # >> Call Site 1 <<
	.uleb128 .Ltmp1110-.Ltmp1107            #   Call between .Ltmp1107 and .Ltmp1110
	.uleb128 .Ltmp1111-.Lfunc_begin44       #     jumps to .Ltmp1111
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1110-.Lfunc_begin44       # >> Call Site 2 <<
	.uleb128 .Lfunc_end92-.Ltmp1110         #   Call between .Ltmp1110 and .Lfunc_end92
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end44:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag,"axG",@progbits,_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag,comdat
	.weak	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag # -- Begin function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag,@function
_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag: # @_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %r12
	subq	%rdi, %r12
	cmpq	$128, %r12
	jl	.LBB93_8
# %bb.1:                                # %.lr.ph
	movq	%r12, %r13
	shrq	$7, %r13
	incq	%r13
	addq	$64, %rbx
	.p2align	4, 0x90
.LBB93_2:                               # =>This Inner Loop Header: Depth=1
	movq	-64(%rbx), %rsi
	movq	-56(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_19
# %bb.3:                                #   in Loop: Header=BB93_2 Depth=1
	movq	-32(%rbx), %rsi
	movq	-24(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_17
# %bb.4:                                #   in Loop: Header=BB93_2 Depth=1
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_20
# %bb.5:                                #   in Loop: Header=BB93_2 Depth=1
	movq	32(%rbx), %rsi
	movq	40(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_18
# %bb.6:                                #   in Loop: Header=BB93_2 Depth=1
	decq	%r13
	subq	$-128, %rbx
	addq	$-128, %r12
	cmpq	$1, %r13
	jg	.LBB93_2
# %bb.7:                                # %._crit_edge.loopexit
	addq	$-64, %rbx
.LBB93_8:                               # %._crit_edge
	sarq	$5, %r12
	cmpq	$1, %r12
	je	.LBB93_16
# %bb.9:                                # %._crit_edge
	cmpq	$2, %r12
	je	.LBB93_14
# %bb.10:                               # %._crit_edge
	cmpq	$3, %r12
	jne	.LBB93_11
# %bb.12:
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_20
# %bb.13:
	addq	$32, %rbx
.LBB93_14:
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	jne	.LBB93_20
# %bb.15:
	addq	$32, %rbx
.LBB93_16:
	movq	(%rbx), %rsi
	movq	8(%rbx), %rdi
	movq	8(%r15), %rdx
	movq	16(%r15), %rcx
	callq	*(%r15)
	testb	%al, %al
	cmoveq	%r14, %rbx
	jmp	.LBB93_20
.LBB93_11:
	movq	%r14, %rbx
	jmp	.LBB93_20
.LBB93_19:                              # %.loopexit.loopexit
	addq	$-64, %rbx
	jmp	.LBB93_20
.LBB93_17:                              # %.loopexit.loopexit.split.loop.exit
	addq	$-32, %rbx
	jmp	.LBB93_20
.LBB93_18:                              # %.loopexit.loopexit.split.loop.exit72
	addq	$32, %rbx
.LBB93_20:                              # %.loopexit
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end93:
	.size	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag, .Lfunc_end93-_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops10_Iter_predISt5_BindIFPFbSt17basic_string_viewIcS5_ESH_ESt12_PlaceholderILi1EESH_EEEEET_SP_SP_T0_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_
	.cfi_startproc
# %bb.0:
	jmp	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE # TAILCALL
.Lfunc_end94:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_, .Lfunc_end94-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_,"axG",@progbits,_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_,comdat
	.weak	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_ # -- Begin function _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_
	.p2align	4, 0x90
	.type	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_,@function
_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_: # @_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_
	.cfi_startproc
# %bb.0:
	jmp	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE # TAILCALL
.Lfunc_end95:
	.size	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_, .Lfunc_end95-_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE,"axG",@progbits,_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE,comdat
	.weak	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE # -- Begin function _ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE
	.p2align	4, 0x90
	.type	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE,@function
_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE: # @_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE
.Lfunc_begin45:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception45
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$40, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	(%rdi), %rbx
	movl	$280, %r14d                     # imm = 0x118
	addq	16(%rdi), %r14
	movq	8(%rdi), %r15
	movq	$0, 24(%rsp)
	movq	16(%rsi), %rax
	testq	%rax, %rax
	je	.LBB96_3
# %bb.1:
.Ltmp1112:
	movq	%rsi, %r12
	leaq	8(%rsp), %rdi
	movl	$2, %edx
	callq	*%rax
.Ltmp1113:
# %bb.2:
	movups	16(%r12), %xmm0
	movups	%xmm0, 24(%rsp)
.LBB96_3:                               # %_ZNSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEC2ERKSA_.exit
.Ltmp1118:
	leaq	8(%rsp), %rcx
	movq	%rbx, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_
.Ltmp1119:
# %bb.4:
	movq	24(%rsp), %rax
	testq	%rax, %rax
	je	.LBB96_6
# %bb.5:
.Ltmp1124:
	leaq	8(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp1125:
.LBB96_6:                               # %_ZNSt14_Function_baseD2Ev.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB96_10:
	.cfi_def_cfa_offset 80
.Ltmp1126:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB96_7:
.Ltmp1114:
	movq	%rax, %rbx
	movq	24(%rsp), %rcx
	testq	%rcx, %rcx
	je	.LBB96_9
# %bb.8:
.Ltmp1115:
	leaq	8(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rcx
.Ltmp1116:
	jmp	.LBB96_9
.LBB96_14:
.Ltmp1117:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB96_11:
.Ltmp1120:
	movq	%rax, %rbx
	movq	24(%rsp), %rcx
	testq	%rcx, %rcx
	je	.LBB96_9
# %bb.12:
.Ltmp1121:
	leaq	8(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rcx
.Ltmp1122:
.LBB96_9:                               # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB96_13:
.Ltmp1123:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end96:
	.size	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE, .Lfunc_end96-_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE
	.cfi_endproc
	.section	.gcc_except_table._ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE,"aG",@progbits,_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFSt3anyRKS9_EE,comdat
	.p2align	2, 0x0
GCC_except_table96:
.Lexception45:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase24-.Lttbaseref24
.Lttbaseref24:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end45-.Lcst_begin45
.Lcst_begin45:
	.uleb128 .Ltmp1112-.Lfunc_begin45       # >> Call Site 1 <<
	.uleb128 .Ltmp1113-.Ltmp1112            #   Call between .Ltmp1112 and .Ltmp1113
	.uleb128 .Ltmp1114-.Lfunc_begin45       #     jumps to .Ltmp1114
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1118-.Lfunc_begin45       # >> Call Site 2 <<
	.uleb128 .Ltmp1119-.Ltmp1118            #   Call between .Ltmp1118 and .Ltmp1119
	.uleb128 .Ltmp1120-.Lfunc_begin45       #     jumps to .Ltmp1120
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1124-.Lfunc_begin45       # >> Call Site 3 <<
	.uleb128 .Ltmp1125-.Ltmp1124            #   Call between .Ltmp1124 and .Ltmp1125
	.uleb128 .Ltmp1126-.Lfunc_begin45       #     jumps to .Ltmp1126
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1115-.Lfunc_begin45       # >> Call Site 4 <<
	.uleb128 .Ltmp1116-.Ltmp1115            #   Call between .Ltmp1115 and .Ltmp1116
	.uleb128 .Ltmp1117-.Lfunc_begin45       #     jumps to .Ltmp1117
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1121-.Lfunc_begin45       # >> Call Site 5 <<
	.uleb128 .Ltmp1122-.Ltmp1121            #   Call between .Ltmp1121 and .Ltmp1122
	.uleb128 .Ltmp1123-.Lfunc_begin45       #     jumps to .Ltmp1123
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1122-.Lfunc_begin45       # >> Call Site 6 <<
	.uleb128 .Lfunc_end96-.Ltmp1122         #   Call between .Ltmp1122 and .Lfunc_end96
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end45:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase24:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_,"axG",@progbits,_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_,comdat
	.weak	_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_ # -- Begin function _ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_
	.p2align	4, 0x90
	.type	_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_,@function
_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_: # @_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_
.Lfunc_begin46:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception46
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbx
	cmpq	%rsi, %rdi
	je	.LBB97_13
# %bb.1:                                # %.lr.ph
	movq	%rcx, %r14
	movq	%rsi, %r15
	movq	%rdi, %r12
	movq	%rsp, %r13
	leaq	16(%rsp), %rbp
	jmp	.LBB97_2
	.p2align	4, 0x90
.LBB97_12:                              # %_ZNSt3anyD2Ev.exit
                                        #   in Loop: Header=BB97_2 Depth=1
	addq	$32, %r12
	cmpq	%r15, %r12
	je	.LBB97_13
.LBB97_2:                               # =>This Inner Loop Header: Depth=1
	cmpq	$0, 16(%r14)
	je	.LBB97_14
# %bb.3:                                # %_ZNKSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclES8_.exit
                                        #   in Loop: Header=BB97_2 Depth=1
	movq	%r13, %rdi
	movq	%r14, %rsi
	movq	%r12, %rdx
	callq	*24(%r14)
	movq	8(%rbx), %rsi
	cmpq	16(%rbx), %rsi
	je	.LBB97_9
# %bb.4:                                #   in Loop: Header=BB97_2 Depth=1
	movq	$0, 8(%rsi)
	movq	(%rsp), %rax
	testq	%rax, %rax
	je	.LBB97_5
# %bb.6:                                #   in Loop: Header=BB97_2 Depth=1
	movq	%rsi, 16(%rsp)
.Ltmp1127:
	movl	$4, %edi
	movq	%r13, %rsi
	movq	%rbp, %rdx
	callq	*%rax
.Ltmp1128:
# %bb.7:                                #   in Loop: Header=BB97_2 Depth=1
	addq	$16, 8(%rbx)
	movq	(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB97_11
	jmp	.LBB97_12
	.p2align	4, 0x90
.LBB97_9:                               #   in Loop: Header=BB97_2 Depth=1
.Ltmp1130:
	movq	%rbx, %rdi
	movq	%r13, %rdx
	callq	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
.Ltmp1131:
# %bb.10:                               # %_ZNSt20back_insert_iteratorISt6vectorISt3anySaIS1_EEEaSEOS1_.exit
                                        #   in Loop: Header=BB97_2 Depth=1
	movq	(%rsp), %rax
	testq	%rax, %rax
	je	.LBB97_12
.LBB97_11:                              #   in Loop: Header=BB97_2 Depth=1
.Ltmp1133:
	movl	$3, %edi
	movq	%r13, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1134:
	jmp	.LBB97_12
	.p2align	4, 0x90
.LBB97_5:                               #   in Loop: Header=BB97_2 Depth=1
	movq	$0, (%rsi)
	addq	$16, 8(%rbx)
	movq	(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB97_11
	jmp	.LBB97_12
.LBB97_13:                              # %._crit_edge
	movq	%rbx, %rax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB97_14:
	.cfi_def_cfa_offset 80
	callq	_ZSt25__throw_bad_function_callv
.LBB97_16:
.Ltmp1132:
	movq	%rax, %rbx
	movq	%rsp, %rdi
	callq	_ZNSt3anyD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB97_8:
.Ltmp1129:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB97_15:
.Ltmp1135:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end97:
	.size	_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_, .Lfunc_end97-_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_
	.cfi_endproc
	.section	.gcc_except_table._ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_,"aG",@progbits,_ZSt9transformIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEESt20back_insert_iteratorIS9_ISt3anySaISE_EEESt8functionIFSE_RKS7_EEET0_T_SO_SN_T1_,comdat
	.p2align	2, 0x0
GCC_except_table97:
.Lexception46:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase25-.Lttbaseref25
.Lttbaseref25:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end46-.Lcst_begin46
.Lcst_begin46:
	.uleb128 .Lfunc_begin46-.Lfunc_begin46  # >> Call Site 1 <<
	.uleb128 .Ltmp1127-.Lfunc_begin46       #   Call between .Lfunc_begin46 and .Ltmp1127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1127-.Lfunc_begin46       # >> Call Site 2 <<
	.uleb128 .Ltmp1128-.Ltmp1127            #   Call between .Ltmp1127 and .Ltmp1128
	.uleb128 .Ltmp1129-.Lfunc_begin46       #     jumps to .Ltmp1129
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1130-.Lfunc_begin46       # >> Call Site 3 <<
	.uleb128 .Ltmp1131-.Ltmp1130            #   Call between .Ltmp1130 and .Ltmp1131
	.uleb128 .Ltmp1132-.Lfunc_begin46       #     jumps to .Ltmp1132
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1133-.Lfunc_begin46       # >> Call Site 4 <<
	.uleb128 .Ltmp1134-.Ltmp1133            #   Call between .Ltmp1133 and .Ltmp1134
	.uleb128 .Ltmp1135-.Lfunc_begin46       #     jumps to .Ltmp1135
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1134-.Lfunc_begin46       # >> Call Site 5 <<
	.uleb128 .Lfunc_end97-.Ltmp1134         #   Call between .Ltmp1134 and .Lfunc_end97
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end46:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase25:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"axG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,comdat
	.weak	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_ # -- Begin function _ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,@function
_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_: # @_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
.Lfunc_begin47:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception47
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r12
	movq	(%rdi), %rsi
	movq	8(%rdi), %rbx
	movq	%rbx, %rax
	subq	%rsi, %rax
	movabsq	$9223372036854775792, %rcx      # imm = 0x7FFFFFFFFFFFFFF0
	cmpq	%rcx, %rax
	je	.LBB98_25
# %bb.1:                                # %_ZNKSt6vectorISt3anySaIS0_EE12_M_check_lenEmPKc.exit
	movq	%rdx, %r14
	movq	%rdi, %rbp
	sarq	$4, %rax
	cmpq	$1, %rax
	movq	%rax, %rcx
	adcq	$0, %rcx
	leaq	(%rcx,%rax), %r15
	movq	%r15, %rdx
	shrq	$59, %rdx
	movabsq	$576460752303423487, %rdx       # imm = 0x7FFFFFFFFFFFFFF
	cmovneq	%rdx, %r15
	addq	%rax, %rcx
	cmovbq	%rdx, %r15
	movq	%r12, %r13
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	subq	%rsi, %r13
	shlq	$4, %r15
	movq	%r15, %rdi
	callq	_Znwm
	leaq	(%rax,%r13), %rcx
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	$0, 8(%rax,%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	movq	%rbp, 32(%rsp)                  # 8-byte Spill
	je	.LBB98_2
# %bb.3:
	movq	%rcx, 8(%rsp)
.Ltmp1136:
	leaq	8(%rsp), %rdx
	movl	$4, %edi
	movq	%r14, %rsi
	callq	*%rax
.Ltmp1137:
# %bb.4:                                # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit
	movq	16(%rsp), %r13                  # 8-byte Reload
	cmpq	%r12, 24(%rsp)                  # 8-byte Folded Reload
	jne	.LBB98_5
	jmp	.LBB98_13
.LBB98_2:
	movq	$0, (%rcx)
	movq	16(%rsp), %r13                  # 8-byte Reload
	cmpq	%r12, 24(%rsp)                  # 8-byte Folded Reload
	je	.LBB98_13
.LBB98_5:                               # %.lr.ph.i.i.i.i.preheader
	leaq	8(%rsp), %rbp
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	24(%rsp), %r14                  # 8-byte Reload
	jmp	.LBB98_6
	.p2align	4, 0x90
.LBB98_12:                              # %_ZSt19__relocate_object_aISt3anyS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	addq	$16, %r14
	addq	$16, %r13
	cmpq	%r12, %r14
	je	.LBB98_13
.LBB98_6:                               # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	$0, 8(%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB98_7
# %bb.8:                                #   in Loop: Header=BB98_6 Depth=1
	movq	%r13, 8(%rsp)
.Ltmp1139:
	movl	$4, %edi
	movq	%r14, %rsi
	movq	%rbp, %rdx
	callq	*%rax
.Ltmp1140:
# %bb.9:                                # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB98_6 Depth=1
	movq	(%r14), %rax
	testq	%rax, %rax
	jne	.LBB98_10
	jmp	.LBB98_12
	.p2align	4, 0x90
.LBB98_7:                               #   in Loop: Header=BB98_6 Depth=1
	movq	$0, (%r13)
	movq	(%r14), %rax
	testq	%rax, %rax
	je	.LBB98_12
.LBB98_10:                              #   in Loop: Header=BB98_6 Depth=1
.Ltmp1142:
	movl	$3, %edi
	movq	%r14, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1143:
# %bb.11:                               #   in Loop: Header=BB98_6 Depth=1
	movq	$0, (%r14)
	jmp	.LBB98_12
.LBB98_13:                              # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit
	addq	$16, %r13
	cmpq	%r12, %rbx
	je	.LBB98_22
# %bb.14:                               # %.lr.ph.i.i.i.i20.preheader
	leaq	8(%rsp), %rbp
	jmp	.LBB98_15
	.p2align	4, 0x90
.LBB98_21:                              # %_ZSt19__relocate_object_aISt3anyS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i.i24
                                        #   in Loop: Header=BB98_15 Depth=1
	addq	$16, %r12
	addq	$16, %r13
	cmpq	%rbx, %r12
	je	.LBB98_22
.LBB98_15:                              # %.lr.ph.i.i.i.i20
                                        # =>This Inner Loop Header: Depth=1
	movq	$0, 8(%r13)
	movq	(%r12), %rax
	testq	%rax, %rax
	je	.LBB98_16
# %bb.17:                               #   in Loop: Header=BB98_15 Depth=1
	movq	%r13, 8(%rsp)
.Ltmp1145:
	movl	$4, %edi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	*%rax
.Ltmp1146:
# %bb.18:                               # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit.i.i.i.i.i22
                                        #   in Loop: Header=BB98_15 Depth=1
	movq	(%r12), %rax
	testq	%rax, %rax
	jne	.LBB98_19
	jmp	.LBB98_21
	.p2align	4, 0x90
.LBB98_16:                              #   in Loop: Header=BB98_15 Depth=1
	movq	$0, (%r13)
	movq	(%r12), %rax
	testq	%rax, %rax
	je	.LBB98_21
.LBB98_19:                              #   in Loop: Header=BB98_15 Depth=1
.Ltmp1148:
	movl	$3, %edi
	movq	%r12, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1149:
# %bb.20:                               #   in Loop: Header=BB98_15 Depth=1
	movq	$0, (%r12)
	jmp	.LBB98_21
.LBB98_22:                              # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit26
	movq	24(%rsp), %rdi                  # 8-byte Reload
	testq	%rdi, %rdi
	je	.LBB98_24
# %bb.23:
	callq	_ZdlPv
.LBB98_24:                              # %_ZNSt12_Vector_baseISt3anySaIS0_EE13_M_deallocateEPS0_m.exit
	movq	32(%rsp), %rax                  # 8-byte Reload
	movq	16(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, (%rax)
	movq	%r13, 8(%rax)
	addq	%r15, %rcx
	movq	%rcx, 16(%rax)
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB98_25:
	.cfi_def_cfa_offset 96
	movl	$.L.str.37, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB98_26:
.Ltmp1138:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_30:
.Ltmp1150:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_29:
.Ltmp1147:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_28:
.Ltmp1144:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB98_27:
.Ltmp1141:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end98:
	.size	_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_, .Lfunc_end98-_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,"aG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_realloc_insertIJS0_EEEvN9__gnu_cxx17__normal_iteratorIPS0_S2_EEDpOT_,comdat
	.p2align	2, 0x0
GCC_except_table98:
.Lexception47:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase26-.Lttbaseref26
.Lttbaseref26:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end47-.Lcst_begin47
.Lcst_begin47:
	.uleb128 .Lfunc_begin47-.Lfunc_begin47  # >> Call Site 1 <<
	.uleb128 .Ltmp1136-.Lfunc_begin47       #   Call between .Lfunc_begin47 and .Ltmp1136
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1136-.Lfunc_begin47       # >> Call Site 2 <<
	.uleb128 .Ltmp1137-.Ltmp1136            #   Call between .Ltmp1136 and .Ltmp1137
	.uleb128 .Ltmp1138-.Lfunc_begin47       #     jumps to .Ltmp1138
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1139-.Lfunc_begin47       # >> Call Site 3 <<
	.uleb128 .Ltmp1140-.Ltmp1139            #   Call between .Ltmp1139 and .Ltmp1140
	.uleb128 .Ltmp1141-.Lfunc_begin47       #     jumps to .Ltmp1141
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1142-.Lfunc_begin47       # >> Call Site 4 <<
	.uleb128 .Ltmp1143-.Ltmp1142            #   Call between .Ltmp1142 and .Ltmp1143
	.uleb128 .Ltmp1144-.Lfunc_begin47       #     jumps to .Ltmp1144
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1145-.Lfunc_begin47       # >> Call Site 5 <<
	.uleb128 .Ltmp1146-.Ltmp1145            #   Call between .Ltmp1145 and .Ltmp1146
	.uleb128 .Ltmp1147-.Lfunc_begin47       #     jumps to .Ltmp1147
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1148-.Lfunc_begin47       # >> Call Site 6 <<
	.uleb128 .Ltmp1149-.Ltmp1148            #   Call between .Ltmp1148 and .Ltmp1149
	.uleb128 .Ltmp1150-.Lfunc_begin47       #     jumps to .Ltmp1150
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1149-.Lfunc_begin47       # >> Call Site 7 <<
	.uleb128 .Lfunc_end98-.Ltmp1149         #   Call between .Ltmp1149 and .Lfunc_end98
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end47:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase26:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE,"axG",@progbits,_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE,comdat
	.weak	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE # -- Begin function _ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE
	.p2align	4, 0x90
	.type	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE,@function
_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE: # @_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE
.Lfunc_begin48:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception48
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$88, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rdi), %r14
	movq	8(%rdi), %r12
	movq	$0, 16(%rsp)
	movq	16(%rsi), %rax
	testq	%rax, %rax
	je	.LBB99_1
# %bb.2:
.Ltmp1151:
	movq	%rsi, %r15
	movq	%rsp, %rdi
	movl	$2, %edx
	callq	*%rax
.Ltmp1152:
# %bb.3:
	movq	24(%r15), %rax
	movq	%rax, 24(%rsp)
	movq	16(%r15), %rcx
	movq	%rcx, 16(%rsp)
	cmpq	%r12, %r14
	jne	.LBB99_5
	jmp	.LBB99_15
.LBB99_1:
	xorl	%ecx, %ecx
                                        # implicit-def: $rax
	cmpq	%r12, %r14
	je	.LBB99_15
.LBB99_5:                               # %.lr.ph.i
	movq	%rsp, %r15
	.p2align	4, 0x90
.LBB99_6:                               # =>This Inner Loop Header: Depth=1
	cmpq	$0, 16(%rsp)
	je	.LBB99_7
# %bb.12:                               # %_ZNKSt8functionIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclES7_.exit.i
                                        #   in Loop: Header=BB99_6 Depth=1
.Ltmp1157:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	*24(%rsp)
.Ltmp1158:
# %bb.13:                               # %.noexc6
                                        #   in Loop: Header=BB99_6 Depth=1
	addq	$32, %r14
	cmpq	%r12, %r14
	jne	.LBB99_6
# %bb.14:                               # %.loopexit14.loopexit
	movq	16(%rsp), %rcx
	movq	24(%rsp), %rax
.LBB99_15:                              # %.loopexit14
	movaps	(%rsp), %xmm0
	movaps	32(%rsp), %xmm1
	movaps	%xmm1, (%rsp)
	movaps	%xmm0, 32(%rsp)
	movq	$0, 16(%rsp)
	movq	%rcx, 48(%rsp)
	movq	%rax, 56(%rsp)
	testq	%rcx, %rcx
	je	.LBB99_19
# %bb.16:
.Ltmp1166:
	leaq	32(%rsp), %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rcx
.Ltmp1167:
# %bb.17:                               # %_ZNSt14_Function_baseD2Ev.exit
	movq	16(%rsp), %rax
	testq	%rax, %rax
	je	.LBB99_19
# %bb.18:
.Ltmp1169:
	movq	%rsp, %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rax
.Ltmp1170:
.LBB99_19:                              # %_ZNSt14_Function_baseD2Ev.exit9
	movq	16(%rbx), %r14
	cmpq	$0, 104(%r14)
	jne	.LBB99_31
# %bb.20:
	testb	$1, 320(%r14)
	jne	.LBB99_31
# %bb.21:
	movq	8(%rbx), %rax
	subq	(%rbx), %rax
	sarq	$5, %rax
	movq	280(%r14), %r15
	movq	288(%r14), %r12
	movq	%r12, %rcx
	subq	%r15, %rcx
	sarq	$4, %rcx
	movq	%rax, %rsi
	subq	%rcx, %rsi
	jbe	.LBB99_23
# %bb.22:
	addq	$280, %r14                      # imm = 0x118
	movq	%r14, %rdi
	callq	_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm
	jmp	.LBB99_31
.LBB99_23:
	jae	.LBB99_31
# %bb.24:
	shlq	$4, %rax
	addq	%rax, %r15
	cmpq	%r15, %r12
	je	.LBB99_31
# %bb.25:                               # %.lr.ph.i.i.i.i.i.preheader
	movq	%r15, %rbx
	jmp	.LBB99_26
	.p2align	4, 0x90
.LBB99_28:                              #   in Loop: Header=BB99_26 Depth=1
	movq	$0, (%rbx)
.LBB99_29:                              # %_ZSt8_DestroyISt3anyEvPT_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB99_26 Depth=1
	addq	$16, %rbx
	cmpq	%r12, %rbx
	je	.LBB99_30
.LBB99_26:                              # %.lr.ph.i.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	(%rbx), %rax
	testq	%rax, %rax
	je	.LBB99_29
# %bb.27:                               #   in Loop: Header=BB99_26 Depth=1
.Ltmp1172:
	movl	$3, %edi
	movq	%rbx, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1173:
	jmp	.LBB99_28
.LBB99_30:                              # %_ZSt8_DestroyIPSt3anyS0_EvT_S2_RSaIT0_E.exit.i.i
	movq	%r15, 288(%r14)
.LBB99_31:                              # %_ZNSt6vectorISt3anySaIS0_EE6resizeEm.exit
	addq	$88, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB99_7:
	.cfi_def_cfa_offset 128
.Ltmp1160:
	callq	_ZSt25__throw_bad_function_callv
.Ltmp1161:
# %bb.11:                               # %.noexc
.LBB99_39:
.Ltmp1171:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB99_40:
.Ltmp1174:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB99_38:
.Ltmp1168:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB99_8:
.Ltmp1153:
	movq	%rax, %rbx
	movq	16(%rsp), %rcx
	testq	%rcx, %rcx
	je	.LBB99_10
# %bb.9:
.Ltmp1154:
	movq	%rsp, %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rcx
.Ltmp1155:
	jmp	.LBB99_10
.LBB99_37:
.Ltmp1156:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB99_32:                              # %.loopexit
.Ltmp1159:
	jmp	.LBB99_34
.LBB99_33:                              # %.loopexit.split-lp
.Ltmp1162:
.LBB99_34:
	movq	%rax, %rbx
	movq	16(%rsp), %rcx
	testq	%rcx, %rcx
	je	.LBB99_10
# %bb.35:
.Ltmp1163:
	movq	%rsp, %rdi
	movq	%rdi, %rsi
	movl	$3, %edx
	callq	*%rcx
.Ltmp1164:
.LBB99_10:                              # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB99_36:
.Ltmp1165:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end99:
	.size	_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE, .Lfunc_end99-_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE
	.cfi_endproc
	.section	.gcc_except_table._ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE,"aG",@progbits,_ZZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEET_SF_SF_St17basic_string_viewIcS7_EEN11ActionApplyclERSt8functionIFvRKS9_EE,comdat
	.p2align	2, 0x0
GCC_except_table99:
.Lexception48:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase27-.Lttbaseref27
.Lttbaseref27:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end48-.Lcst_begin48
.Lcst_begin48:
	.uleb128 .Ltmp1151-.Lfunc_begin48       # >> Call Site 1 <<
	.uleb128 .Ltmp1152-.Ltmp1151            #   Call between .Ltmp1151 and .Ltmp1152
	.uleb128 .Ltmp1153-.Lfunc_begin48       #     jumps to .Ltmp1153
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1157-.Lfunc_begin48       # >> Call Site 2 <<
	.uleb128 .Ltmp1158-.Ltmp1157            #   Call between .Ltmp1157 and .Ltmp1158
	.uleb128 .Ltmp1159-.Lfunc_begin48       #     jumps to .Ltmp1159
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1166-.Lfunc_begin48       # >> Call Site 3 <<
	.uleb128 .Ltmp1167-.Ltmp1166            #   Call between .Ltmp1166 and .Ltmp1167
	.uleb128 .Ltmp1168-.Lfunc_begin48       #     jumps to .Ltmp1168
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1169-.Lfunc_begin48       # >> Call Site 4 <<
	.uleb128 .Ltmp1170-.Ltmp1169            #   Call between .Ltmp1169 and .Ltmp1170
	.uleb128 .Ltmp1171-.Lfunc_begin48       #     jumps to .Ltmp1171
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1170-.Lfunc_begin48       # >> Call Site 5 <<
	.uleb128 .Ltmp1172-.Ltmp1170            #   Call between .Ltmp1170 and .Ltmp1172
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1172-.Lfunc_begin48       # >> Call Site 6 <<
	.uleb128 .Ltmp1173-.Ltmp1172            #   Call between .Ltmp1172 and .Ltmp1173
	.uleb128 .Ltmp1174-.Lfunc_begin48       #     jumps to .Ltmp1174
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1160-.Lfunc_begin48       # >> Call Site 7 <<
	.uleb128 .Ltmp1161-.Ltmp1160            #   Call between .Ltmp1160 and .Ltmp1161
	.uleb128 .Ltmp1162-.Lfunc_begin48       #     jumps to .Ltmp1162
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1154-.Lfunc_begin48       # >> Call Site 8 <<
	.uleb128 .Ltmp1155-.Ltmp1154            #   Call between .Ltmp1154 and .Ltmp1155
	.uleb128 .Ltmp1156-.Lfunc_begin48       #     jumps to .Ltmp1156
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1163-.Lfunc_begin48       # >> Call Site 9 <<
	.uleb128 .Ltmp1164-.Ltmp1163            #   Call between .Ltmp1163 and .Ltmp1164
	.uleb128 .Ltmp1165-.Lfunc_begin48       #     jumps to .Ltmp1165
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1164-.Lfunc_begin48       # >> Call Site 10 <<
	.uleb128 .Lfunc_end99-.Ltmp1164         #   Call between .Ltmp1164 and .Lfunc_end99
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end48:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase27:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm,"axG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm,comdat
	.weak	_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm # -- Begin function _ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm
	.p2align	4, 0x90
	.type	_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm,@function
_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm: # @_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm
.Lfunc_begin49:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception49
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	testq	%rsi, %rsi
	je	.LBB100_20
# %bb.1:
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	8(%rdi), %r15
	movq	16(%rdi), %rax
	subq	%r15, %rax
	sarq	$4, %rax
	cmpq	%rsi, %rax
	jae	.LBB100_2
# %bb.3:
	movabsq	$576460752303423487, %rax       # imm = 0x7FFFFFFFFFFFFFF
	movq	(%rbx), %rbp
	movq	%r15, %r12
	subq	%rbp, %r12
	shrq	$4, %r12
	movq	%r12, %rcx
	xorq	%rax, %rcx
	cmpq	%r14, %rcx
	jb	.LBB100_21
# %bb.4:                                # %_ZNKSt6vectorISt3anySaIS0_EE12_M_check_lenEmPKc.exit
	cmpq	%r14, %r12
	movq	%r14, %rcx
	cmovaq	%r12, %rcx
	leaq	(%rcx,%r12), %r13
	cmpq	%rax, %r13
	cmovaq	%rax, %r13
	addq	%r12, %rcx
	cmovbq	%rax, %r13
	testq	%r13, %r13
	je	.LBB100_5
# %bb.6:                                # %_ZNSt16allocator_traitsISaISt3anyEE8allocateERS1_m.exit.i
	movq	%r13, %rdi
	shlq	$4, %rdi
	callq	_Znwm
	movq	(%rbx), %rbp
	movq	8(%rbx), %r15
	jmp	.LBB100_7
.LBB100_2:                              # %_ZSt27__uninitialized_default_n_aIPSt3anymS0_ET_S2_T0_RSaIT1_E.exit
	shlq	$4, %r14
	movq	%r15, %rdi
	xorl	%esi, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	addq	%r15, %r14
	movq	%r14, 8(%rbx)
	jmp	.LBB100_20
.LBB100_5:
	xorl	%eax, %eax
.LBB100_7:
	shlq	$4, %r12
	movq	%rax, 8(%rsp)                   # 8-byte Spill
	addq	%rax, %r12
	shlq	$4, %r14
	movq	%r12, %rdi
	xorl	%esi, %esi
	movq	%r14, %rdx
	callq	memset@PLT
	cmpq	%r15, %rbp
	je	.LBB100_17
# %bb.8:                                # %.lr.ph.i.i.i.i.preheader
	movq	%r13, 16(%rsp)                  # 8-byte Spill
	movq	%rbx, 24(%rsp)                  # 8-byte Spill
	leaq	32(%rsp), %r13
	movq	8(%rsp), %rbx                   # 8-byte Reload
	jmp	.LBB100_9
	.p2align	4, 0x90
.LBB100_15:                             # %_ZSt19__relocate_object_aISt3anyS0_SaIS0_EEvPT_PT0_RT1_.exit.i.i.i.i
                                        #   in Loop: Header=BB100_9 Depth=1
	addq	$16, %rbp
	addq	$16, %rbx
	cmpq	%r15, %rbp
	je	.LBB100_16
.LBB100_9:                              # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	$0, 8(%rbx)
	movq	(%rbp), %rax
	testq	%rax, %rax
	je	.LBB100_10
# %bb.11:                               #   in Loop: Header=BB100_9 Depth=1
	movq	%rbx, 32(%rsp)
.Ltmp1175:
	movl	$4, %edi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	*%rax
.Ltmp1176:
# %bb.12:                               # %_ZNSt16allocator_traitsISaISt3anyEE9constructIS0_JS0_EEEvRS1_PT_DpOT0_.exit.i.i.i.i.i
                                        #   in Loop: Header=BB100_9 Depth=1
	movq	(%rbp), %rax
	testq	%rax, %rax
	jne	.LBB100_13
	jmp	.LBB100_15
	.p2align	4, 0x90
.LBB100_10:                             #   in Loop: Header=BB100_9 Depth=1
	movq	$0, (%rbx)
	movq	(%rbp), %rax
	testq	%rax, %rax
	je	.LBB100_15
.LBB100_13:                             #   in Loop: Header=BB100_9 Depth=1
.Ltmp1178:
	movl	$3, %edi
	movq	%rbp, %rsi
	xorl	%edx, %edx
	callq	*%rax
.Ltmp1179:
# %bb.14:                               #   in Loop: Header=BB100_9 Depth=1
	movq	$0, (%rbp)
	jmp	.LBB100_15
.LBB100_16:                             # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exitthread-pre-split
	movq	24(%rsp), %rbx                  # 8-byte Reload
	movq	(%rbx), %r15
	movq	16(%rsp), %r13                  # 8-byte Reload
.LBB100_17:                             # %_ZNSt6vectorISt3anySaIS0_EE11_S_relocateEPS0_S3_S3_RS1_.exit
	testq	%r15, %r15
	movq	8(%rsp), %rbp                   # 8-byte Reload
	je	.LBB100_19
# %bb.18:
	movq	%r15, %rdi
	callq	_ZdlPv
.LBB100_19:                             # %_ZNSt12_Vector_baseISt3anySaIS0_EE13_M_deallocateEPS0_m.exit32
	movq	%rbp, (%rbx)
	addq	%r14, %r12
	movq	%r12, 8(%rbx)
	shlq	$4, %r13
	addq	%rbp, %r13
	movq	%r13, 16(%rbx)
.LBB100_20:
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB100_21:
	.cfi_def_cfa_offset 96
	movl	$.L.str.71, %edi
	callq	_ZSt20__throw_length_errorPKc
.LBB100_23:
.Ltmp1180:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB100_22:
.Ltmp1177:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end100:
	.size	_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm, .Lfunc_end100-_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm
	.cfi_endproc
	.section	.gcc_except_table._ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm,"aG",@progbits,_ZNSt6vectorISt3anySaIS0_EE17_M_default_appendEm,comdat
	.p2align	2, 0x0
GCC_except_table100:
.Lexception49:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase28-.Lttbaseref28
.Lttbaseref28:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end49-.Lcst_begin49
.Lcst_begin49:
	.uleb128 .Lfunc_begin49-.Lfunc_begin49  # >> Call Site 1 <<
	.uleb128 .Ltmp1175-.Lfunc_begin49       #   Call between .Lfunc_begin49 and .Ltmp1175
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1175-.Lfunc_begin49       # >> Call Site 2 <<
	.uleb128 .Ltmp1176-.Ltmp1175            #   Call between .Ltmp1175 and .Ltmp1176
	.uleb128 .Ltmp1177-.Lfunc_begin49       #     jumps to .Ltmp1177
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1178-.Lfunc_begin49       # >> Call Site 3 <<
	.uleb128 .Ltmp1179-.Ltmp1178            #   Call between .Ltmp1178 and .Ltmp1179
	.uleb128 .Ltmp1180-.Lfunc_begin49       #     jumps to .Ltmp1180
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1179-.Lfunc_begin49       # >> Call Site 4 <<
	.uleb128 .Lfunc_end100-.Ltmp1179        #   Call between .Ltmp1179 and .Lfunc_end100
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end49:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase28:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument33throw_required_arg_not_used_errorEv,"axG",@progbits,_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv,comdat
	.weak	_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv # -- Begin function _ZNK8argparse8Argument33throw_required_arg_not_used_errorEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv,@function
_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv: # @_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv
.Lfunc_begin50:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception50
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$424, %rsp                      # imm = 0x1A8
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	48(%rsp), %rdi
	movq	(%rbx), %rax
	movq	(%rax), %rsi
	movq	8(%rax), %rdx
.Ltmp1181:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1182:
# %bb.1:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
.Ltmp1183:
	movl	$.L.str.72, %esi
	movl	$11, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1184:
# %bb.2:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
	leaq	16(%rsp), %r15
	movq	%r15, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	movq	96(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB101_3
# %bb.6:
	leaq	128(%rsp), %rsi
.Ltmp1188:
	movq	%rsp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1189:
	jmp	.LBB101_7
.LBB101_3:                              # %.invoke.i.i
	movq	80(%rsp), %r8
	movq	88(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1186:
	movq	%rsp, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1187:
.LBB101_7:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movb	$1, %bpl
.Ltmp1191:
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1192:
# %bb.8:
	xorl	%ebp, %ebp
.Ltmp1193:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1194:
# %bb.17:
.LBB101_10:
.Ltmp1195:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB101_12
# %bb.11:
	callq	_ZdlPv
.LBB101_12:                             # %.body
	testb	%bpl, %bpl
	jne	.LBB101_13
	jmp	.LBB101_14
.LBB101_4:
.Ltmp1190:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB101_13
# %bb.5:
	callq	_ZdlPv
.LBB101_13:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	jmp	.LBB101_14
.LBB101_9:
.Ltmp1185:
	movq	%rax, %r14
.LBB101_14:
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 32(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 56(%rsp)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB101_16
# %bb.15:
	callq	_ZdlPv
.LBB101_16:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 56(%rsp)
	leaq	112(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 32(%rsp,%rax)
	movq	$0, 40(%rsp)
	leaq	160(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end101:
	.size	_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv, .Lfunc_end101-_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument33throw_required_arg_not_used_errorEv,"aG",@progbits,_ZNK8argparse8Argument33throw_required_arg_not_used_errorEv,comdat
	.p2align	2, 0x0
GCC_except_table101:
.Lexception50:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end50-.Lcst_begin50
.Lcst_begin50:
	.uleb128 .Lfunc_begin50-.Lfunc_begin50  # >> Call Site 1 <<
	.uleb128 .Ltmp1181-.Lfunc_begin50       #   Call between .Lfunc_begin50 and .Ltmp1181
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1181-.Lfunc_begin50       # >> Call Site 2 <<
	.uleb128 .Ltmp1184-.Ltmp1181            #   Call between .Ltmp1181 and .Ltmp1184
	.uleb128 .Ltmp1185-.Lfunc_begin50       #     jumps to .Ltmp1185
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1184-.Lfunc_begin50       # >> Call Site 3 <<
	.uleb128 .Ltmp1188-.Ltmp1184            #   Call between .Ltmp1184 and .Ltmp1188
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1188-.Lfunc_begin50       # >> Call Site 4 <<
	.uleb128 .Ltmp1187-.Ltmp1188            #   Call between .Ltmp1188 and .Ltmp1187
	.uleb128 .Ltmp1190-.Lfunc_begin50       #     jumps to .Ltmp1190
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1191-.Lfunc_begin50       # >> Call Site 5 <<
	.uleb128 .Ltmp1194-.Ltmp1191            #   Call between .Ltmp1191 and .Ltmp1194
	.uleb128 .Ltmp1195-.Lfunc_begin50       #     jumps to .Ltmp1195
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1194-.Lfunc_begin50       # >> Call Site 6 <<
	.uleb128 .Lfunc_end101-.Ltmp1194        #   Call between .Ltmp1194 and .Lfunc_end101
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end50:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv,"axG",@progbits,_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv,comdat
	.weak	_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv # -- Begin function _ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv,@function
_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv: # @_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv
.Lfunc_begin51:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception51
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$424, %rsp                      # imm = 0x1A8
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	32(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	48(%rsp), %rdi
	movq	24(%rbx), %rdx
	movq	32(%rbx), %rsi
.Ltmp1196:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1197:
# %bb.1:                                # %_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St17basic_string_viewIS3_S4_E.exit
.Ltmp1198:
	movl	$.L.str.73, %esi
	movl	$20, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1199:
# %bb.2:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
	leaq	16(%rsp), %r15
	movq	%r15, (%rsp)
	movq	$0, 8(%rsp)
	movb	$0, 16(%rsp)
	movq	96(%rsp), %rax
	testq	%rax, %rax
	jne	.LBB102_3
# %bb.6:
	leaq	128(%rsp), %rsi
.Ltmp1203:
	movq	%rsp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1204:
	jmp	.LBB102_7
.LBB102_3:                              # %.invoke.i.i
	movq	80(%rsp), %r8
	movq	88(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1201:
	movq	%rsp, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1202:
.LBB102_7:                              # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movb	$1, %bpl
.Ltmp1206:
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1207:
# %bb.8:
	xorl	%ebp, %ebp
.Ltmp1208:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1209:
# %bb.17:
.LBB102_10:
.Ltmp1210:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB102_12
# %bb.11:
	callq	_ZdlPv
.LBB102_12:                             # %.body
	testb	%bpl, %bpl
	jne	.LBB102_13
	jmp	.LBB102_14
.LBB102_4:
.Ltmp1205:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB102_13
# %bb.5:
	callq	_ZdlPv
.LBB102_13:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	jmp	.LBB102_14
.LBB102_9:
.Ltmp1200:
	movq	%rax, %r14
.LBB102_14:
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 32(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 56(%rsp)
	movq	128(%rsp), %rdi
	leaq	144(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB102_16
# %bb.15:
	callq	_ZdlPv
.LBB102_16:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 56(%rsp)
	leaq	112(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 32(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 32(%rsp,%rax)
	movq	$0, 40(%rsp)
	leaq	160(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end102:
	.size	_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv, .Lfunc_end102-_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv,"aG",@progbits,_ZNK8argparse8Argument42throw_required_arg_no_value_provided_errorEv,comdat
	.p2align	2, 0x0
GCC_except_table102:
.Lexception51:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end51-.Lcst_begin51
.Lcst_begin51:
	.uleb128 .Lfunc_begin51-.Lfunc_begin51  # >> Call Site 1 <<
	.uleb128 .Ltmp1196-.Lfunc_begin51       #   Call between .Lfunc_begin51 and .Ltmp1196
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1196-.Lfunc_begin51       # >> Call Site 2 <<
	.uleb128 .Ltmp1199-.Ltmp1196            #   Call between .Ltmp1196 and .Ltmp1199
	.uleb128 .Ltmp1200-.Lfunc_begin51       #     jumps to .Ltmp1200
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1199-.Lfunc_begin51       # >> Call Site 3 <<
	.uleb128 .Ltmp1203-.Ltmp1199            #   Call between .Ltmp1199 and .Ltmp1203
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1203-.Lfunc_begin51       # >> Call Site 4 <<
	.uleb128 .Ltmp1202-.Ltmp1203            #   Call between .Ltmp1203 and .Ltmp1202
	.uleb128 .Ltmp1205-.Lfunc_begin51       #     jumps to .Ltmp1205
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1206-.Lfunc_begin51       # >> Call Site 5 <<
	.uleb128 .Ltmp1209-.Ltmp1206            #   Call between .Ltmp1206 and .Ltmp1209
	.uleb128 .Ltmp1210-.Lfunc_begin51       #     jumps to .Ltmp1210
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1209-.Lfunc_begin51       # >> Call Site 6 <<
	.uleb128 .Lfunc_end102-.Ltmp1209        #   Call between .Ltmp1209 and .Lfunc_end102
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end51:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument34throw_nargs_range_validation_errorEv,"axG",@progbits,_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv,comdat
	.weak	_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv # -- Begin function _ZNK8argparse8Argument34throw_nargs_range_validation_errorEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv,@function
_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv: # @_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv
.Lfunc_begin52:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception52
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$432, %rsp                      # imm = 0x1B0
	.cfi_def_cfa_offset 464
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, %rbx
	leaq	40(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	movq	24(%rbx), %rdx
	leaq	56(%rsp), %r14
	testq	%rdx, %rdx
	jne	.LBB103_1
# %bb.3:
	movq	(%rbx), %rax
	movq	8(%rax), %rdx
	jmp	.LBB103_4
.LBB103_1:
	leaq	32(%rbx), %rax
.LBB103_4:                              # %.invoke
	movq	(%rax), %rsi
.Ltmp1211:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1212:
# %bb.5:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit.invoke
.Ltmp1213:
	movl	$.L.str.74, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1214:
# %bb.6:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	304(%rbx), %rsi
	movq	312(%rbx), %rax
	cmpq	%rax, %rsi
	jne	.LBB103_7
.LBB103_11:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit11.invoke
.Ltmp1223:
	movq	%r14, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
.Ltmp1224:
.LBB103_14:                             # %_ZNSolsEm.exit
	leaq	56(%rsp), %r14
.Ltmp1225:
	movl	$.L.str.77, %esi
	movl	$23, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1226:
# %bb.15:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit15
	movq	288(%rbx), %rsi
	subq	280(%rbx), %rsi
	sarq	$4, %rsi
.Ltmp1227:
	movq	%r14, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
.Ltmp1228:
# %bb.16:                               # %_ZNSolsEm.exit16
.Ltmp1229:
	movl	$.L.str.78, %esi
	movl	$10, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1230:
# %bb.17:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit17
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1232:
	leaq	8(%rsp), %rdi
	leaq	40(%rsp), %rsi
	callq	_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv
.Ltmp1233:
# %bb.18:
	movb	$1, %bpl
.Ltmp1235:
	leaq	8(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1236:
# %bb.19:
	xorl	%ebp, %ebp
.Ltmp1237:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1238:
# %bb.28:
.LBB103_7:
	leaq	56(%rsp), %rdi
	cmpq	$-1, %rax
	jne	.LBB103_8
# %bb.12:
.Ltmp1219:
	callq	_ZNSo9_M_insertImEERSoT_
.Ltmp1220:
# %bb.13:                               # %_ZNSolsEm.exit13
.Ltmp1221:
	movl	$.L.str.76, %esi
	movl	$8, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1222:
	jmp	.LBB103_14
.LBB103_8:
.Ltmp1215:
	callq	_ZNSo9_M_insertImEERSoT_
.Ltmp1216:
# %bb.9:                                # %_ZNSolsEm.exit10
.Ltmp1217:
	movq	%rax, %r14
	movl	$.L.str.75, %esi
	movl	$4, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1218:
# %bb.10:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit11
	movq	312(%rbx), %rsi
	jmp	.LBB103_11
.LBB103_21:
.Ltmp1239:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB103_23
# %bb.22:
	callq	_ZdlPv
.LBB103_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	testb	%bpl, %bpl
	jne	.LBB103_24
	jmp	.LBB103_25
.LBB103_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp1234:
	movq	%rax, %rbx
.LBB103_24:
	movq	%r14, %rdi
	callq	__cxa_free_exception
	jmp	.LBB103_25
.LBB103_2:
.Ltmp1231:
	movq	%rax, %rbx
.LBB103_25:
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 40(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 40(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 56(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 64(%rsp)
	movq	136(%rsp), %rdi
	leaq	152(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB103_27
# %bb.26:
	callq	_ZdlPv
.LBB103_27:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 64(%rsp)
	leaq	120(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 40(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 40(%rsp,%rax)
	movq	$0, 48(%rsp)
	leaq	168(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end103:
	.size	_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv, .Lfunc_end103-_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument34throw_nargs_range_validation_errorEv,"aG",@progbits,_ZNK8argparse8Argument34throw_nargs_range_validation_errorEv,comdat
	.p2align	2, 0x0
GCC_except_table103:
.Lexception52:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end52-.Lcst_begin52
.Lcst_begin52:
	.uleb128 .Lfunc_begin52-.Lfunc_begin52  # >> Call Site 1 <<
	.uleb128 .Ltmp1211-.Lfunc_begin52       #   Call between .Lfunc_begin52 and .Ltmp1211
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1211-.Lfunc_begin52       # >> Call Site 2 <<
	.uleb128 .Ltmp1230-.Ltmp1211            #   Call between .Ltmp1211 and .Ltmp1230
	.uleb128 .Ltmp1231-.Lfunc_begin52       #     jumps to .Ltmp1231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1230-.Lfunc_begin52       # >> Call Site 3 <<
	.uleb128 .Ltmp1232-.Ltmp1230            #   Call between .Ltmp1230 and .Ltmp1232
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1232-.Lfunc_begin52       # >> Call Site 4 <<
	.uleb128 .Ltmp1233-.Ltmp1232            #   Call between .Ltmp1232 and .Ltmp1233
	.uleb128 .Ltmp1234-.Lfunc_begin52       #     jumps to .Ltmp1234
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1235-.Lfunc_begin52       # >> Call Site 5 <<
	.uleb128 .Ltmp1238-.Ltmp1235            #   Call between .Ltmp1235 and .Ltmp1238
	.uleb128 .Ltmp1239-.Lfunc_begin52       #     jumps to .Ltmp1239
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1219-.Lfunc_begin52       # >> Call Site 6 <<
	.uleb128 .Ltmp1218-.Ltmp1219            #   Call between .Ltmp1219 and .Ltmp1218
	.uleb128 .Ltmp1231-.Lfunc_begin52       #     jumps to .Ltmp1231
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1218-.Lfunc_begin52       # >> Call Site 7 <<
	.uleb128 .Lfunc_end103-.Ltmp1218        #   Call between .Ltmp1218 and .Lfunc_end103
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end52:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv,"axG",@progbits,_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv,comdat
	.weak	_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv # -- Begin function _ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv,@function
_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv: # @_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv
.Lfunc_begin53:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception53
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$240, %rsp
	.cfi_def_cfa_offset 272
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	cmpb	$0, 232(%rdi)
	je	.LBB104_37
# %bb.1:                                # %_ZNKRSt8optionalISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EEE5valueEv.exit
	movq	%rdi, %r14
	cmpq	$0, 104(%rdi)
	je	.LBB104_35
# %bb.2:
	movq	208(%r14), %rdi
	movq	216(%r14), %rsi
	leaq	152(%r14), %rdx
	callq	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag
	cmpq	216(%r14), %rax
	je	.LBB104_3
.LBB104_35:
	addq	$240, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB104_37:
	.cfi_def_cfa_offset 272
	callq	_ZSt27__throw_bad_optional_accessv
.LBB104_3:
	movq	208(%r14), %rsi
	leaq	32(%rsp), %rbx
	movq	%rbx, 16(%rsp)
	movq	$0, 24(%rsp)
	movb	$0, 32(%rsp)
.Ltmp1240:
	leaq	208(%rsp), %rdi
	leaq	16(%rsp), %rcx
	movq	%rax, %rdx
	callq	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_
.Ltmp1241:
# %bb.4:
	movq	16(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB104_6
# %bb.5:
	callq	_ZdlPv
.LBB104_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1243:
	leaq	48(%rsp), %rdi
	leaq	15(%rsp), %rdx
	movl	$.L.str.79, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
.Ltmp1244:
# %bb.7:
	addq	$120, %r14
.Ltmp1246:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movq	%r14, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
.Ltmp1247:
# %bb.8:
.Ltmp1249:
	leaq	112(%rsp), %rdi
	leaq	80(%rsp), %rsi
	movl	$.L.str.65, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1250:
# %bb.9:
.Ltmp1252:
	leaq	144(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	208(%rsp), %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_RKS8_
.Ltmp1253:
# %bb.10:
.Ltmp1255:
	leaq	176(%rsp), %rdi
	leaq	144(%rsp), %rsi
	movl	$.L.str.66, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1256:
# %bb.11:
	movb	$1, %bpl
.Ltmp1258:
	leaq	176(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt13runtime_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1259:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp1260:
	movl	$_ZTISt13runtime_error, %esi
	movl	$_ZNSt13runtime_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1261:
# %bb.36:
.LBB104_18:
.Ltmp1262:
	movq	%rax, %r14
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_19
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit30
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_21
.LBB104_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit31
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_23
.LBB104_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_25
.LBB104_26:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_27
.LBB104_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34
	testb	%bpl, %bpl
	jne	.LBB104_31
.LBB104_32:
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_33
	jmp	.LBB104_34
.LBB104_19:
	callq	_ZdlPv
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_22
	jmp	.LBB104_21
.LBB104_17:
.Ltmp1257:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_22
.LBB104_21:
	callq	_ZdlPv
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_24
	jmp	.LBB104_23
.LBB104_16:
.Ltmp1254:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	112(%rsp), %rdi
	leaq	128(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_24
.LBB104_23:
	callq	_ZdlPv
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_26
	jmp	.LBB104_25
.LBB104_15:
.Ltmp1251:
	movq	%rax, %r14
	movb	$1, %bpl
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_26
.LBB104_25:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_28
.LBB104_27:
	callq	_ZdlPv
	testb	%bpl, %bpl
	je	.LBB104_32
	jmp	.LBB104_31
.LBB104_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33.thread
.Ltmp1248:
	movq	%rax, %r14
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB104_31
# %bb.30:                               # %.thread
	callq	_ZdlPv
	jmp	.LBB104_31
.LBB104_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit34.thread
.Ltmp1245:
	movq	%rax, %r14
.LBB104_31:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB104_33
	jmp	.LBB104_34
.LBB104_13:
.Ltmp1242:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB104_34
.LBB104_33:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29.sink.split
	callq	_ZdlPv
.LBB104_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end104:
	.size	_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv, .Lfunc_end104-_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv,"aG",@progbits,_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEv,comdat
	.p2align	2, 0x0
GCC_except_table104:
.Lexception53:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end53-.Lcst_begin53
.Lcst_begin53:
	.uleb128 .Lfunc_begin53-.Lfunc_begin53  # >> Call Site 1 <<
	.uleb128 .Ltmp1240-.Lfunc_begin53       #   Call between .Lfunc_begin53 and .Ltmp1240
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1240-.Lfunc_begin53       # >> Call Site 2 <<
	.uleb128 .Ltmp1241-.Ltmp1240            #   Call between .Ltmp1240 and .Ltmp1241
	.uleb128 .Ltmp1242-.Lfunc_begin53       #     jumps to .Ltmp1242
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1241-.Lfunc_begin53       # >> Call Site 3 <<
	.uleb128 .Ltmp1243-.Ltmp1241            #   Call between .Ltmp1241 and .Ltmp1243
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1243-.Lfunc_begin53       # >> Call Site 4 <<
	.uleb128 .Ltmp1244-.Ltmp1243            #   Call between .Ltmp1243 and .Ltmp1244
	.uleb128 .Ltmp1245-.Lfunc_begin53       #     jumps to .Ltmp1245
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1246-.Lfunc_begin53       # >> Call Site 5 <<
	.uleb128 .Ltmp1247-.Ltmp1246            #   Call between .Ltmp1246 and .Ltmp1247
	.uleb128 .Ltmp1248-.Lfunc_begin53       #     jumps to .Ltmp1248
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1249-.Lfunc_begin53       # >> Call Site 6 <<
	.uleb128 .Ltmp1250-.Ltmp1249            #   Call between .Ltmp1249 and .Ltmp1250
	.uleb128 .Ltmp1251-.Lfunc_begin53       #     jumps to .Ltmp1251
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1252-.Lfunc_begin53       # >> Call Site 7 <<
	.uleb128 .Ltmp1253-.Ltmp1252            #   Call between .Ltmp1252 and .Ltmp1253
	.uleb128 .Ltmp1254-.Lfunc_begin53       #     jumps to .Ltmp1254
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1255-.Lfunc_begin53       # >> Call Site 8 <<
	.uleb128 .Ltmp1256-.Ltmp1255            #   Call between .Ltmp1255 and .Ltmp1256
	.uleb128 .Ltmp1257-.Lfunc_begin53       #     jumps to .Ltmp1257
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1258-.Lfunc_begin53       # >> Call Site 9 <<
	.uleb128 .Ltmp1261-.Ltmp1258            #   Call between .Ltmp1258 and .Ltmp1261
	.uleb128 .Ltmp1262-.Lfunc_begin53       #     jumps to .Ltmp1262
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1261-.Lfunc_begin53       # >> Call Site 10 <<
	.uleb128 .Lfunc_end104-.Ltmp1261        #   Call between .Ltmp1261 and .Lfunc_end104
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end53:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_,"axG",@progbits,_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_,comdat
	.weak	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_ # -- Begin function _ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_
	.p2align	4, 0x90
	.type	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_,@function
_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_: # @_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %rbx
	movq	%rdi, 48(%rsp)                  # 8-byte Spill
	cmpq	%rdx, %rsi
	je	.LBB105_16
# %bb.1:                                # %.lr.ph
	movq	%rdx, %r15
	movq	%rsi, %r12
	leaq	16(%rbx), %rbp
	leaq	32(%rsp), %r13
	leaq	15(%rsp), %r14
	jmp	.LBB105_2
	.p2align	4, 0x90
.LBB105_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB105_2 Depth=1
	addq	$32, %r12
	cmpq	%r15, %r12
	je	.LBB105_16
.LBB105_2:                              # =>This Inner Loop Header: Depth=1
	leaq	16(%rsp), %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	movq	%r12, %rcx
	callq	_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
	movq	16(%rsp), %rcx
	cmpq	%r13, %rcx
	je	.LBB105_3
# %bb.8:                                #   in Loop: Header=BB105_2 Depth=1
	movq	(%rbx), %rax
	cmpq	%rbp, %rax
	je	.LBB105_9
# %bb.11:                               #   in Loop: Header=BB105_2 Depth=1
	movq	16(%rbx), %rdx
	movq	%rcx, (%rbx)
	movups	24(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
	testq	%rax, %rax
	je	.LBB105_10
# %bb.12:                               #   in Loop: Header=BB105_2 Depth=1
	movq	%rax, 16(%rsp)
	movq	%rdx, 32(%rsp)
	jmp	.LBB105_13
	.p2align	4, 0x90
.LBB105_3:                              #   in Loop: Header=BB105_2 Depth=1
	movq	24(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB105_7
# %bb.4:                                #   in Loop: Header=BB105_2 Depth=1
	movq	(%rbx), %rdi
	cmpq	$1, %rdx
	jne	.LBB105_6
# %bb.5:                                #   in Loop: Header=BB105_2 Depth=1
	movzbl	32(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB105_7
	.p2align	4, 0x90
.LBB105_9:                              # %.thread.i
                                        #   in Loop: Header=BB105_2 Depth=1
	movq	%rcx, (%rbx)
	movups	24(%rsp), %xmm0
	movups	%xmm0, 8(%rbx)
.LBB105_10:                             #   in Loop: Header=BB105_2 Depth=1
	movq	%r13, 16(%rsp)
	movq	%r13, %rax
	jmp	.LBB105_13
.LBB105_6:                              #   in Loop: Header=BB105_2 Depth=1
	movq	%r13, %rsi
	callq	memcpy@PLT
.LBB105_7:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB105_2 Depth=1
	movq	24(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
	movq	16(%rsp), %rax
.LBB105_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB105_2 Depth=1
	movq	$0, 24(%rsp)
	movb	$0, (%rax)
	movq	16(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB105_15
# %bb.14:                               #   in Loop: Header=BB105_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB105_15
.LBB105_16:                             # %._crit_edge
	movq	48(%rsp), %rax                  # 8-byte Reload
	leaq	16(%rax), %rcx
	movq	%rcx, (%rax)
	movq	(%rbx), %rdx
	leaq	16(%rbx), %rsi
	cmpq	%rsi, %rdx
	je	.LBB105_17
# %bb.18:
	movq	%rdx, (%rax)
	movq	(%rsi), %rcx
	movq	%rcx, 16(%rax)
	jmp	.LBB105_19
.LBB105_17:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rcx)
.LBB105_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rbx), %rcx
	movq	%rcx, 8(%rax)
	movq	%rsi, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end105:
	.size	_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_, .Lfunc_end105-_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEES7_ZNK8argparse8Argument38find_default_value_in_choices_or_throwEvEUlRS8_SG_E_ET0_T_SJ_SI_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag,"axG",@progbits,_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag,comdat
	.weak	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag # -- Begin function _ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag
	.p2align	4, 0x90
	.type	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag,@function
_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag: # @_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	%rsi, %rax
	subq	%rdi, %rax
	cmpq	$128, %rax
	jl	.LBB106_19
# %bb.1:                                # %.lr.ph
	movq	%rax, %r13
	sarq	$7, %r13
	cmpb	$0, 32(%r15)
	je	.LBB106_17
# %bb.2:                                # %.lr.ph.split
	movq	8(%r15), %r12
	incq	%r13
	leaq	64(%rbx), %rbp
	jmp	.LBB106_4
	.p2align	4, 0x90
.LBB106_3:                              # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit24.thread
                                        #   in Loop: Header=BB106_4 Depth=1
	subq	$-128, %rbx
	decq	%r13
	subq	$-128, %rbp
	cmpq	$1, %r13
	jle	.LBB106_18
.LBB106_4:                              # =>This Inner Loop Header: Depth=1
	cmpq	%r12, -56(%rbp)
	jne	.LBB106_7
# %bb.5:                                #   in Loop: Header=BB106_4 Depth=1
	testq	%r12, %r12
	je	.LBB106_46
# %bb.6:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit
                                        #   in Loop: Header=BB106_4 Depth=1
	movq	(%r15), %rsi
	movq	-64(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_40
.LBB106_7:                              # %.thread
                                        #   in Loop: Header=BB106_4 Depth=1
	cmpq	%r12, -24(%rbp)
	jne	.LBB106_10
# %bb.8:                                #   in Loop: Header=BB106_4 Depth=1
	testq	%r12, %r12
	je	.LBB106_41
# %bb.9:                                # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit18
                                        #   in Loop: Header=BB106_4 Depth=1
	movq	(%r15), %rsi
	movq	-32(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_42
.LBB106_10:                             # %.thread55
                                        #   in Loop: Header=BB106_4 Depth=1
	cmpq	%r12, 8(%rbp)
	jne	.LBB106_13
# %bb.11:                               #   in Loop: Header=BB106_4 Depth=1
	testq	%r12, %r12
	je	.LBB106_43
# %bb.12:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit21
                                        #   in Loop: Header=BB106_4 Depth=1
	movq	(%r15), %rsi
	movq	(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_45
.LBB106_13:                             # %.thread60
                                        #   in Loop: Header=BB106_4 Depth=1
	cmpq	%r12, 40(%rbp)
	jne	.LBB106_3
# %bb.14:                               #   in Loop: Header=BB106_4 Depth=1
	testq	%r12, %r12
	je	.LBB106_44
# %bb.15:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit24
                                        #   in Loop: Header=BB106_4 Depth=1
	movq	(%r15), %rsi
	movq	32(%rbp), %rdi
	movq	%r12, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	jne	.LBB106_3
# %bb.16:
	addq	$96, %rbx
	jmp	.LBB106_46
.LBB106_17:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit24.thread.us.preheader
	andq	$-128, %rax
	testq	%r13, %r13
	movl	$1, %ecx
	cmovleq	%r13, %rcx
	shlq	$7, %rcx
	subq	%rcx, %rax
	addq	%rax, %rbx
	addq	$128, %rbx
	jmp	.LBB106_19
.LBB106_18:                             # %._crit_edge.loopexit
	addq	$-64, %rbp
	movq	%rbp, %rbx
.LBB106_19:                             # %._crit_edge
	movq	%r14, %rax
	subq	%rbx, %rax
	sarq	$5, %rax
	cmpq	$3, %rax
	je	.LBB106_24
# %bb.20:                               # %._crit_edge
	cmpq	$2, %rax
	je	.LBB106_29
# %bb.21:                               # %._crit_edge
	cmpq	$1, %rax
	jne	.LBB106_38
# %bb.22:                               # %._crit_edge._crit_edge74
	movzbl	32(%r15), %ebp
	testb	%bpl, %bpl
	jne	.LBB106_34
	jmp	.LBB106_38
.LBB106_24:
	movzbl	32(%r15), %ebp
	testb	%bpl, %bpl
	je	.LBB106_28
# %bb.25:
	movq	8(%rbx), %rdx
	cmpq	8(%r15), %rdx
	jne	.LBB106_28
# %bb.26:
	testq	%rdx, %rdx
	je	.LBB106_46
# %bb.27:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit27
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_46
.LBB106_28:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit27.thread
	addq	$32, %rbx
	testb	%bpl, %bpl
	jne	.LBB106_30
	jmp	.LBB106_33
.LBB106_29:                             # %._crit_edge._crit_edge
	movzbl	32(%r15), %ebp
	testb	%bpl, %bpl
	je	.LBB106_33
.LBB106_30:
	movq	8(%rbx), %rdx
	cmpq	8(%r15), %rdx
	jne	.LBB106_33
# %bb.31:
	testq	%rdx, %rdx
	je	.LBB106_46
# %bb.32:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit30
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_46
.LBB106_33:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit30.thread
	addq	$32, %rbx
	testb	%bpl, %bpl
	je	.LBB106_38
.LBB106_34:
	movq	8(%rbx), %rdx
	cmpq	8(%r15), %rdx
	jne	.LBB106_38
# %bb.35:
	testq	%rdx, %rdx
	je	.LBB106_46
# %bb.36:                               # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit33
	movq	(%r15), %rsi
	movq	(%rbx), %rdi
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB106_46
.LBB106_38:
	movq	%r14, %rbx
.LBB106_46:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit.thread52
	movq	%rbx, %rax
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB106_40:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit._ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit.thread52.loopexit_crit_edge
	.cfi_def_cfa_offset 64
	addq	$-64, %rbp
	jmp	.LBB106_45
.LBB106_41:                             # %._ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit.thread52.loopexitsplit_crit_edge
	addq	$-32, %rbp
	jmp	.LBB106_45
.LBB106_42:
	addq	$32, %rbx
	jmp	.LBB106_46
.LBB106_43:
	addq	$64, %rbx
	jmp	.LBB106_46
.LBB106_44:                             # %._ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit.thread52.loopexitsplitsplitsplit_crit_edge
	addq	$32, %rbp
.LBB106_45:                             # %_ZN9__gnu_cxx5__ops16_Iter_equals_valIKSt8optionalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEclINS_17__normal_iteratorIPKS8_St6vectorIS8_SaIS8_EEEEEEbT_.exit.thread52
	movq	%rbp, %rbx
	jmp	.LBB106_46
.Lfunc_end106:
	.size	_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag, .Lfunc_end106-_ZSt9__find_ifIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops16_Iter_equals_valIKSt8optionalIS7_EEEET_SK_SK_T0_St26random_access_iterator_tag
	.cfi_endproc
                                        # -- End function
	.section	.text._ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,"axG",@progbits,_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,comdat
	.weak	_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_ # -- Begin function _ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
	.p2align	4, 0x90
	.type	_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,@function
_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_: # @_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
.Lfunc_begin54:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception54
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	movq	8(%rdx), %r12
	testq	%r12, %r12
	movl	$.L.str.68, %eax
	movl	$.L.str.17, %r15d
	cmoveq	%rax, %r15
	leaq	24(%rsp), %rbp
	movq	%rbp, 8(%rsp)
	movq	(%rdx), %r13
	movq	%r12, (%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r12
	jb	.LBB107_2
# %bb.1:                                # %.noexc6.i.i
	leaq	8(%rsp), %rdi
	movq	%rsp, %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movq	%rcx, 24(%rsp)
.LBB107_2:                              # %._crit_edge.i.i.i.i.i
	testq	%r12, %r12
	je	.LBB107_6
# %bb.3:                                # %._crit_edge.i.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB107_5
# %bb.4:
	movzbl	(%r13), %ecx
	movb	%cl, (%rax)
	jmp	.LBB107_6
.LBB107_5:
	movq	%rax, %rdi
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB107_6:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	xorl	%edx, %edx
	testq	%r12, %r12
	setne	%dl
	movq	(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	addq	%rdx, %rdx
	movabsq	$4611686018427387903, %rax      # imm = 0x3FFFFFFFFFFFFFFF
	subq	16(%rsp), %rax
	cmpq	%rdx, %rax
	jb	.LBB107_7
# %bb.13:                               # %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
.Ltmp1263:
	leaq	8(%rsp), %rdi
	movq	%r15, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1264:
# %bb.14:                               # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp1265:
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1266:
# %bb.15:                               # %.noexc
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB107_16
# %bb.17:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB107_18
.LBB107_16:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB107_18:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB107_20
# %bb.19:
	callq	_ZdlPv
.LBB107_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB107_7:
	.cfi_def_cfa_offset 96
.Ltmp1268:
	movl	$.L.str.69, %edi
	callq	_ZSt20__throw_length_errorPKc
.Ltmp1269:
# %bb.8:                                # %.noexc.i
.LBB107_21:
.Ltmp1267:
	jmp	.LBB107_10
.LBB107_9:
.Ltmp1270:
.LBB107_10:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB107_12
# %bb.11:
	callq	_ZdlPv
.LBB107_12:                             # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end107:
	.size	_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_, .Lfunc_end107-_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
	.cfi_endproc
	.section	.gcc_except_table._ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,"aG",@progbits,_ZZNK8argparse8Argument38find_default_value_in_choices_or_throwEvENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,comdat
	.p2align	2, 0x0
GCC_except_table107:
.Lexception54:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end54-.Lcst_begin54
.Lcst_begin54:
	.uleb128 .Lfunc_begin54-.Lfunc_begin54  # >> Call Site 1 <<
	.uleb128 .Ltmp1263-.Lfunc_begin54       #   Call between .Lfunc_begin54 and .Ltmp1263
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1263-.Lfunc_begin54       # >> Call Site 2 <<
	.uleb128 .Ltmp1264-.Ltmp1263            #   Call between .Ltmp1263 and .Ltmp1264
	.uleb128 .Ltmp1270-.Lfunc_begin54       #     jumps to .Ltmp1270
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1265-.Lfunc_begin54       # >> Call Site 3 <<
	.uleb128 .Ltmp1266-.Ltmp1265            #   Call between .Ltmp1265 and .Ltmp1266
	.uleb128 .Ltmp1267-.Lfunc_begin54       #     jumps to .Ltmp1267
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1268-.Lfunc_begin54       # >> Call Site 4 <<
	.uleb128 .Ltmp1269-.Ltmp1268            #   Call between .Ltmp1268 and .Ltmp1269
	.uleb128 .Ltmp1270-.Lfunc_begin54       #     jumps to .Ltmp1270
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1269-.Lfunc_begin54       # >> Call Site 5 <<
	.uleb128 .Lfunc_end107-.Ltmp1269        #   Call between .Ltmp1269 and .Lfunc_end107
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end54:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,"axG",@progbits,_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,comdat
	.weak	_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_ # -- Begin function _ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
	.p2align	4, 0x90
	.type	_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,@function
_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_: # @_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
.Lfunc_begin55:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception55
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdi, %rbx
	movq	8(%rdx), %r15
	testq	%r15, %r15
	je	.LBB108_1
# %bb.8:
	movq	(%rsi), %rax
	movzbl	(%rax), %ebp
	leaq	16(%rsp), %r13
	movq	%r13, (%rsp)
	movq	(%rdx), %r12
	movq	%r15, 32(%rsp)
	cmpq	$16, %r15
	jb	.LBB108_11
# %bb.9:                                # %._crit_edge.i.i.i.i.i.thread
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, %rdi
	movq	%rax, (%rsp)
	movq	32(%rsp), %rax
	movq	%rax, 16(%rsp)
	jmp	.LBB108_10
.LBB108_1:
	leaq	16(%rbx), %rax
	movq	%rax, (%rbx)
	movq	(%r14), %r15
	movq	8(%r14), %r14
	movq	%r14, (%rsp)
	cmpq	$16, %r14
	jb	.LBB108_3
# %bb.2:                                # %.noexc6.i
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
	movq	%rax, (%rbx)
	movq	(%rsp), %rcx
	movq	%rcx, 16(%rbx)
.LBB108_3:                              # %._crit_edge.i.i.i.i
	testq	%r14, %r14
	je	.LBB108_7
# %bb.4:                                # %._crit_edge.i.i.i.i
	cmpq	$1, %r14
	jne	.LBB108_6
# %bb.5:
	movzbl	(%r15), %ecx
	movb	%cl, (%rax)
	jmp	.LBB108_7
.LBB108_11:                             # %._crit_edge.i.i.i.i.i
	movq	%r13, %rdi
	cmpq	$1, %r15
	jne	.LBB108_10
# %bb.12:
	movzbl	(%r12), %eax
	movb	%al, 16(%rsp)
	jmp	.LBB108_13
.LBB108_10:
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB108_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	movq	32(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rsi
.Ltmp1271:
	movsbl	%bpl, %r8d
	movq	%rsp, %rdi
	movl	$1, %ecx
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc
.Ltmp1272:
# %bb.14:                               # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_S5_.exit
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp1274:
	movq	%rsp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1275:
# %bb.15:                               # %.noexc
	leaq	16(%rbx), %rdx
	movq	%rdx, (%rbx)
	movq	(%rax), %rsi
	movq	%rax, %rcx
	addq	$16, %rcx
	cmpq	%rcx, %rsi
	je	.LBB108_16
# %bb.21:
	movq	%rsi, (%rbx)
	movq	(%rcx), %rdx
	movq	%rdx, 16(%rbx)
	jmp	.LBB108_22
.LBB108_16:
	movups	(%rsi), %xmm0
	movups	%xmm0, (%rdx)
.LBB108_22:
	movq	8(%rax), %rdx
	movq	%rdx, 8(%rbx)
	movq	%rcx, (%rax)
	movq	$0, 8(%rax)
	movb	$0, 16(%rax)
	movq	(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB108_24
# %bb.23:
	callq	_ZdlPv
	jmp	.LBB108_24
.LBB108_6:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB108_7:                              # %.thread
	movq	(%rsp), %rax
	movq	%rax, 8(%rbx)
	movq	(%rbx), %rcx
	movb	$0, (%rcx,%rax)
.LBB108_24:                             # %.critedge
	movq	%rbx, %rax
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB108_25:
	.cfi_def_cfa_offset 96
.Ltmp1276:
	jmp	.LBB108_18
.LBB108_17:
.Ltmp1273:
.LBB108_18:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB108_20
# %bb.19:
	callq	_ZdlPv
.LBB108_20:                             # %common.resume
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end108:
	.size	_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_, .Lfunc_end108-_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_
	.cfi_endproc
	.section	.gcc_except_table._ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,"aG",@progbits,_ZZNK8argparse8Argument13get_names_csvB5cxx11EcENKUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_E_clES8_S8_,comdat
	.p2align	2, 0x0
GCC_except_table108:
.Lexception55:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end55-.Lcst_begin55
.Lcst_begin55:
	.uleb128 .Lfunc_begin55-.Lfunc_begin55  # >> Call Site 1 <<
	.uleb128 .Ltmp1271-.Lfunc_begin55       #   Call between .Lfunc_begin55 and .Ltmp1271
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1271-.Lfunc_begin55       # >> Call Site 2 <<
	.uleb128 .Ltmp1272-.Ltmp1271            #   Call between .Ltmp1271 and .Ltmp1272
	.uleb128 .Ltmp1273-.Lfunc_begin55       #     jumps to .Ltmp1273
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1274-.Lfunc_begin55       # >> Call Site 3 <<
	.uleb128 .Ltmp1275-.Ltmp1274            #   Call between .Ltmp1274 and .Ltmp1275
	.uleb128 .Ltmp1276-.Lfunc_begin55       #     jumps to .Ltmp1276
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1275-.Lfunc_begin55       # >> Call Site 4 <<
	.uleb128 .Lfunc_end108-.Ltmp1275        #   Call between .Ltmp1275 and .Lfunc_end108
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end55:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse14ArgumentParser5usageB5cxx11Ev,"axG",@progbits,_ZNK8argparse14ArgumentParser5usageB5cxx11Ev,comdat
	.weak	_ZNK8argparse14ArgumentParser5usageB5cxx11Ev # -- Begin function _ZNK8argparse14ArgumentParser5usageB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8argparse14ArgumentParser5usageB5cxx11Ev,@function
_ZNK8argparse14ArgumentParser5usageB5cxx11Ev: # @_ZNK8argparse14ArgumentParser5usageB5cxx11Ev
.Lfunc_begin56:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception56
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$440, %rsp                      # imm = 0x1B8
	.cfi_def_cfa_offset 496
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	leaq	48(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	64(%rsp), %r14
.Ltmp1277:
	movl	$.L.str.87, %esi
	movl	$7, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1278:
# %bb.1:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	(%r15), %rsi
	movq	8(%r15), %rdx
.Ltmp1279:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1280:
# %bb.2:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	leaq	232(%r15), %r13
	movq	232(%r15), %rbx
	cmpq	%r13, %rbx
	je	.LBB109_10
# %bb.3:                                # %.lr.ph
	leaq	32(%rsp), %rbp
	leaq	16(%rsp), %r12
	jmp	.LBB109_5
	.p2align	4, 0x90
.LBB109_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB109_5 Depth=1
	movq	(%rbx), %rbx
	cmpq	%r13, %rbx
	je	.LBB109_10
.LBB109_5:                              # =>This Inner Loop Header: Depth=1
.Ltmp1281:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1282:
# %bb.6:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit32
                                        #   in Loop: Header=BB109_5 Depth=1
	leaq	16(%rbx), %rsi
.Ltmp1284:
	movq	%r12, %rdi
	callq	_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev
.Ltmp1285:
# %bb.7:                                #   in Loop: Header=BB109_5 Depth=1
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp1287:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1288:
# %bb.8:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit33
                                        #   in Loop: Header=BB109_5 Depth=1
	movq	16(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB109_4
# %bb.9:                                #   in Loop: Header=BB109_5 Depth=1
	callq	_ZdlPv
	jmp	.LBB109_4
.LBB109_10:                             # %._crit_edge
	leaq	208(%r15), %r12
	movq	208(%r15), %r13
	cmpq	%r12, %r13
	je	.LBB109_18
	.p2align	4, 0x90
.LBB109_11:                             # %.lr.ph64
                                        # =>This Inner Loop Header: Depth=1
	cmpq	$0, 96(%r13)
	je	.LBB109_14
# %bb.12:                               #   in Loop: Header=BB109_11 Depth=1
.Ltmp1290:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1291:
# %bb.13:                               #   in Loop: Header=BB109_11 Depth=1
	leaq	96(%r13), %rax
	leaq	88(%r13), %rcx
	jmp	.LBB109_16
	.p2align	4, 0x90
.LBB109_14:                             #   in Loop: Header=BB109_11 Depth=1
.Ltmp1292:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1293:
# %bb.15:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit37
                                        #   in Loop: Header=BB109_11 Depth=1
	movq	16(%r13), %rcx
	leaq	8(%rcx), %rax
.LBB109_16:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit37.invoke
                                        #   in Loop: Header=BB109_11 Depth=1
	movq	(%rcx), %rsi
	movq	(%rax), %rdx
.Ltmp1294:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1295:
# %bb.17:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit36
                                        #   in Loop: Header=BB109_11 Depth=1
	movq	(%r13), %r13
	cmpq	%r12, %r13
	jne	.LBB109_11
.LBB109_18:                             # %._crit_edge65
	cmpq	$0, 400(%r15)
	je	.LBB109_29
# %bb.19:
.Ltmp1297:
	movl	$.L.str.88, %esi
	movl	$2, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1298:
# %bb.20:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit39
	movq	384(%r15), %r12
	addq	$368, %r15                      # imm = 0x170
	cmpq	%r15, %r12
	je	.LBB109_28
# %bb.21:                               # %.lr.ph70.preheader
	xorl	%r13d, %r13d
	jmp	.LBB109_23
	.p2align	4, 0x90
.LBB109_22:                             #   in Loop: Header=BB109_23 Depth=1
	movq	%r12, %rdi
	callq	_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base
	movq	%rax, %r12
	cmpq	%r15, %rax
	je	.LBB109_28
.LBB109_23:                             # %.lr.ph70
                                        # =>This Inner Loop Header: Depth=1
	movq	48(%r12), %rax
	movq	16(%rax), %rax
	cmpb	$0, 480(%rax)
	jne	.LBB109_22
# %bb.24:                               #   in Loop: Header=BB109_23 Depth=1
	testq	%r13, %r13
	je	.LBB109_26
# %bb.25:                               #   in Loop: Header=BB109_23 Depth=1
.Ltmp1300:
	movl	$.L.str.89, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1301:
.LBB109_26:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit41.invoke
                                        #   in Loop: Header=BB109_23 Depth=1
	movq	32(%r12), %rdx
	movq	40(%r12), %rsi
.Ltmp1302:
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1303:
# %bb.27:                               # %_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St17basic_string_viewIS3_S4_E.exit
                                        #   in Loop: Header=BB109_23 Depth=1
	incq	%r13
	jmp	.LBB109_22
.LBB109_28:                             # %._crit_edge71
.Ltmp1305:
	movl	$.L.str.66, %esi
	movl	$1, %edx
	movq	%r14, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1306:
.LBB109_29:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit40
	movq	8(%rsp), %r15                   # 8-byte Reload
	leaq	16(%r15), %rbx
	movq	%rbx, (%r15)
	movq	$0, 8(%r15)
	movb	$0, 16(%r15)
	movq	112(%rsp), %rax
	testq	%rax, %rax
	je	.LBB109_31
# %bb.30:                               # %.invoke.i.i
	movq	96(%rsp), %r8
	movq	104(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1308:
	movq	%r15, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1309:
	jmp	.LBB109_32
.LBB109_31:
	leaq	144(%rsp), %rsi
.Ltmp1310:
	movq	%r15, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1311:
.LBB109_32:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 48(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 64(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 72(%rsp)
	movq	144(%rsp), %rdi
	leaq	160(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB109_34
# %bb.33:
	callq	_ZdlPv
.LBB109_34:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 72(%rsp)
	leaq	128(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 48(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 48(%rsp,%rax)
	movq	$0, 56(%rsp)
	leaq	176(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%r15, %rax
	addq	$440, %rsp                      # imm = 0x1B8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB109_35:
	.cfi_def_cfa_offset 496
.Ltmp1307:
	jmp	.LBB109_45
.LBB109_36:
.Ltmp1312:
	movq	%rax, %r14
	movq	(%r15), %rdi
	cmpq	%rbx, %rdi
	jne	.LBB109_41
	jmp	.LBB109_46
.LBB109_38:
.Ltmp1299:
	jmp	.LBB109_45
.LBB109_39:
.Ltmp1304:
	jmp	.LBB109_45
.LBB109_40:
.Ltmp1289:
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB109_46
.LBB109_41:
	callq	_ZdlPv
	jmp	.LBB109_46
.LBB109_42:
.Ltmp1286:
	jmp	.LBB109_45
.LBB109_43:
.Ltmp1283:
	jmp	.LBB109_45
.LBB109_44:
.Ltmp1296:
.LBB109_45:                             # %.body
	movq	%rax, %r14
.LBB109_46:                             # %.body
	leaq	48(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end109:
	.size	_ZNK8argparse14ArgumentParser5usageB5cxx11Ev, .Lfunc_end109-_ZNK8argparse14ArgumentParser5usageB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse14ArgumentParser5usageB5cxx11Ev,"aG",@progbits,_ZNK8argparse14ArgumentParser5usageB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table109:
.Lexception56:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end56-.Lcst_begin56
.Lcst_begin56:
	.uleb128 .Lfunc_begin56-.Lfunc_begin56  # >> Call Site 1 <<
	.uleb128 .Ltmp1277-.Lfunc_begin56       #   Call between .Lfunc_begin56 and .Ltmp1277
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1277-.Lfunc_begin56       # >> Call Site 2 <<
	.uleb128 .Ltmp1280-.Ltmp1277            #   Call between .Ltmp1277 and .Ltmp1280
	.uleb128 .Ltmp1299-.Lfunc_begin56       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1281-.Lfunc_begin56       # >> Call Site 3 <<
	.uleb128 .Ltmp1282-.Ltmp1281            #   Call between .Ltmp1281 and .Ltmp1282
	.uleb128 .Ltmp1283-.Lfunc_begin56       #     jumps to .Ltmp1283
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1284-.Lfunc_begin56       # >> Call Site 4 <<
	.uleb128 .Ltmp1285-.Ltmp1284            #   Call between .Ltmp1284 and .Ltmp1285
	.uleb128 .Ltmp1286-.Lfunc_begin56       #     jumps to .Ltmp1286
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1287-.Lfunc_begin56       # >> Call Site 5 <<
	.uleb128 .Ltmp1288-.Ltmp1287            #   Call between .Ltmp1287 and .Ltmp1288
	.uleb128 .Ltmp1289-.Lfunc_begin56       #     jumps to .Ltmp1289
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1290-.Lfunc_begin56       # >> Call Site 6 <<
	.uleb128 .Ltmp1295-.Ltmp1290            #   Call between .Ltmp1290 and .Ltmp1295
	.uleb128 .Ltmp1296-.Lfunc_begin56       #     jumps to .Ltmp1296
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1297-.Lfunc_begin56       # >> Call Site 7 <<
	.uleb128 .Ltmp1298-.Ltmp1297            #   Call between .Ltmp1297 and .Ltmp1298
	.uleb128 .Ltmp1299-.Lfunc_begin56       #     jumps to .Ltmp1299
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1300-.Lfunc_begin56       # >> Call Site 8 <<
	.uleb128 .Ltmp1303-.Ltmp1300            #   Call between .Ltmp1300 and .Ltmp1303
	.uleb128 .Ltmp1304-.Lfunc_begin56       #     jumps to .Ltmp1304
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1305-.Lfunc_begin56       # >> Call Site 9 <<
	.uleb128 .Ltmp1306-.Ltmp1305            #   Call between .Ltmp1305 and .Ltmp1306
	.uleb128 .Ltmp1307-.Lfunc_begin56       #     jumps to .Ltmp1307
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1308-.Lfunc_begin56       # >> Call Site 10 <<
	.uleb128 .Ltmp1311-.Ltmp1308            #   Call between .Ltmp1308 and .Ltmp1311
	.uleb128 .Ltmp1312-.Lfunc_begin56       #     jumps to .Ltmp1312
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1311-.Lfunc_begin56       # >> Call Site 11 <<
	.uleb128 .Lfunc_end109-.Ltmp1311        #   Call between .Ltmp1311 and .Lfunc_end109
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end56:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparselsERSoRKNS_8ArgumentE,"axG",@progbits,_ZN8argparselsERSoRKNS_8ArgumentE,comdat
	.weak	_ZN8argparselsERSoRKNS_8ArgumentE # -- Begin function _ZN8argparselsERSoRKNS_8ArgumentE
	.p2align	4, 0x90
	.type	_ZN8argparselsERSoRKNS_8ArgumentE,@function
_ZN8argparselsERSoRKNS_8ArgumentE:      # @_ZN8argparselsERSoRKNS_8ArgumentE
.Lfunc_begin57:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception57
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$504, %rsp                      # imm = 0x1F8
	.cfi_def_cfa_offset 560
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r13
	movq	%rdi, 8(%rsp)                   # 8-byte Spill
	leaq	112(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	128(%rsp), %r15
.Ltmp1313:
	movl	$.L.str.92, %esi
	movl	$2, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1314:
# %bb.1:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	(%r13), %rax
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB110_8
# %bb.2:                                # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	movq	328(%r13), %rdx
	testq	%rdx, %rdx
	je	.LBB110_8
# %bb.3:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	movq	(%rax), %r12
	movq	336(%r13), %rbx
	movsbl	(%r12), %esi
	movq	%rbx, %rdi
	callq	memchr
	testq	%rax, %rax
	je	.LBB110_8
# %bb.4:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	subq	%rbx, %rax
	cmpq	$-1, %rax
	je	.LBB110_8
# %bb.5:
	decq	%r14
	je	.LBB110_8
# %bb.6:
	incq	%r12
.Ltmp1315:
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1316:
# %bb.7:                                # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit
	testb	%al, %al
	je	.LBB110_64
.LBB110_8:                              # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
	movq	80(%r13), %rdx
	testq	%rdx, %rdx
	je	.LBB110_10
.LBB110_9:                              # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit117.invoke
	movq	72(%r13), %rsi
.Ltmp1325:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1326:
	jmp	.LBB110_16
.LBB110_10:                             # %._crit_edge.i.i.i.i
	movq	(%r13), %rsi
	movq	8(%r13), %rdx
	leaq	32(%rsp), %r14
	movq	%r14, 16(%rsp)
	movw	$32, 32(%rsp)
	movq	$1, 24(%rsp)
.Ltmp1328:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rcx
	callq	_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_
.Ltmp1329:
# %bb.11:
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp1331:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1332:
# %bb.12:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit104
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_14
# %bb.13:
	callq	_ZdlPv
.LBB110_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB110_16
# %bb.15:
	callq	_ZdlPv
.LBB110_16:                             # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	movq	8(%rsp), %rcx                   # 8-byte Reload
	movq	(%rcx), %rax
	movq	-24(%rax), %rax
	movq	16(%rcx,%rax), %rax
	movq	%rax, 96(%rsp)                  # 8-byte Spill
	leaq	32(%rsp), %r14
	movq	%r14, 16(%rsp)
	movq	$0, 24(%rsp)
	movb	$0, 32(%rsp)
	movq	176(%rsp), %rax
	testq	%rax, %rax
	je	.LBB110_18
# %bb.17:                               # %.invoke.i.i
	movq	160(%rsp), %r8
	movq	168(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1334:
	leaq	16(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1335:
	jmp	.LBB110_19
.LBB110_18:
	leaq	208(%rsp), %rsi
.Ltmp1336:
	leaq	16(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1337:
.LBB110_19:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	24(%rsp), %rsi
	leaq	64(%rsp), %r12
	movq	%r12, 48(%rsp)
.Ltmp1339:
	leaq	48(%rsp), %rdi
	movl	$32, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
.Ltmp1340:
# %bb.20:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB110_22
# %bb.21:
	callq	_ZdlPv
.LBB110_22:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit124
	movq	%r14, 16(%rsp)
	movq	$0, 24(%rsp)
	movb	$0, 32(%rsp)
	movq	176(%rsp), %rax
	testq	%rax, %rax
	je	.LBB110_24
# %bb.23:                               # %.invoke.i.i127
	movq	160(%rsp), %r8
	movq	168(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1342:
	leaq	16(%rsp), %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1343:
	jmp	.LBB110_25
.LBB110_24:
	leaq	208(%rsp), %rsi
.Ltmp1344:
	leaq	16(%rsp), %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1345:
.LBB110_25:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit131
	movq	16(%rsp), %rsi
	movq	24(%rsp), %rdx
.Ltmp1347:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1348:
# %bb.26:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit133
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB110_28
# %bb.27:
	callq	_ZdlPv
.LBB110_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit134
	leaq	40(%r13), %rbp
	movq	40(%r13), %rax
	movq	%rax, 104(%rsp)                 # 8-byte Spill
	movq	%r13, 88(%rsp)                  # 8-byte Spill
	movq	48(%r13), %rax
	movq	%rax, 80(%rsp)                  # 8-byte Spill
	movq	%rbp, %rdi
	movl	$10, %esi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	je	.LBB110_45
# %bb.29:                               # %.lr.ph
	movb	$1, %r12b
	xorl	%r13d, %r13d
	jmp	.LBB110_31
	.p2align	4, 0x90
.LBB110_30:                             # %_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St17basic_string_viewIS3_S4_E.exit
                                        #   in Loop: Header=BB110_31 Depth=1
	leaq	1(%r15), %r13
	movq	%rbp, %rdi
	movl	$10, %esi
	movq	%r13, %rdx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	je	.LBB110_39
.LBB110_31:                             # =>This Inner Loop Header: Depth=1
	movq	%rax, %r15
	movq	80(%rsp), %rax                  # 8-byte Reload
	subq	%r13, %rax
	jb	.LBB110_75
# %bb.32:                               #   in Loop: Header=BB110_31 Depth=1
	movq	%r15, %r14
	subq	%r13, %r14
	incq	%r14
	cmpq	%r14, %rax
	cmovbq	%rax, %r14
	addq	104(%rsp), %r13                 # 8-byte Folded Reload
	testb	$1, %r12b
	jne	.LBB110_36
# %bb.33:                               #   in Loop: Header=BB110_31 Depth=1
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	movq	96(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, 16(%rdi,%rax)
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp1354:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1355:
# %bb.34:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit146
                                        #   in Loop: Header=BB110_31 Depth=1
.Ltmp1356:
	movq	%rax, %rbx
	movl	$.L.str.92, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1357:
# %bb.35:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit148
                                        #   in Loop: Header=BB110_31 Depth=1
.Ltmp1358:
	movq	%rbx, %rdi
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1359:
	jmp	.LBB110_30
	.p2align	4, 0x90
.LBB110_36:                             #   in Loop: Header=BB110_31 Depth=1
.Ltmp1350:
	movl	$.L.str.92, %esi
	movl	$2, %edx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1351:
# %bb.37:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit141
                                        #   in Loop: Header=BB110_31 Depth=1
.Ltmp1352:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	%r13, %rsi
	movq	%r14, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1353:
# %bb.38:                               #   in Loop: Header=BB110_31 Depth=1
	xorl	%r12d, %r12d
	jmp	.LBB110_30
.LBB110_39:                             # %._crit_edge
	testb	$1, %r12b
	leaq	64(%rsp), %r12
	jne	.LBB110_45
# %bb.40:
	movq	80(%rsp), %rax                  # 8-byte Reload
	cmpq	%r15, %rax
	movq	%rax, %r15
	jbe	.LBB110_77
# %bb.41:
	movq	88(%rsp), %rbx                  # 8-byte Reload
	movq	48(%rbx), %rax
	subq	%r13, %rax
	subq	%r13, %r15
	cmpq	%rax, %r15
	cmovaeq	%rax, %r15
	testq	%r15, %r15
	je	.LBB110_47
# %bb.42:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	movq	(%rdi), %rax
	movq	-24(%rax), %rax
	movq	96(%rsp), %rcx                  # 8-byte Reload
	movq	%rcx, 16(%rdi,%rax)
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp1363:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1364:
# %bb.43:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit161
.Ltmp1365:
	movq	%rax, %r14
	movl	$.L.str.92, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1366:
# %bb.44:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit163
.Ltmp1367:
	movq	104(%rsp), %rsi                 # 8-byte Reload
	addq	%r13, %rsi
	movq	%r14, %rdi
	movq	%r15, %rdx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1368:
	jmp	.LBB110_47
.LBB110_45:                             # %._crit_edge.thread
.Ltmp1373:
	movl	$.L.str.92, %esi
	movl	$2, %edx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1374:
	movq	88(%rsp), %rbx                  # 8-byte Reload
# %bb.46:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit152
	movq	40(%rbx), %rsi
	movq	48(%rbx), %rdx
.Ltmp1375:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1376:
.LBB110_47:                             # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit154
	cmpq	$0, 48(%rbx)
	je	.LBB110_49
# %bb.48:
.Ltmp1377:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1378:
.LBB110_49:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit167
	leaq	304(%rbx), %rsi
.Ltmp1379:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE
.Ltmp1380:
# %bb.50:
	cmpq	$0, 104(%rbx)
	je	.LBB110_55
# %bb.51:
	movq	304(%rbx), %rax
	orq	312(%rbx), %rax
	je	.LBB110_55
# %bb.52:
.Ltmp1381:
	movl	$.L.str.93, %esi
	movl	$10, %edx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1382:
# %bb.53:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit169
	movq	120(%rbx), %rsi
	movq	128(%rbx), %rdx
.Ltmp1383:
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1384:
# %bb.54:
	movq	%rax, %rdi
	movl	$1, %edx
	movl	$.L.str.91, %esi
	jmp	.LBB110_57
.LBB110_55:                             # %.critedge2
	testb	$4, 320(%rbx)
	je	.LBB110_58
# %bb.56:
	movl	$10, %edx
	movl	$.L.str.94, %esi
	movq	8(%rsp), %rdi                   # 8-byte Reload
.LBB110_57:                             # %.invoke
.Ltmp1385:
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1386:
.LBB110_58:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit173
.Ltmp1387:
	movl	$.L.str.22, %esi
	movl	$1, %edx
	movq	8(%rsp), %rdi                   # 8-byte Reload
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1388:
# %bb.59:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit177
	movq	48(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB110_61
# %bb.60:
	callq	_ZdlPv
.LBB110_61:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 112(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 112(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 128(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 136(%rsp)
	movq	208(%rsp), %rdi
	leaq	224(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_63
# %bb.62:
	callq	_ZdlPv
.LBB110_63:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 136(%rsp)
	leaq	192(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 112(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 112(%rsp,%rax)
	movq	$0, 120(%rsp)
	leaq	240(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	8(%rsp), %rax                   # 8-byte Reload
	addq	$504, %rsp                      # imm = 0x1F8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB110_64:                             # %._crit_edge.i.i.i.i109
	.cfi_def_cfa_offset 560
	movq	(%r13), %rsi
	movq	8(%r13), %rdx
	leaq	32(%rsp), %r14
	movq	%r14, 16(%rsp)
	movw	$8236, 32(%rsp)                 # imm = 0x202C
	movq	$2, 24(%rsp)
	movb	$0, 34(%rsp)
.Ltmp1317:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rcx
	callq	_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_
.Ltmp1318:
# %bb.65:
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp1320:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1321:
# %bb.66:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit113
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_68
# %bb.67:
	callq	_ZdlPv
.LBB110_68:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit114
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB110_70
# %bb.69:
	callq	_ZdlPv
.LBB110_70:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit115
	cmpq	$0, 80(%r13)
	je	.LBB110_16
# %bb.71:
	cmpq	$1, 304(%r13)
	jne	.LBB110_16
# %bb.72:
	cmpq	$1, 312(%r13)
	jne	.LBB110_16
# %bb.73:
.Ltmp1323:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1324:
# %bb.74:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit117
	movq	80(%r13), %rdx
	jmp	.LBB110_9
.LBB110_75:
.Ltmp1370:
	movl	$.L.str.36, %edi
	movl	$.L.str.35, %esi
	movq	%r13, %rdx
	movq	80(%rsp), %rcx                  # 8-byte Reload
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz
.Ltmp1371:
# %bb.76:                               # %.noexc139
.LBB110_77:
.Ltmp1361:
	movl	$.L.str.36, %edi
	movl	$.L.str.35, %esi
	movq	%r13, %rdx
	movq	%r15, %rcx
	xorl	%eax, %eax
	callq	_ZSt24__throw_out_of_range_fmtPKcz
.Ltmp1362:
# %bb.78:                               # %.noexc158
.LBB110_79:
.Ltmp1322:
	jmp	.LBB110_82
.LBB110_80:
.Ltmp1319:
	jmp	.LBB110_92
.LBB110_81:
.Ltmp1333:
.LBB110_82:
	movq	%rax, %rbx
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_93
# %bb.83:
	callq	_ZdlPv
	jmp	.LBB110_93
.LBB110_84:
.Ltmp1330:
	jmp	.LBB110_92
.LBB110_85:
.Ltmp1369:
	jmp	.LBB110_98
.LBB110_86:
.Ltmp1349:
	jmp	.LBB110_88
.LBB110_87:
.Ltmp1346:
.LBB110_88:
	movq	%rax, %rbx
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB110_99
# %bb.89:                               # %.body129.sink.split
	callq	_ZdlPv
	jmp	.LBB110_99
.LBB110_90:
.Ltmp1341:
	jmp	.LBB110_92
.LBB110_91:
.Ltmp1338:
.LBB110_92:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit106
	movq	%rax, %rbx
.LBB110_93:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit106
	movq	16(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB110_100
	jmp	.LBB110_101
.LBB110_94:
.Ltmp1327:
	movq	%rax, %rbx
	jmp	.LBB110_101
.LBB110_95:
.Ltmp1389:
	jmp	.LBB110_98
.LBB110_96:                             # %.loopexit.split-lp
.Ltmp1372:
	jmp	.LBB110_98
.LBB110_97:                             # %.loopexit
.Ltmp1360:
.LBB110_98:
	movq	%rax, %rbx
.LBB110_99:
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB110_101
.LBB110_100:
	callq	_ZdlPv
.LBB110_101:
	leaq	112(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end110:
	.size	_ZN8argparselsERSoRKNS_8ArgumentE, .Lfunc_end110-_ZN8argparselsERSoRKNS_8ArgumentE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparselsERSoRKNS_8ArgumentE,"aG",@progbits,_ZN8argparselsERSoRKNS_8ArgumentE,comdat
	.p2align	2, 0x0
GCC_except_table110:
.Lexception57:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end57-.Lcst_begin57
.Lcst_begin57:
	.uleb128 .Lfunc_begin57-.Lfunc_begin57  # >> Call Site 1 <<
	.uleb128 .Ltmp1313-.Lfunc_begin57       #   Call between .Lfunc_begin57 and .Ltmp1313
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1313-.Lfunc_begin57       # >> Call Site 2 <<
	.uleb128 .Ltmp1326-.Ltmp1313            #   Call between .Ltmp1313 and .Ltmp1326
	.uleb128 .Ltmp1327-.Lfunc_begin57       #     jumps to .Ltmp1327
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1328-.Lfunc_begin57       # >> Call Site 3 <<
	.uleb128 .Ltmp1329-.Ltmp1328            #   Call between .Ltmp1328 and .Ltmp1329
	.uleb128 .Ltmp1330-.Lfunc_begin57       #     jumps to .Ltmp1330
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1331-.Lfunc_begin57       # >> Call Site 4 <<
	.uleb128 .Ltmp1332-.Ltmp1331            #   Call between .Ltmp1331 and .Ltmp1332
	.uleb128 .Ltmp1333-.Lfunc_begin57       #     jumps to .Ltmp1333
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1334-.Lfunc_begin57       # >> Call Site 5 <<
	.uleb128 .Ltmp1337-.Ltmp1334            #   Call between .Ltmp1334 and .Ltmp1337
	.uleb128 .Ltmp1338-.Lfunc_begin57       #     jumps to .Ltmp1338
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1339-.Lfunc_begin57       # >> Call Site 6 <<
	.uleb128 .Ltmp1340-.Ltmp1339            #   Call between .Ltmp1339 and .Ltmp1340
	.uleb128 .Ltmp1341-.Lfunc_begin57       #     jumps to .Ltmp1341
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1342-.Lfunc_begin57       # >> Call Site 7 <<
	.uleb128 .Ltmp1345-.Ltmp1342            #   Call between .Ltmp1342 and .Ltmp1345
	.uleb128 .Ltmp1346-.Lfunc_begin57       #     jumps to .Ltmp1346
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1347-.Lfunc_begin57       # >> Call Site 8 <<
	.uleb128 .Ltmp1348-.Ltmp1347            #   Call between .Ltmp1347 and .Ltmp1348
	.uleb128 .Ltmp1349-.Lfunc_begin57       #     jumps to .Ltmp1349
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1354-.Lfunc_begin57       # >> Call Site 9 <<
	.uleb128 .Ltmp1353-.Ltmp1354            #   Call between .Ltmp1354 and .Ltmp1353
	.uleb128 .Ltmp1360-.Lfunc_begin57       #     jumps to .Ltmp1360
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1363-.Lfunc_begin57       # >> Call Site 10 <<
	.uleb128 .Ltmp1368-.Ltmp1363            #   Call between .Ltmp1363 and .Ltmp1368
	.uleb128 .Ltmp1369-.Lfunc_begin57       #     jumps to .Ltmp1369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1373-.Lfunc_begin57       # >> Call Site 11 <<
	.uleb128 .Ltmp1388-.Ltmp1373            #   Call between .Ltmp1373 and .Ltmp1388
	.uleb128 .Ltmp1389-.Lfunc_begin57       #     jumps to .Ltmp1389
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1317-.Lfunc_begin57       # >> Call Site 12 <<
	.uleb128 .Ltmp1318-.Ltmp1317            #   Call between .Ltmp1317 and .Ltmp1318
	.uleb128 .Ltmp1319-.Lfunc_begin57       #     jumps to .Ltmp1319
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1320-.Lfunc_begin57       # >> Call Site 13 <<
	.uleb128 .Ltmp1321-.Ltmp1320            #   Call between .Ltmp1320 and .Ltmp1321
	.uleb128 .Ltmp1322-.Lfunc_begin57       #     jumps to .Ltmp1322
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1323-.Lfunc_begin57       # >> Call Site 14 <<
	.uleb128 .Ltmp1324-.Ltmp1323            #   Call between .Ltmp1323 and .Ltmp1324
	.uleb128 .Ltmp1327-.Lfunc_begin57       #     jumps to .Ltmp1327
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1370-.Lfunc_begin57       # >> Call Site 15 <<
	.uleb128 .Ltmp1371-.Ltmp1370            #   Call between .Ltmp1370 and .Ltmp1371
	.uleb128 .Ltmp1372-.Lfunc_begin57       #     jumps to .Ltmp1372
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1361-.Lfunc_begin57       # >> Call Site 16 <<
	.uleb128 .Ltmp1362-.Ltmp1361            #   Call between .Ltmp1361 and .Ltmp1362
	.uleb128 .Ltmp1369-.Lfunc_begin57       #     jumps to .Ltmp1369
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1362-.Lfunc_begin57       # >> Call Site 17 <<
	.uleb128 .Lfunc_end110-.Ltmp1362        #   Call between .Ltmp1362 and .Lfunc_end110
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end57:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument20get_arguments_lengthEv,"axG",@progbits,_ZNK8argparse8Argument20get_arguments_lengthEv,comdat
	.weak	_ZNK8argparse8Argument20get_arguments_lengthEv # -- Begin function _ZNK8argparse8Argument20get_arguments_lengthEv
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument20get_arguments_lengthEv,@function
_ZNK8argparse8Argument20get_arguments_lengthEv: # @_ZNK8argparse8Argument20get_arguments_lengthEv
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	movq	(%rdi), %rax
	movq	8(%rdi), %rcx
	xorl	%r13d, %r13d
	cmpq	%rcx, %rax
	je	.LBB111_3
# %bb.1:                                # %.lr.ph.i.preheader
	movq	%rax, %rdx
	.p2align	4, 0x90
.LBB111_2:                              # %.lr.ph.i
                                        # =>This Inner Loop Header: Depth=1
	addq	8(%rdx), %r13
	addq	$32, %rdx
	cmpq	%rcx, %rdx
	jne	.LBB111_2
.LBB111_3:                              # %_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEmZNK8argparse8Argument20get_arguments_lengthEvEUlRKT_RKT0_E_ESJ_SG_SG_SJ_T1_.exit
	movq	8(%rax), %r14
	testq	%r14, %r14
	je	.LBB111_9
# %bb.4:                                # %_ZSt10accumulateIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEmZNK8argparse8Argument20get_arguments_lengthEvEUlRKT_RKT0_E_ESJ_SG_SG_SJ_T1_.exit
	movq	328(%rbx), %rdx
	testq	%rdx, %rdx
	je	.LBB111_9
# %bb.5:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	movq	(%rax), %r15
	movq	336(%rbx), %r12
	movsbl	(%r15), %esi
	movq	%r12, %rdi
	callq	memchr
	testq	%rax, %rax
	je	.LBB111_9
# %bb.6:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i
	subq	%r12, %rax
	cmpq	$-1, %rax
	je	.LBB111_9
# %bb.7:
	decq	%r14
	je	.LBB111_9
# %bb.8:                                # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit
	incq	%r15
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
	testb	%al, %al
	je	.LBB111_11
.LBB111_9:                              # %_ZN8argparse8Argument13is_positionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
	movq	80(%rbx), %rax
	testq	%rax, %rax
	je	.LBB111_10
.LBB111_15:                             # %.critedge
	addq	$2, %rax
	jmp	.LBB111_16
.LBB111_10:
	movq	8(%rbx), %rax
	subq	(%rbx), %rax
	sarq	$5, %rax
	addq	%r13, %rax
	incq	%rax
.LBB111_16:
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB111_11:
	.cfi_def_cfa_offset 48
	movq	8(%rbx), %rax
	subq	(%rbx), %rax
	movq	80(%rbx), %rcx
	sarq	$4, %rax
	addq	%r13, %rax
	addq	$-2, %rax
	testq	%rcx, %rcx
	je	.LBB111_15
# %bb.12:
	cmpq	$1, 304(%rbx)
	jne	.LBB111_15
# %bb.13:
	cmpq	$1, 312(%rbx)
	jne	.LBB111_15
# %bb.14:
	addq	%rcx, %rax
	incq	%rax
	jmp	.LBB111_15
.Lfunc_end111:
	.size	_ZNK8argparse8Argument20get_arguments_lengthEv, .Lfunc_end111-_ZNK8argparse8Argument20get_arguments_lengthEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8argparse8Argument16get_inline_usageB5cxx11Ev,"axG",@progbits,_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev,comdat
	.weak	_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev # -- Begin function _ZNK8argparse8Argument16get_inline_usageB5cxx11Ev
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev,@function
_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev: # @_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev
.Lfunc_begin58:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception58
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$472, %rsp                      # imm = 0x1D8
	.cfi_def_cfa_offset 528
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	80(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	movq	(%r14), %rax
	leaq	64(%rsp), %rbp
	movq	%rbp, 48(%rsp)
	movq	(%rax), %r15
	movq	8(%rax), %r12
	movq	%r12, 8(%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r12
	jb	.LBB112_3
# %bb.1:                                # %.noexc6.i
.Ltmp1390:
	leaq	48(%rsp), %rdi
	leaq	8(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1391:
# %bb.2:                                # %.noexc
	movq	%rax, 48(%rsp)
	movq	8(%rsp), %rcx
	movq	%rcx, 64(%rsp)
.LBB112_3:                              # %._crit_edge.i.i.i.i
	testq	%r12, %r12
	je	.LBB112_7
# %bb.4:                                # %._crit_edge.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB112_6
# %bb.5:
	movzbl	(%r15), %ecx
	movb	%cl, (%rax)
	jmp	.LBB112_7
.LBB112_6:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB112_7:
	movq	8(%rsp), %rax
	movq	%rax, 56(%rsp)
	movq	48(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r14), %r15
	movq	8(%r14), %r13
	cmpq	%r13, %r15
	je	.LBB112_12
# %bb.8:
	leaq	48(%rsp), %r12
	jmp	.LBB112_9
	.p2align	4, 0x90
.LBB112_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_.exit
                                        #   in Loop: Header=BB112_9 Depth=1
	addq	$32, %r15
	cmpq	%r13, %r15
	je	.LBB112_12
.LBB112_9:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	8(%r15), %rax
	cmpq	56(%rsp), %rax
	jbe	.LBB112_11
# %bb.10:                               #   in Loop: Header=BB112_9 Depth=1
.Ltmp1393:
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1394:
	jmp	.LBB112_11
.LBB112_12:                             # %._crit_edge
	testb	$4, 320(%r14)
	jne	.LBB112_14
# %bb.13:
	leaq	96(%rsp), %rdi
.Ltmp1396:
	movl	$.L.str.90, %esi
	movl	$1, %edx
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1397:
.LBB112_14:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit
	leaq	96(%rsp), %r15
	movq	48(%rsp), %rsi
	movq	56(%rsp), %rdx
.Ltmp1398:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1399:
# %bb.15:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
	movq	80(%r14), %r12
	testq	%r12, %r12
	je	.LBB112_53
# %bb.16:
	leaq	24(%rsp), %rdi
	movq	%rdi, 8(%rsp)
	movq	72(%r14), %r13
	movq	%r12, 40(%rsp)
	cmpq	$16, %r12
	jb	.LBB112_20
# %bb.17:                               # %.noexc6.i24
.Ltmp1401:
	leaq	8(%rsp), %rdi
	leaq	40(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1402:
# %bb.18:                               # %._crit_edge.i.i.i.i25.thread
	movq	%rax, %rdi
	movq	%rax, 8(%rsp)
	movq	40(%rsp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB112_19
.LBB112_53:                             # %._crit_edge.i.i.i.i28
	leaq	24(%rsp), %rax
	movq	%rax, 8(%rsp)
	movl	$5390678, 24(%rsp)              # imm = 0x524156
	movq	$3, 16(%rsp)
	cmpq	$0, 312(%r14)
	jne	.LBB112_24
	jmp	.LBB112_28
.LBB112_20:                             # %._crit_edge.i.i.i.i25
	cmpq	$1, %r12
	jne	.LBB112_19
# %bb.21:
	movzbl	(%r13), %eax
	movb	%al, 24(%rsp)
	jmp	.LBB112_22
.LBB112_19:
	movq	%r13, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB112_22:
	movq	40(%rsp), %rax
	movq	%rax, 16(%rsp)
	movq	8(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	cmpq	$0, 312(%r14)
	je	.LBB112_28
.LBB112_24:
.Ltmp1404:
	movl	$.L.str.81, %esi
	movl	$1, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1405:
# %bb.25:                               # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit31
	movq	8(%rsp), %rsi
	movq	16(%rsp), %rdx
.Ltmp1406:
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1407:
# %bb.26:                               # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit33
	cmpq	$2, 312(%r14)
	jb	.LBB112_28
# %bb.27:
.Ltmp1408:
	movl	$.L.str.82, %esi
	movl	$3, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1409:
.LBB112_28:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit35
	testb	$4, 320(%r14)
	jne	.LBB112_30
# %bb.29:
.Ltmp1410:
	movl	$.L.str.91, %esi
	movl	$1, %edx
	movq	%r15, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1411:
.LBB112_30:                             # %_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc.exit37
	leaq	16(%rbx), %r15
	movq	%r15, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	movq	144(%rsp), %rax
	testq	%rax, %rax
	je	.LBB112_37
# %bb.31:                               # %.invoke.i.i
	movq	128(%rsp), %r8
	movq	136(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1413:
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1414:
	jmp	.LBB112_38
.LBB112_37:
	leaq	176(%rsp), %rsi
.Ltmp1415:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1416:
.LBB112_38:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_40
# %bb.39:
	callq	_ZdlPv
.LBB112_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38
	movq	48(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB112_42
# %bb.41:
	callq	_ZdlPv
.LBB112_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit39
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 80(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 80(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 96(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 104(%rsp)
	movq	176(%rsp), %rdi
	leaq	192(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB112_44
# %bb.43:
	callq	_ZdlPv
.LBB112_44:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 104(%rsp)
	leaq	160(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 80(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 80(%rsp,%rax)
	movq	$0, 88(%rsp)
	leaq	208(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
	movq	%rbx, %rax
	addq	$472, %rsp                      # imm = 0x1D8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB112_45:
	.cfi_def_cfa_offset 528
.Ltmp1403:
	jmp	.LBB112_46
.LBB112_50:
.Ltmp1392:
	movq	%rax, %r14
	leaq	80(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_35:
.Ltmp1417:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB112_33
# %bb.36:
	callq	_ZdlPv
	jmp	.LBB112_33
.LBB112_52:
.Ltmp1400:
	jmp	.LBB112_46
.LBB112_32:
.Ltmp1412:
	movq	%rax, %r14
.LBB112_33:                             # %.body
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB112_34
# %bb.47:
	movq	48(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB112_48
.LBB112_49:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit40
	leaq	80(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB112_34:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB112_49
	jmp	.LBB112_48
.LBB112_51:
.Ltmp1395:
.LBB112_46:
	movq	%rax, %r14
	movq	48(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB112_49
.LBB112_48:
	callq	_ZdlPv
	leaq	80(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end112:
	.size	_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev, .Lfunc_end112-_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument16get_inline_usageB5cxx11Ev,"aG",@progbits,_ZNK8argparse8Argument16get_inline_usageB5cxx11Ev,comdat
	.p2align	2, 0x0
GCC_except_table112:
.Lexception58:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end58-.Lcst_begin58
.Lcst_begin58:
	.uleb128 .Lfunc_begin58-.Lfunc_begin58  # >> Call Site 1 <<
	.uleb128 .Ltmp1390-.Lfunc_begin58       #   Call between .Lfunc_begin58 and .Ltmp1390
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1390-.Lfunc_begin58       # >> Call Site 2 <<
	.uleb128 .Ltmp1391-.Ltmp1390            #   Call between .Ltmp1390 and .Ltmp1391
	.uleb128 .Ltmp1392-.Lfunc_begin58       #     jumps to .Ltmp1392
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1391-.Lfunc_begin58       # >> Call Site 3 <<
	.uleb128 .Ltmp1393-.Ltmp1391            #   Call between .Ltmp1391 and .Ltmp1393
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1393-.Lfunc_begin58       # >> Call Site 4 <<
	.uleb128 .Ltmp1394-.Ltmp1393            #   Call between .Ltmp1393 and .Ltmp1394
	.uleb128 .Ltmp1395-.Lfunc_begin58       #     jumps to .Ltmp1395
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1396-.Lfunc_begin58       # >> Call Site 5 <<
	.uleb128 .Ltmp1399-.Ltmp1396            #   Call between .Ltmp1396 and .Ltmp1399
	.uleb128 .Ltmp1400-.Lfunc_begin58       #     jumps to .Ltmp1400
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1401-.Lfunc_begin58       # >> Call Site 6 <<
	.uleb128 .Ltmp1402-.Ltmp1401            #   Call between .Ltmp1401 and .Ltmp1402
	.uleb128 .Ltmp1403-.Lfunc_begin58       #     jumps to .Ltmp1403
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1402-.Lfunc_begin58       # >> Call Site 7 <<
	.uleb128 .Ltmp1404-.Ltmp1402            #   Call between .Ltmp1402 and .Ltmp1404
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1404-.Lfunc_begin58       # >> Call Site 8 <<
	.uleb128 .Ltmp1411-.Ltmp1404            #   Call between .Ltmp1404 and .Ltmp1411
	.uleb128 .Ltmp1412-.Lfunc_begin58       #     jumps to .Ltmp1412
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1413-.Lfunc_begin58       # >> Call Site 9 <<
	.uleb128 .Ltmp1416-.Ltmp1413            #   Call between .Ltmp1413 and .Ltmp1416
	.uleb128 .Ltmp1417-.Lfunc_begin58       #     jumps to .Ltmp1417
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1416-.Lfunc_begin58       # >> Call Site 10 <<
	.uleb128 .Lfunc_end112-.Ltmp1416        #   Call between .Ltmp1416 and .Lfunc_end112
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end58:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_,"axG",@progbits,_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_,comdat
	.weak	_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_ # -- Begin function _ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_
	.p2align	4, 0x90
	.type	_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_,@function
_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_: # @_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_
.Lfunc_begin59:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception59
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 448
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdi, %rbx
	cmpq	%rdx, %rsi
	je	.LBB113_1
# %bb.2:
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev
	leaq	24(%rsp), %r13
	movq	(%r12), %rsi
	movq	8(%r12), %rdx
.Ltmp1418:
	movq	%r13, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1419:
# %bb.3:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit.preheader
	addq	$32, %r12
	.p2align	4, 0x90
.LBB113_4:                              # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit
                                        # =>This Inner Loop Header: Depth=1
	cmpq	%r15, %r12
	je	.LBB113_11
# %bb.5:                                #   in Loop: Header=BB113_4 Depth=1
	movq	(%r14), %rsi
	movq	8(%r14), %rdx
.Ltmp1421:
	movq	%r13, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1422:
# %bb.6:                                # %_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE.exit6
                                        #   in Loop: Header=BB113_4 Depth=1
	movq	(%r12), %rsi
	movq	8(%r12), %rdx
	addq	$32, %r12
.Ltmp1423:
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.Ltmp1424:
	jmp	.LBB113_4
.LBB113_11:
	leaq	16(%rbx), %r15
	movq	%r15, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	movq	72(%rsp), %rax
	testq	%rax, %rax
	je	.LBB113_15
# %bb.12:                               # %.invoke.i.i
	movq	56(%rsp), %r8
	movq	64(%rsp), %rcx
	cmpq	%r8, %rax
	cmovaq	%rax, %r8
	subq	%rcx, %r8
.Ltmp1426:
	movq	%rbx, %rdi
	xorl	%esi, %esi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm
.Ltmp1427:
	jmp	.LBB113_16
.LBB113_1:                              # %._crit_edge.i.i.i.i
	leaq	16(%rbx), %rax
	movq	%rax, (%rbx)
	movq	$0, 8(%rbx)
	movb	$0, 16(%rbx)
	jmp	.LBB113_19
.LBB113_15:
	leaq	104(%rsp), %rsi
.Ltmp1428:
	movq	%rbx, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
.Ltmp1429:
.LBB113_16:                             # %_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv.exit
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE(%rip), %rax
	movq	%rax, 8(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+64(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 8(%rsp,%rax)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+72(%rip), %rax
	movq	%rax, 24(%rsp)
	movq	$_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE+16, 32(%rsp)
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB113_18
# %bb.17:
	callq	_ZdlPv
.LBB113_18:                             # %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit
	movq	$_ZTVSt15basic_streambufIcSt11char_traitsIcEE+16, 32(%rsp)
	leaq	88(%rsp), %rdi
	callq	_ZNSt6localeD1Ev
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+16(%rip), %rax
	movq	%rax, 8(%rsp)
	movq	_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE+24(%rip), %rcx
	movq	-24(%rax), %rax
	movq	%rcx, 8(%rsp,%rax)
	movq	$0, 16(%rsp)
	leaq	136(%rsp), %rdi
	callq	_ZNSt8ios_baseD2Ev
.LBB113_19:
	movq	%rbx, %rax
	addq	$400, %rsp                      # imm = 0x190
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB113_13:
	.cfi_def_cfa_offset 448
.Ltmp1430:
	movq	%rax, %r14
	movq	(%rbx), %rdi
	cmpq	%r15, %rdi
	je	.LBB113_10
# %bb.14:
	callq	_ZdlPv
	jmp	.LBB113_10
.LBB113_8:                              # %.loopexit.split-lp
.Ltmp1420:
	jmp	.LBB113_9
.LBB113_7:                              # %.loopexit
.Ltmp1425:
.LBB113_9:                              # %.body
	movq	%rax, %r14
.LBB113_10:                             # %.body
	leaq	8(%rsp), %rdi
	callq	_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end113:
	.size	_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_, .Lfunc_end113-_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_,"aG",@progbits,_ZN8argparse7details4joinIN9__gnu_cxx17__normal_iteratorIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS9_SaIS9_EEEEEES9_T_SG_RSA_,comdat
	.p2align	2, 0x0
GCC_except_table113:
.Lexception59:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end59-.Lcst_begin59
.Lcst_begin59:
	.uleb128 .Lfunc_begin59-.Lfunc_begin59  # >> Call Site 1 <<
	.uleb128 .Ltmp1418-.Lfunc_begin59       #   Call between .Lfunc_begin59 and .Ltmp1418
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1418-.Lfunc_begin59       # >> Call Site 2 <<
	.uleb128 .Ltmp1419-.Ltmp1418            #   Call between .Ltmp1418 and .Ltmp1419
	.uleb128 .Ltmp1420-.Lfunc_begin59       #     jumps to .Ltmp1420
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1421-.Lfunc_begin59       # >> Call Site 3 <<
	.uleb128 .Ltmp1424-.Ltmp1421            #   Call between .Ltmp1421 and .Ltmp1424
	.uleb128 .Ltmp1425-.Lfunc_begin59       #     jumps to .Ltmp1425
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1426-.Lfunc_begin59       # >> Call Site 4 <<
	.uleb128 .Ltmp1429-.Ltmp1426            #   Call between .Ltmp1426 and .Ltmp1429
	.uleb128 .Ltmp1430-.Lfunc_begin59       #     jumps to .Ltmp1430
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1429-.Lfunc_begin59       # >> Call Site 5 <<
	.uleb128 .Lfunc_end113-.Ltmp1429        #   Call between .Ltmp1429 and .Lfunc_end113
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end59:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparselsERSoRKNS_8Argument10NArgsRangeE,"axG",@progbits,_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE,comdat
	.weak	_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE # -- Begin function _ZN8argparselsERSoRKNS_8Argument10NArgsRangeE
	.p2align	4, 0x90
	.type	_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE,@function
_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE: # @_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE
	.cfi_startproc
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rsi, %r14
	movq	%rdi, %rbx
	movq	(%rsi), %rax
	movq	8(%rsi), %rcx
	cmpq	%rcx, %rax
	jne	.LBB114_3
# %bb.1:
	cmpq	$2, %rax
	jb	.LBB114_8
# %bb.2:
	movl	$.L.str.95, %esi
	movl	$8, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r14), %rsi
	movq	%rbx, %rdi
	jmp	.LBB114_6
.LBB114_3:
	cmpq	$-1, %rcx
	je	.LBB114_4
# %bb.5:
	movl	$.L.str.98, %esi
	movl	$7, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movq	%rax, %r15
	movl	$.L.str.99, %esi
	movl	$2, %edx
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	8(%r14), %rsi
	movq	%r15, %rdi
.LBB114_6:
	callq	_ZNSo9_M_insertImEERSoT_
	movl	$.L.str.96, %esi
	movl	$2, %edx
	jmp	.LBB114_7
.LBB114_4:
	movl	$.L.str.95, %esi
	movl	$8, %edx
	movq	%rbx, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
	movq	(%r14), %rsi
	movq	%rbx, %rdi
	callq	_ZNSo9_M_insertImEERSoT_
	movl	$.L.str.97, %esi
	movl	$10, %edx
.LBB114_7:
	movq	%rax, %rdi
	callq	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
.LBB114_8:
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end114:
	.size	_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE, .Lfunc_end114-_ZN8argparselsERSoRKNS_8Argument10NArgsRangeE
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,"axG",@progbits,_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,comdat
	.weak	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE # -- Begin function _ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
	.p2align	4, 0x90
	.type	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,@function
_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE: # @_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
.Lfunc_begin60:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception60
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rsi, %r12
	movq	%rdi, %rbx
	leaq	56(%rdi), %rax
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rdi)
	movups	%xmm0, (%rdi)
	movq	$0, 32(%rdi)
	movq	%rax, 32(%rsp)                  # 8-byte Spill
	movq	%rax, 40(%rdi)
	movq	$0, 48(%rdi)
	movb	$0, 56(%rdi)
	leaq	88(%rdi), %rax
	movq	%rax, 24(%rsp)                  # 8-byte Spill
	movq	%rax, 72(%rdi)
	movq	$0, 80(%rdi)
	movb	$0, 88(%rdi)
	movups	%xmm0, 104(%rdi)
	leaq	136(%rdi), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	movq	%rax, 120(%rdi)
	movq	$0, 128(%rdi)
	movb	$0, 136(%rdi)
	movb	$0, 184(%rdi)
	movups	%xmm0, 192(%rdi)
	movb	$0, 232(%rdi)
	movq	$_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_, 264(%rdi)
	movq	$_ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation, 256(%rdi)
	movb	$0, 272(%rdi)
	movups	%xmm0, 280(%rdi)
	movq	$0, 296(%rdi)
	movq	$1, 304(%rdi)
	movq	$1, 312(%rdi)
	movzbl	320(%rdi), %r15d
	movl	%r15d, %eax
	andb	$-2, %al
	movb	%al, 320(%rdi)
	movq	(%rcx), %r13
	testq	%r13, %r13
	je	.LBB115_15
# %bb.1:
	testq	%r12, %r12
	je	.LBB115_15
# %bb.2:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
	movq	8(%r14), %rbp
	movsbl	(%rbp), %esi
	movq	%rdx, %rdi
	movq	%rdx, 8(%rsp)                   # 8-byte Spill
	movq	%r12, %rdx
	callq	memchr
	movq	8(%rsp), %rdx                   # 8-byte Reload
	testq	%rax, %rax
	je	.LBB115_15
# %bb.3:                                # %_ZNSt11char_traitsIcE4findEPKcmRS1_.exit.i.i.i
	subq	%rdx, %rax
	cmpq	$-1, %rax
	je	.LBB115_15
# %bb.4:
	decq	%r13
	je	.LBB115_15
# %bb.5:
	incq	%rbp
.Ltmp1431:
	movq	%r13, %rdi
	movq	%rbp, %rsi
	callq	_ZN8argparse8Argument18is_decimal_literalESt17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1432:
# %bb.6:                                # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread
	xorb	$1, %al
	addb	%al, %al
	movzbl	320(%rbx), %ecx
	leaq	8(%rbx), %rbp
	movq	8(%rbx), %r13
	movq	16(%rbx), %rsi
	andb	$-31, %cl
	orb	%al, %cl
	movb	%cl, 320(%rbx)
	movq	%r12, 328(%rbx)
	movq	8(%rsp), %rax                   # 8-byte Reload
	movq	%rax, 336(%rbx)
	cmpq	%rsi, %r13
	je	.LBB115_16
# %bb.7:
	movq	(%r14), %r15
	movq	8(%r14), %r14
	leaq	16(%r13), %rax
	movq	%rax, (%r13)
	movq	%r15, (%rsp)
	cmpq	$16, %r15
	jb	.LBB115_10
# %bb.8:                                # %.noexc6.i.i.i.i.i.i
.Ltmp1433:
	movq	%rsp, %rsi
	movq	%r13, %rdi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1434:
# %bb.9:                                # %.noexc11
	movq	%rax, (%r13)
	movq	(%rsp), %rcx
	movq	%rcx, 16(%r13)
.LBB115_10:                             # %._crit_edge.i.i.i.i.i.i.i.i.i
	testq	%r15, %r15
	je	.LBB115_14
# %bb.11:                               # %._crit_edge.i.i.i.i.i.i.i.i.i
	cmpq	$1, %r15
	jne	.LBB115_13
# %bb.12:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB115_14
.LBB115_15:                             # %_ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_.exit.thread.thread
	andb	$-32, %r15b
	movb	%r15b, 320(%rbx)
	movq	%r12, 328(%rbx)
	movq	%rdx, 336(%rbx)
	leaq	8(%rbx), %rbp
	xorl	%esi, %esi
.LBB115_16:
.Ltmp1435:
	movq	%rbx, %rdi
	movq	%r14, %rdx
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRSt17basic_string_viewIcS3_EEEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
.Ltmp1436:
# %bb.17:                               # %._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRSt17basic_string_viewIcS3_EEEERS5_DpOT_.exit_crit_edge
	movq	(%rbp), %r14
	movq	(%rbx), %r15
	cmpq	%r14, %r15
	je	.LBB115_26
.LBB115_19:
	movq	%r14, %r12
	subq	%r15, %r12
	movq	%r12, %rax
	sarq	$5, %rax
	bsrq	%rax, %rdx
	xorq	$63, %rdx
	addq	%rdx, %rdx
	xorq	$126, %rdx
.Ltmp1437:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
.Ltmp1438:
# %bb.20:                               # %.noexc14
	cmpq	$513, %r12                      # imm = 0x201
	jl	.LBB115_25
# %bb.21:
	leaq	512(%r15), %r12
.Ltmp1441:
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
.Ltmp1442:
	.p2align	4, 0x90
# %bb.22:                               # %.noexc15
	cmpq	%r14, %r12
	je	.LBB115_26
.LBB115_23:                             # %.lr.ph.i.i.i.i
                                        # =>This Inner Loop Header: Depth=1
.Ltmp1444:
	movq	%r12, %rdi
	callq	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
.Ltmp1445:
# %bb.24:                               # %.noexc16
                                        #   in Loop: Header=BB115_23 Depth=1
	addq	$32, %r12
	cmpq	%r14, %r12
	jne	.LBB115_23
	jmp	.LBB115_26
.LBB115_25:
.Ltmp1439:
	movq	%r15, %rdi
	movq	%r14, %rsi
	callq	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
.Ltmp1440:
.LBB115_26:                             # %_ZSt4sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEEZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISH_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EvSN_SN_SQ_.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB115_13:
	.cfi_def_cfa_offset 96
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB115_14:                             # %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JRSt17basic_string_viewIcS3_EEEEvRS6_PT_DpOT0_.exit.i
	movq	(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rbp), %r14
	addq	$32, %r14
	movq	%r14, (%rbp)
	movq	(%rbx), %r15
	cmpq	%r14, %r15
	jne	.LBB115_19
	jmp	.LBB115_26
.LBB115_28:                             # %.loopexit.split-lp
.Ltmp1443:
	jmp	.LBB115_29
.LBB115_27:                             # %.loopexit
.Ltmp1446:
.LBB115_29:
	movq	%rax, %r14
	leaq	192(%rbx), %r15
	leaq	208(%rbx), %r12
	leaq	240(%rbx), %r13
	leaq	280(%rbx), %rdi
	callq	_ZNSt6vectorISt3anySaIS0_EED2Ev
	movq	%r13, %rdi
	callq	_ZNSt8__detail9__variant16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES2_IFvSB_EEEED2Ev
	movq	%r12, %rdi
	callq	_ZNSt14_Optional_baseISt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EELb0ELb0EED2Ev
	movq	%r15, %rdi
	callq	_ZNSt3anyD2Ev
	cmpb	$0, 184(%rbx)
	je	.LBB115_32
# %bb.30:
	movb	$0, 184(%rbx)
	movq	152(%rbx), %rdi
	leaq	168(%rbx), %rax
	cmpq	%rax, %rdi
	je	.LBB115_32
# %bb.31:
	callq	_ZdlPv
.LBB115_32:                             # %_ZNSt14_Optional_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ELb0EED2Ev.exit
	leaq	104(%rbx), %r15
	movq	120(%rbx), %rdi
	cmpq	16(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB115_34
# %bb.33:
	callq	_ZdlPv
.LBB115_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%r15, %rdi
	callq	_ZNSt3anyD2Ev
	movq	72(%rbx), %rdi
	cmpq	24(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB115_35
# %bb.36:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit19
	movq	40(%rbx), %rdi
	cmpq	32(%rsp), %rdi                  # 8-byte Folded Reload
	jne	.LBB115_37
.LBB115_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit20
	movq	%rbx, %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB115_35:
	callq	_ZdlPv
	movq	40(%rbx), %rdi
	cmpq	32(%rsp), %rdi                  # 8-byte Folded Reload
	je	.LBB115_38
.LBB115_37:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end115:
	.size	_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE, .Lfunc_end115-_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,"aG",@progbits,_ZN8argparse8ArgumentC2ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS5_XT_EESt16integer_sequenceImJXspT0_EEE,comdat
	.p2align	2, 0x0
GCC_except_table115:
.Lexception60:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end60-.Lcst_begin60
.Lcst_begin60:
	.uleb128 .Ltmp1431-.Lfunc_begin60       # >> Call Site 1 <<
	.uleb128 .Ltmp1442-.Ltmp1431            #   Call between .Ltmp1431 and .Ltmp1442
	.uleb128 .Ltmp1443-.Lfunc_begin60       #     jumps to .Ltmp1443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1444-.Lfunc_begin60       # >> Call Site 2 <<
	.uleb128 .Ltmp1445-.Ltmp1444            #   Call between .Ltmp1444 and .Ltmp1445
	.uleb128 .Ltmp1446-.Lfunc_begin60       #     jumps to .Ltmp1446
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1439-.Lfunc_begin60       # >> Call Site 3 <<
	.uleb128 .Ltmp1440-.Ltmp1439            #   Call between .Ltmp1439 and .Ltmp1440
	.uleb128 .Ltmp1443-.Lfunc_begin60       #     jumps to .Ltmp1443
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1440-.Lfunc_begin60       # >> Call Site 4 <<
	.uleb128 .Lfunc_end115-.Ltmp1440        #   Call between .Ltmp1440 and .Lfunc_end115
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end60:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,"axG",@progbits,_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,comdat
	.weak	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_ # -- Begin function _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.p2align	4, 0x90
	.type	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_,@function
_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_: # @_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r15
	movq	%rsi, %rdx
	subq	%rdi, %rdx
	cmpq	$513, %rdx                      # imm = 0x201
	jl	.LBB116_22
# %bb.1:                                # %.lr.ph
	movq	%rsi, %r14
	movq	%rdi, %rbx
	leaq	32(%rdi), %rax
	movq	%rax, 16(%rsp)                  # 8-byte Spill
	jmp	.LBB116_2
	.p2align	4, 0x90
.LBB116_21:                             # %_ZSt27__unguarded_partition_pivotIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEESP_SP_SP_SS_.exit
                                        #   in Loop: Header=BB116_2 Depth=1
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	movq	%r13, %rdx
	subq	%rbx, %rdx
	movq	%r13, %r14
	cmpq	$512, %rdx                      # imm = 0x200
	jle	.LBB116_22
.LBB116_2:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB116_16 Depth 2
                                        #     Child Loop BB116_7 Depth 2
                                        #     Child Loop BB116_11 Depth 2
	subq	$1, %r15
	jb	.LBB116_3
# %bb.5:                                #   in Loop: Header=BB116_2 Depth=1
	shrq	%rdx
	andq	$-32, %rdx
	addq	%rbx, %rdx
	leaq	-32(%r14), %rcx
	movq	%rbx, %rdi
	movq	16(%rsp), %r13                  # 8-byte Reload
	movq	%r13, %rsi
	callq	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	movq	%r14, %rbp
	movq	8(%rbx), %r12
	testq	%r12, %r12
	jne	.LBB116_7
.LBB116_13:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.split.us.i.i
                                        #   in Loop: Header=BB116_2 Depth=1
	cmpq	$0, -24(%rbp)
	je	.LBB116_14
# %bb.15:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.us.preheader.i.i.preheader
                                        #   in Loop: Header=BB116_2 Depth=1
	addq	$-56, %rbp
	.p2align	4, 0x90
.LBB116_16:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.us.preheader.i.i
                                        #   Parent Loop BB116_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	$0, (%rbp)
	leaq	-32(%rbp), %rbp
	jne	.LBB116_16
# %bb.17:                               # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i12.thread.i.i.loopexit
                                        #   in Loop: Header=BB116_2 Depth=1
	addq	$24, %rbp
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jb	.LBB116_19
	jmp	.LBB116_21
	.p2align	4, 0x90
.LBB116_8:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB116_7 Depth=2
	movq	(%rbx), %rsi
	movq	(%r13), %rdi
	movq	%r12, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB116_11
.LBB116_9:                              #   in Loop: Header=BB116_7 Depth=2
	addq	$32, %r13
.LBB116_7:                              # %.split.i
                                        #   Parent Loop BB116_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	cmpq	%r12, 8(%r13)
	je	.LBB116_8
# %bb.10:                               # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit.i.i
                                        #   in Loop: Header=BB116_7 Depth=2
	jb	.LBB116_9
	jmp	.LBB116_11
	.p2align	4, 0x90
.LBB116_20:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit13.i.i
                                        #   in Loop: Header=BB116_11 Depth=2
	jae	.LBB116_18
.LBB116_11:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.split.i.i.preheader
                                        #   Parent Loop BB116_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	addq	$-32, %rbp
	cmpq	8(%rbp), %r12
	jne	.LBB116_20
# %bb.12:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i9.i.i
                                        #   in Loop: Header=BB116_11 Depth=2
	movq	(%rbp), %rsi
	movq	(%rbx), %rdi
	movq	%r12, %rdx
	callq	memcmp
	testl	%eax, %eax
	js	.LBB116_11
.LBB116_18:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i12.thread.i.i
                                        #   in Loop: Header=BB116_2 Depth=1
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jae	.LBB116_21
.LBB116_19:                             #   in Loop: Header=BB116_2 Depth=1
	movq	%rbp, %rsi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_
	addq	$32, %r13
	movq	8(%rbx), %r12
	testq	%r12, %r12
	jne	.LBB116_7
	jmp	.LBB116_13
.LBB116_14:                             #   in Loop: Header=BB116_2 Depth=1
	addq	$-32, %rbp
	movq	%r13, %rdi
	cmpq	%rbp, %r13
	jb	.LBB116_19
	jmp	.LBB116_21
.LBB116_3:
	leaq	15(%rsp), %rdx
	movq	%rbx, %rdi
	movq	%r14, %rsi
	callq	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	movq	%r14, %r12
	subq	%rbx, %r12
	addq	$-32, %r14
	leaq	14(%rsp), %r15
	.p2align	4, 0x90
.LBB116_4:                              # %.lr.ph.i9.i
                                        # =>This Inner Loop Header: Depth=1
	movq	%rbx, %rdi
	movq	%r14, %rsi
	movq	%r14, %rdx
	movq	%r15, %rcx
	callq	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	addq	$-32, %r12
	addq	$-32, %r14
	cmpq	$32, %r12
	jg	.LBB116_4
.LBB116_22:                             # %.loopexit
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end116:
	.size	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_, .Lfunc_end116-_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_T1_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,"axG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,comdat
	.weak	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_ # -- Begin function _ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	.p2align	4, 0x90
	.type	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,@function
_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_: # @_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
.Lfunc_begin61:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception61
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %rbx
	subq	%rdi, %rbx
	cmpq	$64, %rbx
	jge	.LBB117_1
.LBB117_14:                             # %.loopexit
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB117_1:
	.cfi_def_cfa_offset 128
	movq	%rdi, %r14
	sarq	$5, %rbx
	leaq	-2(%rbx), %r15
	shrq	%r15
	leaq	24(%rsp), %r13
	leaq	56(%rsp), %rbp
	movq	%r15, %rax
	shlq	$5, %rax
	leaq	(%rax,%rdi), %r12
	addq	$16, %r12
	jmp	.LBB117_2
	.p2align	4, 0x90
.LBB117_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit12
                                        #   in Loop: Header=BB117_2 Depth=1
	addq	$-32, %r12
	cmpq	$-1, %r15
	je	.LBB117_14
.LBB117_2:                              # =>This Inner Loop Header: Depth=1
	movq	%r13, 8(%rsp)
	movq	-16(%r12), %rax
	cmpq	%rax, %r12
	je	.LBB117_3
# %bb.4:                                #   in Loop: Header=BB117_2 Depth=1
	movq	%rax, 8(%rsp)
	movq	(%r12), %rcx
	movq	%rcx, 24(%rsp)
	jmp	.LBB117_5
	.p2align	4, 0x90
.LBB117_3:                              #   in Loop: Header=BB117_2 Depth=1
	movups	(%rax), %xmm0
	movups	%xmm0, (%r13)
	movq	%r13, %rax
.LBB117_5:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
                                        #   in Loop: Header=BB117_2 Depth=1
	movq	-8(%r12), %rcx
	movq	%r12, -16(%r12)
	movq	$0, -8(%r12)
	movb	$0, (%r12)
	movq	%rbp, 40(%rsp)
	cmpq	%r13, %rax
	je	.LBB117_6
# %bb.7:                                #   in Loop: Header=BB117_2 Depth=1
	movq	%rax, 40(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB117_8
	.p2align	4, 0x90
.LBB117_6:                              #   in Loop: Header=BB117_2 Depth=1
	movups	(%r13), %xmm0
	movups	%xmm0, (%rbp)
.LBB117_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit11
                                        #   in Loop: Header=BB117_2 Depth=1
	movq	%rcx, 48(%rsp)
	movq	%r13, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1447:
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%rbx, %rdx
	leaq	40(%rsp), %rcx
	callq	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Ltmp1448:
# %bb.9:                                #   in Loop: Header=BB117_2 Depth=1
	movq	40(%rsp), %rdi
	cmpq	%rbp, %rdi
	je	.LBB117_11
# %bb.10:                               #   in Loop: Header=BB117_2 Depth=1
	callq	_ZdlPv
.LBB117_11:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
                                        #   in Loop: Header=BB117_2 Depth=1
	decq	%r15
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB117_13
# %bb.12:                               #   in Loop: Header=BB117_2 Depth=1
	callq	_ZdlPv
	jmp	.LBB117_13
.LBB117_15:
.Ltmp1449:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%rbp, %rdi
	jne	.LBB117_16
# %bb.17:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit13
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	jne	.LBB117_18
.LBB117_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit14
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB117_16:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%r13, %rdi
	je	.LBB117_19
.LBB117_18:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end117:
	.size	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_, .Lfunc_end117-_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_
	.cfi_endproc
	.section	.gcc_except_table._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,"aG",@progbits,_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_RSS_,comdat
	.p2align	2, 0x0
GCC_except_table117:
.Lexception61:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end61-.Lcst_begin61
.Lcst_begin61:
	.uleb128 .Ltmp1447-.Lfunc_begin61       # >> Call Site 1 <<
	.uleb128 .Ltmp1448-.Ltmp1447            #   Call between .Ltmp1447 and .Ltmp1448
	.uleb128 .Ltmp1449-.Lfunc_begin61       #     jumps to .Ltmp1449
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1448-.Lfunc_begin61       # >> Call Site 2 <<
	.uleb128 .Lfunc_end117-.Ltmp1448        #   Call between .Ltmp1448 and .Lfunc_end117
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end61:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,"axG",@progbits,_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,comdat
	.weak	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_ # -- Begin function _ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	.p2align	4, 0x90
	.type	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,@function
_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_: # @_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
.Lfunc_begin62:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception62
# %bb.0:
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$72, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r15
	movq	%rsi, %rbx
	movq	%rdi, %r14
	leaq	24(%rsp), %r12
	movq	%r12, 8(%rsp)
	movq	(%rdx), %rax
	leaq	16(%rdx), %rdi
	cmpq	%rdi, %rax
	je	.LBB118_1
# %bb.2:
	movq	%rax, 8(%rsp)
	movq	(%rdi), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB118_3
.LBB118_1:
	movups	(%rax), %xmm0
	movups	%xmm0, (%r12)
.LBB118_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%r15), %rax
	movq	%rax, 16(%rsp)
	movq	%rdi, (%r15)
	movq	$0, 8(%r15)
	movb	$0, 16(%r15)
	movq	(%r14), %rsi
	leaq	16(%r14), %rax
	cmpq	%rax, %rsi
	je	.LBB118_4
# %bb.9:
	movq	%rsi, (%r15)
	movq	8(%r14), %rcx
	movq	%rcx, 8(%r15)
	movq	16(%r14), %rcx
	movq	%rcx, 16(%r15)
	movq	%rax, (%r14)
	jmp	.LBB118_10
.LBB118_4:
	movq	8(%r14), %rdx
	testq	%rdx, %rdx
	je	.LBB118_8
# %bb.5:
	cmpq	$1, %rdx
	jne	.LBB118_7
# %bb.6:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB118_8
.LBB118_7:
	callq	memcpy@PLT
.LBB118_8:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%r14), %rax
	movq	%rax, 8(%r15)
	movb	$0, 16(%r15,%rax)
	movq	(%r14), %rax
.LBB118_10:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 8(%r14)
	movb	$0, (%rax)
	subq	%r14, %rbx
	sarq	$5, %rbx
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	8(%rsp), %rax
	cmpq	%r12, %rax
	je	.LBB118_11
# %bb.12:
	movq	%rax, 40(%rsp)
	movq	24(%rsp), %rax
	movq	%rax, 56(%rsp)
	jmp	.LBB118_13
.LBB118_11:
	movups	(%r12), %xmm0
	movups	%xmm0, (%r15)
.LBB118_13:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit3
	movq	16(%rsp), %rax
	movq	%rax, 48(%rsp)
	movq	%r12, 8(%rsp)
	movq	$0, 16(%rsp)
	movb	$0, 24(%rsp)
.Ltmp1450:
	leaq	40(%rsp), %rcx
	movq	%r14, %rdi
	xorl	%esi, %esi
	movq	%rbx, %rdx
	callq	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Ltmp1451:
# %bb.14:
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB118_16
# %bb.15:
	callq	_ZdlPv
.LBB118_16:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB118_18
# %bb.17:
	callq	_ZdlPv
.LBB118_18:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit4
	addq	$72, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB118_19:
	.cfi_def_cfa_offset 112
.Ltmp1452:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	jne	.LBB118_20
# %bb.21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit5
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	jne	.LBB118_22
.LBB118_23:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit6
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB118_20:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	cmpq	%r12, %rdi
	je	.LBB118_23
.LBB118_22:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end118:
	.size	_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_, .Lfunc_end118-_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_
	.cfi_endproc
	.section	.gcc_except_table._ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,"aG",@progbits,_ZSt10__pop_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_RSS_,comdat
	.p2align	2, 0x0
GCC_except_table118:
.Lexception62:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end62-.Lcst_begin62
.Lcst_begin62:
	.uleb128 .Lfunc_begin62-.Lfunc_begin62  # >> Call Site 1 <<
	.uleb128 .Ltmp1450-.Lfunc_begin62       #   Call between .Lfunc_begin62 and .Ltmp1450
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1450-.Lfunc_begin62       # >> Call Site 2 <<
	.uleb128 .Ltmp1451-.Ltmp1450            #   Call between .Ltmp1450 and .Ltmp1451
	.uleb128 .Ltmp1452-.Lfunc_begin62       #     jumps to .Ltmp1452
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1451-.Lfunc_begin62       # >> Call Site 3 <<
	.uleb128 .Lfunc_end118-.Ltmp1451        #   Call between .Ltmp1451 and .Lfunc_end118
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end62:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,"axG",@progbits,_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,comdat
	.weak	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_ # -- Begin function _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
	.p2align	4, 0x90
	.type	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,@function
_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_: # @_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
.Lfunc_begin63:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception63
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$72, %rsp
	.cfi_def_cfa_offset 128
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	movq	%rdi, %r14
	leaq	-1(%rdx), %rax
	shrq	$63, %rax
	movq	%rdx, 32(%rsp)                  # 8-byte Spill
	leaq	(%rdx,%rax), %r8
	decq	%r8
	sarq	%r8
	movq	%rsi, %r12
	movq	%rsi, 24(%rsp)                  # 8-byte Spill
	cmpq	%rsi, %r8
	jle	.LBB119_22
# %bb.1:                                # %.lr.ph.preheader
	movq	24(%rsp), %r12                  # 8-byte Reload
	movq	%r8, 16(%rsp)                   # 8-byte Spill
	jmp	.LBB119_2
.LBB119_14:                             #   in Loop: Header=BB119_2 Depth=1
	callq	memcpy@PLT
	movq	16(%rsp), %r8                   # 8-byte Reload
.LBB119_15:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB119_2 Depth=1
	leaq	(%r14,%rbx), %rax
	addq	$8, %rax
	movq	(%rax), %rax
	movq	%rax, 8(%r14,%r13)
	movq	(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r15), %rax
.LBB119_21:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	$0, 8(%r14,%rbx)
	movb	$0, (%rax)
	cmpq	%r8, %r12
	jge	.LBB119_22
.LBB119_2:                              # %.lr.ph
                                        # =>This Inner Loop Header: Depth=1
	movq	%r12, %r13
	leaq	2(,%r12,2), %rbx
	movq	%rbx, %rax
	shlq	$5, %rax
	leaq	1(,%r12,2), %r12
	movq	%r12, %rcx
	shlq	$5, %rcx
	movq	8(%r14,%rax), %rdx
	cmpq	8(%r14,%rcx), %rdx
	jne	.LBB119_7
# %bb.3:                                #   in Loop: Header=BB119_2 Depth=1
	testq	%rdx, %rdx
	je	.LBB119_5
# %bb.4:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB119_2 Depth=1
	addq	%r14, %rax
	addq	%r14, %rcx
	movq	(%rcx), %rsi
	movq	(%rax), %rdi
	callq	memcmp
	movq	16(%rsp), %r8                   # 8-byte Reload
	testl	%eax, %eax
	jne	.LBB119_6
.LBB119_5:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i
                                        #   in Loop: Header=BB119_2 Depth=1
	xorl	%eax, %eax
.LBB119_6:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i
                                        #   in Loop: Header=BB119_2 Depth=1
	shrl	$31, %eax
	testb	%al, %al
	je	.LBB119_9
	jmp	.LBB119_10
	.p2align	4, 0x90
.LBB119_7:                              #   in Loop: Header=BB119_2 Depth=1
	setb	%al
	testb	%al, %al
	jne	.LBB119_10
.LBB119_9:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	%rbx, %r12
.LBB119_10:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	%r12, %rbx
	shlq	$5, %rbx
	leaq	(%r14,%rbx), %r15
	shlq	$5, %r13
	leaq	(%r14,%r13), %rbp
	movq	(%r14,%rbx), %rsi
	leaq	(%r14,%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, %rsi
	je	.LBB119_11
# %bb.16:                               #   in Loop: Header=BB119_2 Depth=1
	leaq	(%r14,%r13), %rdx
	addq	$16, %rdx
	movq	(%rbp), %rcx
	cmpq	%rdx, %rcx
	je	.LBB119_17
# %bb.19:                               #   in Loop: Header=BB119_2 Depth=1
	movq	(%rdx), %rdx
	movq	%rsi, (%rbp)
	movups	8(%r14,%rbx), %xmm0
	movups	%xmm0, 8(%r14,%r13)
	testq	%rcx, %rcx
	je	.LBB119_18
# %bb.20:                               #   in Loop: Header=BB119_2 Depth=1
	movq	%rcx, (%r15)
	movq	%rdx, (%rax)
	movq	%rcx, %rax
	jmp	.LBB119_21
	.p2align	4, 0x90
.LBB119_11:                             #   in Loop: Header=BB119_2 Depth=1
	movq	8(%r14,%rbx), %rdx
	testq	%rdx, %rdx
	je	.LBB119_15
# %bb.12:                               #   in Loop: Header=BB119_2 Depth=1
	movq	(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB119_14
# %bb.13:                               #   in Loop: Header=BB119_2 Depth=1
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB119_15
	.p2align	4, 0x90
.LBB119_17:                             # %.thread.i
                                        #   in Loop: Header=BB119_2 Depth=1
	movq	%rsi, (%rbp)
	movups	8(%r14,%rbx), %xmm0
	movups	%xmm0, 8(%r14,%r13)
.LBB119_18:                             #   in Loop: Header=BB119_2 Depth=1
	movq	%rax, (%r15)
	jmp	.LBB119_21
.LBB119_22:                             # %._crit_edge
	movq	32(%rsp), %rcx                  # 8-byte Reload
	testb	$1, %cl
	jne	.LBB119_23
# %bb.24:
	leaq	-2(%rcx), %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	addq	$-2, %rax
	sarq	%rax
	cmpq	%rax, %r12
	jne	.LBB119_23
# %bb.25:
	leaq	1(,%r12,2), %rbx
	movq	%rbx, %r15
	shlq	$5, %r15
	leaq	(%r14,%r15), %r13
	shlq	$5, %r12
	leaq	(%r14,%r12), %rbp
	movq	(%r14,%r15), %rsi
	leaq	(%r14,%r15), %rax
	addq	$16, %rax
	cmpq	%rax, %rsi
	je	.LBB119_26
# %bb.31:
	leaq	(%r14,%r12), %rdx
	addq	$16, %rdx
	movq	(%rbp), %rcx
	cmpq	%rdx, %rcx
	je	.LBB119_32
# %bb.34:
	movq	(%rdx), %rdx
	movq	%rsi, (%rbp)
	movups	8(%r14,%r15), %xmm0
	movups	%xmm0, 8(%r14,%r12)
	testq	%rcx, %rcx
	je	.LBB119_33
# %bb.35:
	movq	%rcx, (%r13)
	movq	%rdx, (%rax)
	movq	%rcx, %rax
	jmp	.LBB119_36
.LBB119_23:
	movq	%r12, %rbx
	movq	8(%rsp), %rdx                   # 8-byte Reload
	jmp	.LBB119_37
.LBB119_26:
	leaq	(%r14,%r15), %rcx
	addq	$8, %rcx
	movq	8(%r14,%r15), %rdx
	testq	%rdx, %rdx
	je	.LBB119_30
# %bb.27:
	movq	(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB119_29
# %bb.28:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB119_30
.LBB119_32:                             # %.thread.i29
	movq	%rsi, (%rbp)
	movups	8(%r14,%r15), %xmm0
	movups	%xmm0, 8(%r14,%r12)
.LBB119_33:
	movq	%rax, (%r13)
	jmp	.LBB119_36
.LBB119_29:
	movq	%rcx, 16(%rsp)                  # 8-byte Spill
	callq	memcpy@PLT
	movq	16(%rsp), %rcx                  # 8-byte Reload
.LBB119_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i28
	movq	(%rcx), %rax
	movq	%rax, 8(%r14,%r12)
	movq	(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r13), %rax
.LBB119_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit31
	movq	8(%rsp), %rdx                   # 8-byte Reload
	movq	$0, 8(%r14,%r15)
	movb	$0, (%rax)
.LBB119_37:
	leaq	56(%rsp), %r15
	movq	%r15, 40(%rsp)
	movq	(%rdx), %rcx
	leaq	16(%rdx), %rax
	cmpq	%rax, %rcx
	je	.LBB119_38
# %bb.39:
	movq	%rcx, 40(%rsp)
	movq	(%rax), %rcx
	movq	%rcx, 56(%rsp)
	jmp	.LBB119_40
.LBB119_38:
	movups	(%rcx), %xmm0
	movups	%xmm0, (%r15)
.LBB119_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rdx), %rcx
	movq	%rcx, 48(%rsp)
	movq	%rax, (%rdx)
	movq	$0, 8(%rdx)
	movb	$0, 16(%rdx)
.Ltmp1453:
	leaq	40(%rsp), %rcx
	leaq	7(%rsp), %r8
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	24(%rsp), %rdx                  # 8-byte Reload
	callq	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
.Ltmp1454:
# %bb.41:
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB119_43
# %bb.42:
	callq	_ZdlPv
.LBB119_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addq	$72, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB119_44:
	.cfi_def_cfa_offset 128
.Ltmp1455:
	movq	%rax, %rbx
	movq	40(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB119_46
# %bb.45:
	callq	_ZdlPv
.LBB119_46:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit32
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end119:
	.size	_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_, .Lfunc_end119-_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_
	.cfi_endproc
	.section	.gcc_except_table._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,"aG",@progbits,_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_T2_,comdat
	.p2align	2, 0x0
GCC_except_table119:
.Lexception63:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end63-.Lcst_begin63
.Lcst_begin63:
	.uleb128 .Lfunc_begin63-.Lfunc_begin63  # >> Call Site 1 <<
	.uleb128 .Ltmp1453-.Lfunc_begin63       #   Call between .Lfunc_begin63 and .Ltmp1453
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1453-.Lfunc_begin63       # >> Call Site 2 <<
	.uleb128 .Ltmp1454-.Ltmp1453            #   Call between .Ltmp1453 and .Ltmp1454
	.uleb128 .Ltmp1455-.Lfunc_begin63       #     jumps to .Ltmp1455
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1454-.Lfunc_begin63       # >> Call Site 3 <<
	.uleb128 .Lfunc_end119-.Ltmp1454        #   Call between .Ltmp1454 and .Lfunc_end119
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end63:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,"axG",@progbits,_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,comdat
	.weak	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_ # -- Begin function _ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.p2align	4, 0x90
	.type	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_,@function
_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_: # @_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r10
	movq	%rdi, %r9
	movq	%rdx, 16(%rsp)                  # 8-byte Spill
	cmpq	%rdx, %rsi
	jle	.LBB120_22
# %bb.1:                                # %.lr.ph
	movq	%rcx, 8(%rsp)                   # 8-byte Spill
	jmp	.LBB120_5
.LBB120_2:                              #   in Loop: Header=BB120_5 Depth=1
	movq	%rbp, %rsi
	movq	%r13, %rdx
	movq	%rcx, %rbx
	movq	%r14, (%rsp)                    # 8-byte Spill
	movq	%r9, %r14
	movq	%r10, %r13
	movq	%r11, %rbp
	callq	memcpy@PLT
	movq	%rbp, %r11
	movq	%r13, %r10
	movq	%r14, %r9
	movq	(%rsp), %r14                    # 8-byte Reload
	movq	%rbx, %rcx
.LBB120_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB120_5 Depth=1
	movq	(%r14), %rax
	movq	%rax, 8(%r9,%r15)
	movq	(%r12), %rdx
	movb	$0, (%rdx,%rax)
	movq	(%r11), %rax
.LBB120_4:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB120_5 Depth=1
	movq	$0, (%r14)
	movb	$0, (%rax)
	cmpq	16(%rsp), %r10                  # 8-byte Folded Reload
	jle	.LBB120_22
.LBB120_5:                              # =>This Inner Loop Header: Depth=1
	movq	%r10, %r15
	leaq	-1(%r10), %rax
	shrq	$63, %rax
	addq	%rax, %r10
	decq	%r10
	sarq	%r10
	movq	%r10, %rbx
	shlq	$5, %rbx
	leaq	(%r9,%rbx), %r11
	movq	8(%r9,%rbx), %r13
	cmpq	8(%rcx), %r13
	jne	.LBB120_8
# %bb.6:                                #   in Loop: Header=BB120_5 Depth=1
	testq	%r13, %r13
	je	.LBB120_21
# %bb.7:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB120_5 Depth=1
	movq	(%rcx), %rsi
	movq	(%r11), %rbp
	movq	%rbp, %rdi
	movq	%r13, %rdx
	movq	%r9, %r14
	movq	%r10, (%rsp)                    # 8-byte Spill
	movq	%r11, %r12
	callq	memcmp
	movq	%r12, %r11
	movq	(%rsp), %r10                    # 8-byte Reload
	movq	%r14, %r9
	movq	8(%rsp), %rcx                   # 8-byte Reload
	testl	%eax, %eax
	js	.LBB120_10
	jmp	.LBB120_21
	.p2align	4, 0x90
.LBB120_8:                              # %_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESR_EEbSE_RSH_.exit
                                        #   in Loop: Header=BB120_5 Depth=1
	jae	.LBB120_21
# %bb.9:                                # %_ZN9__gnu_cxx5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESR_EEbSE_RSH_.exit._crit_edge
                                        #   in Loop: Header=BB120_5 Depth=1
	movq	(%r11), %rbp
.LBB120_10:                             #   in Loop: Header=BB120_5 Depth=1
	leaq	(%r9,%rbx), %r14
	addq	$8, %r14
	shlq	$5, %r15
	leaq	(%r9,%r15), %r12
	leaq	(%r9,%rbx), %rax
	addq	$16, %rax
	cmpq	%rax, %rbp
	je	.LBB120_14
# %bb.11:                               #   in Loop: Header=BB120_5 Depth=1
	leaq	(%r9,%r15), %rdx
	addq	$16, %rdx
	movq	(%r12), %r8
	cmpq	%rdx, %r8
	je	.LBB120_17
# %bb.12:                               #   in Loop: Header=BB120_5 Depth=1
	movq	(%rdx), %rsi
	movq	%rbp, (%r12)
	movq	%r13, 8(%r9,%r15)
	movq	(%rax), %rdi
	movq	%rdi, (%rdx)
	testq	%r8, %r8
	je	.LBB120_18
# %bb.13:                               #   in Loop: Header=BB120_5 Depth=1
	movq	%r8, (%r11)
	movq	%rsi, (%rax)
	movq	%r8, %rax
	jmp	.LBB120_4
	.p2align	4, 0x90
.LBB120_14:                             #   in Loop: Header=BB120_5 Depth=1
	testq	%r13, %r13
	je	.LBB120_3
# %bb.15:                               #   in Loop: Header=BB120_5 Depth=1
	movq	(%r12), %rdi
	cmpq	$1, %r13
	jne	.LBB120_2
# %bb.16:                               #   in Loop: Header=BB120_5 Depth=1
	movzbl	(%rbp), %eax
	movb	%al, (%rdi)
	jmp	.LBB120_3
	.p2align	4, 0x90
.LBB120_17:                             # %.thread.i
                                        #   in Loop: Header=BB120_5 Depth=1
	movq	%rbp, (%r12)
	movq	%r13, 8(%r9,%r15)
	movq	(%rax), %rsi
	movq	%rsi, (%rdx)
.LBB120_18:                             #   in Loop: Header=BB120_5 Depth=1
	movq	%rax, (%r11)
	jmp	.LBB120_4
.LBB120_21:
	movq	%r15, %r10
.LBB120_22:                             # %.critedge
	shlq	$5, %r10
	leaq	(%r9,%r10), %r15
	movq	(%rcx), %rsi
	leaq	16(%rcx), %rax
	cmpq	%rax, %rsi
	je	.LBB120_26
# %bb.23:
	leaq	(%r9,%r10), %rdx
	addq	$16, %rdx
	movq	(%r15), %r8
	cmpq	%rdx, %r8
	je	.LBB120_29
# %bb.24:
	movq	(%rdx), %rdi
	movq	%rsi, (%r15)
	movq	8(%rcx), %rsi
	movq	%rsi, 8(%r9,%r10)
	movq	16(%rcx), %rsi
	movq	%rsi, (%rdx)
	testq	%r8, %r8
	je	.LBB120_30
# %bb.25:
	movq	%r8, (%rcx)
	movq	%rdi, 16(%rcx)
	movq	%r8, %rax
	jmp	.LBB120_33
.LBB120_26:
	movq	8(%rcx), %rdx
	testq	%rdx, %rdx
	je	.LBB120_32
# %bb.27:
	movq	(%r15), %rdi
	cmpq	$1, %rdx
	jne	.LBB120_31
# %bb.28:
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB120_32
.LBB120_29:                             # %.thread.i14
	movq	%rsi, (%r15)
	movq	8(%rcx), %rsi
	movq	%rsi, 8(%r9,%r10)
	movq	16(%rcx), %rsi
	movq	%rsi, (%rdx)
.LBB120_30:
	movq	%rax, (%rcx)
	jmp	.LBB120_33
.LBB120_31:
	movq	%rcx, %rbx
	movq	%r9, %r14
	movq	%r10, %r12
	callq	memcpy@PLT
	movq	%r12, %r10
	movq	%r14, %r9
	movq	%rbx, %rcx
.LBB120_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i13
	movq	8(%rcx), %rax
	movq	%rax, 8(%r9,%r10)
	movq	(%r15), %rdx
	movb	$0, (%rdx,%rax)
	movq	(%rcx), %rax
.LBB120_33:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit16
	movq	$0, 8(%rcx)
	movb	$0, (%rax)
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end120:
	.size	_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_, .Lfunc_end120-_ZSt11__push_heapIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops14_Iter_comp_valIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_SS_T1_RT2_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,"axG",@progbits,_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,comdat
	.weak	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_ # -- Begin function _ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.p2align	4, 0x90
	.type	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_,@function
_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_: # @_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %r14
	movq	%rdx, %r15
	movq	%rsi, %r12
	movq	8(%rsi), %r13
	movq	8(%rdx), %rbp
	cmpq	%rbp, %r13
	jne	.LBB121_6
# %bb.1:
	testq	%r13, %r13
	je	.LBB121_14
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	movq	(%r15), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	testl	%eax, %eax
	js	.LBB121_7
.LBB121_3:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
	movq	8(%r14), %rax
	cmpq	%rax, %r13
	jne	.LBB121_15
# %bb.4:
	testq	%r13, %r13
	je	.LBB121_18
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i39
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r12, %rsi
	testl	%eax, %eax
	js	.LBB121_25
.LBB121_19:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i42.thread
	cmpq	%r13, %rbp
	jne	.LBB121_23
.LBB121_20:
	testq	%rbp, %rbp
	je	.LBB121_24
# %bb.21:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i45
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r15), %rdi
	movq	%rbp, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r14, %rsi
	testl	%eax, %eax
	jns	.LBB121_24
	jmp	.LBB121_25
.LBB121_6:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
	jae	.LBB121_3
.LBB121_7:
	movq	8(%r14), %rbx
	cmpq	%rbx, %rbp
	jne	.LBB121_10
# %bb.8:
	testq	%rbp, %rbp
	je	.LBB121_11
# %bb.9:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i27
	movq	(%r14), %rsi
	movq	%rdi, (%rsp)                    # 8-byte Spill
	movq	(%r15), %rdi
	movq	%rbp, %rdx
	callq	memcmp
	movq	(%rsp), %rdi                    # 8-byte Reload
	movq	%r15, %rsi
	testl	%eax, %eax
	jns	.LBB121_11
	jmp	.LBB121_25
.LBB121_10:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit31
	movq	%r15, %rsi
	jb	.LBB121_25
.LBB121_11:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i30.thread
	cmpq	%rbx, %r13
	jne	.LBB121_16
# %bb.12:
	testq	%r13, %r13
	je	.LBB121_26
# %bb.13:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i33
	movq	(%r14), %rsi
	movq	%rdi, %rbx
	movq	(%r12), %rdi
	movq	%r13, %rdx
	callq	memcmp
	movq	%rbx, %rdi
	movq	%r14, %rsi
	testl	%eax, %eax
	jns	.LBB121_26
	jmp	.LBB121_25
.LBB121_14:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.thread
	movq	8(%r14), %rax
	testq	%rax, %rax
	je	.LBB121_22
.LBB121_15:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit43
	movq	%r12, %rsi
	cmpq	%rax, %r13
	movq	%rax, %r13
	jae	.LBB121_19
	jmp	.LBB121_25
.LBB121_16:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit37
	movq	%r14, %rsi
	jb	.LBB121_25
.LBB121_26:
	movq	%r12, %rsi
	jmp	.LBB121_25
.LBB121_18:
	xorl	%r13d, %r13d
	cmpq	%r13, %rbp
	jne	.LBB121_23
	jmp	.LBB121_20
.LBB121_22:
	xorl	%r13d, %r13d
	cmpq	%r13, %rbp
	je	.LBB121_20
.LBB121_23:                             # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit49
	movq	%r14, %rsi
	jb	.LBB121_25
.LBB121_24:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i48.thread
	movq	%r15, %rsi
.LBB121_25:
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_ # TAILCALL
.Lfunc_end121:
	.size	_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_, .Lfunc_end121-_ZSt22__move_median_to_firstIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SP_SP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,"axG",@progbits,_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,comdat
	.weak	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_ # -- Begin function _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.p2align	4, 0x90
	.type	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_,@function
_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_: # @_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$56, %rsp
	.cfi_def_cfa_offset 112
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 40(%rsp)                  # 8-byte Spill
	cmpq	%rsi, %rdi
	je	.LBB122_41
# %bb.1:                                # %.preheader
	movq	%rdi, %r13
	leaq	32(%rdi), %rax
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB122_41
# %bb.2:                                # %.lr.ph
	leaq	16(%r13), %rcx
	movq	%rcx, 48(%rsp)                  # 8-byte Spill
	leaq	48(%r13), %r14
	movl	$32, %ebx
	movq	%r13, %r15
	movq	%r13, (%rsp)                    # 8-byte Spill
	jmp	.LBB122_3
	.p2align	4, 0x90
.LBB122_6:                              # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	%r12, %rdi
	callq	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	movq	(%rsp), %r13                    # 8-byte Reload
.LBB122_40:                             #   in Loop: Header=BB122_3 Depth=1
	leaq	32(%r12), %rax
	addq	$32, %rbx
	addq	$32, %r14
	movq	%r12, %r15
	cmpq	40(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB122_41
.LBB122_3:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB122_14 Depth 2
	movq	%rax, %r12
	movq	40(%r15), %rbp
	cmpq	8(%r13), %rbp
	jne	.LBB122_7
# %bb.4:                                #   in Loop: Header=BB122_3 Depth=1
	testq	%rbp, %rbp
	je	.LBB122_6
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	(%rsp), %rax                    # 8-byte Reload
	movq	(%rax), %rsi
	movq	32(%r15), %r13
	movq	%r13, %rdi
	movq	%rbp, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB122_6
	jmp	.LBB122_9
	.p2align	4, 0x90
.LBB122_7:                              # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit
                                        #   in Loop: Header=BB122_3 Depth=1
	jae	.LBB122_6
# %bb.8:                                # %_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINS_17__normal_iteratorIPNSt7__cxx1112basic_stringIcS7_SaIcEEESt6vectorISR_SaISR_EEEESW_EEbSE_SH_.exit._crit_edge
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	(%r12), %r13
.LBB122_9:                              #   in Loop: Header=BB122_3 Depth=1
	leaq	24(%rsp), %rcx
	movq	%rcx, 8(%rsp)
	leaq	48(%r15), %rax
	cmpq	%rax, %r13
	je	.LBB122_10
# %bb.11:                               #   in Loop: Header=BB122_3 Depth=1
	movq	%r13, 8(%rsp)
	movq	(%rax), %rcx
	movq	%rcx, 24(%rsp)
	jmp	.LBB122_12
.LBB122_10:                             #   in Loop: Header=BB122_3 Depth=1
	movups	(%r13), %xmm0
	movups	%xmm0, (%rcx)
	movq	%rcx, %r13
.LBB122_12:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	%rbp, 16(%rsp)
	movq	%rax, 32(%r15)
	movq	$0, 40(%r15)
	movb	$0, 48(%r15)
	movq	%r12, %rax
	subq	(%rsp), %rax                    # 8-byte Folded Reload
	testq	%rax, %rax
	jle	.LBB122_27
# %bb.13:                               # %.lr.ph.preheader.i.i.i.i
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	%rbx, %r13
	shrq	$5, %r13
	incq	%r13
	movq	%r14, %r15
	jmp	.LBB122_14
.LBB122_18:                             #   in Loop: Header=BB122_14 Depth=2
	callq	memcpy@PLT
.LBB122_19:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i.i.i.i.i
                                        #   in Loop: Header=BB122_14 Depth=2
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, -8(%rbp)
	movb	$0, (%rcx,%rax)
	movq	-48(%rbp), %rax
.LBB122_25:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit.i.i.i.i
                                        #   in Loop: Header=BB122_14 Depth=2
	movq	$0, -40(%rbp)
	movb	$0, (%rax)
	decq	%r13
	cmpq	$1, %r13
	jle	.LBB122_26
.LBB122_14:                             # %.lr.ph.i.i.i.i
                                        #   Parent Loop BB122_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	movq	%r15, %rbp
	movq	-48(%r15), %rsi
	addq	$-32, %r15
	cmpq	%rsi, %r15
	je	.LBB122_15
# %bb.20:                               #   in Loop: Header=BB122_14 Depth=2
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB122_21
# %bb.23:                               #   in Loop: Header=BB122_14 Depth=2
	movq	(%rbp), %rcx
	movq	%rsi, -16(%rbp)
	movups	-40(%rbp), %xmm0
	movups	%xmm0, -8(%rbp)
	testq	%rax, %rax
	je	.LBB122_22
# %bb.24:                               #   in Loop: Header=BB122_14 Depth=2
	movq	%rax, -48(%rbp)
	movq	%rcx, -32(%rbp)
	jmp	.LBB122_25
	.p2align	4, 0x90
.LBB122_15:                             #   in Loop: Header=BB122_14 Depth=2
	movq	-40(%rbp), %rdx
	testq	%rdx, %rdx
	je	.LBB122_19
# %bb.16:                               #   in Loop: Header=BB122_14 Depth=2
	movq	-16(%rbp), %rdi
	cmpq	$1, %rdx
	jne	.LBB122_18
# %bb.17:                               #   in Loop: Header=BB122_14 Depth=2
	movzbl	(%rsi), %eax
	movb	%al, (%rdi)
	jmp	.LBB122_19
	.p2align	4, 0x90
.LBB122_21:                             # %.thread.i.i.i.i.i
                                        #   in Loop: Header=BB122_14 Depth=2
	movq	%rsi, -16(%rbp)
	movups	-40(%rbp), %xmm0
	movups	%xmm0, -8(%rbp)
.LBB122_22:                             #   in Loop: Header=BB122_14 Depth=2
	movq	%r15, -48(%rbp)
	movq	%r15, %rax
	jmp	.LBB122_25
	.p2align	4, 0x90
.LBB122_26:                             # %.loopexit.loopexit
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	8(%rsp), %r13
.LBB122_27:                             # %.loopexit
                                        #   in Loop: Header=BB122_3 Depth=1
	leaq	24(%rsp), %r15
	cmpq	%r15, %r13
	je	.LBB122_28
# %bb.33:                               #   in Loop: Header=BB122_3 Depth=1
	movq	(%rsp), %rdx                    # 8-byte Reload
	movq	(%rdx), %rax
	cmpq	48(%rsp), %rax                  # 8-byte Folded Reload
	je	.LBB122_34
# %bb.36:                               #   in Loop: Header=BB122_3 Depth=1
	movq	16(%rdx), %rcx
	movq	%r13, (%rdx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rdx)
	testq	%rax, %rax
	movq	%rdx, %r13
	je	.LBB122_35
# %bb.37:                               #   in Loop: Header=BB122_3 Depth=1
	movq	%rax, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB122_38
.LBB122_28:                             #   in Loop: Header=BB122_3 Depth=1
	movq	16(%rsp), %rdx
	testq	%rdx, %rdx
	movq	(%rsp), %r13                    # 8-byte Reload
	je	.LBB122_32
# %bb.29:                               #   in Loop: Header=BB122_3 Depth=1
	movq	(%r13), %rdi
	cmpq	$1, %rdx
	jne	.LBB122_31
# %bb.30:                               #   in Loop: Header=BB122_3 Depth=1
	movzbl	24(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB122_32
.LBB122_34:                             # %.thread.i
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	%r13, (%rdx)
	movups	16(%rsp), %xmm0
	movups	%xmm0, 8(%rdx)
	movq	%rdx, %r13
.LBB122_35:                             #   in Loop: Header=BB122_3 Depth=1
	movq	%r15, 8(%rsp)
	movq	%r15, %rax
	jmp	.LBB122_38
.LBB122_31:                             #   in Loop: Header=BB122_3 Depth=1
	movq	%r15, %rsi
	callq	memcpy@PLT
.LBB122_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	16(%rsp), %rax
	movq	%rax, 8(%r13)
	movq	(%r13), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB122_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB122_3 Depth=1
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%r15, %rdi
	je	.LBB122_40
# %bb.39:                               #   in Loop: Header=BB122_3 Depth=1
	callq	_ZdlPv
	jmp	.LBB122_40
.LBB122_41:                             # %.loopexit18
	addq	$56, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end122:
	.size	_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_, .Lfunc_end122-_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,"axG",@progbits,_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,comdat
	.weak	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_ # -- Begin function _ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.p2align	4, 0x90
	.type	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_,@function
_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_: # @_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$40, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	leaq	24(%rsp), %rbx
	movq	%rbx, 8(%rsp)
	movq	(%rdi), %rax
	leaq	16(%rdi), %rbp
	cmpq	%rbp, %rax
	je	.LBB123_1
# %bb.2:
	movq	%rax, 8(%rsp)
	movq	(%rbp), %rax
	movq	%rax, 24(%rsp)
	jmp	.LBB123_3
.LBB123_1:
	movups	(%rax), %xmm0
	movups	%xmm0, (%rbx)
.LBB123_3:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_.exit
	movq	8(%rdi), %r14
	movq	%r14, 16(%rsp)
	movq	%rbp, (%rdi)
	movq	$0, 8(%rdi)
	movb	$0, 16(%rdi)
	jmp	.LBB123_4
.LBB123_13:                             #   in Loop: Header=BB123_4 Depth=1
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB123_14:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
                                        #   in Loop: Header=BB123_4 Depth=1
	movq	-40(%rbp), %rax
	movq	-16(%rbp), %rcx
	movq	%rax, -8(%rbp)
	movb	$0, (%rcx,%rax)
	movq	-48(%rbp), %rax
.LBB123_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
                                        #   in Loop: Header=BB123_4 Depth=1
	movq	$0, -40(%rbp)
	movb	$0, (%rax)
	movq	16(%rsp), %r14
	movq	%r13, %rbp
.LBB123_4:                              # =>This Inner Loop Header: Depth=1
	movq	-40(%rbp), %r15
	cmpq	%r15, %r14
	jne	.LBB123_7
# %bb.5:                                #   in Loop: Header=BB123_4 Depth=1
	testq	%r14, %r14
	je	.LBB123_28
# %bb.6:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
                                        #   in Loop: Header=BB123_4 Depth=1
	movq	-48(%rbp), %r12
	movq	8(%rsp), %r13
	movq	%r13, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	memcmp
	testl	%eax, %eax
	jns	.LBB123_22
# %bb.9:                                #   in Loop: Header=BB123_4 Depth=1
	leaq	-32(%rbp), %r13
	cmpq	%r12, %r13
	je	.LBB123_10
.LBB123_15:                             #   in Loop: Header=BB123_4 Depth=1
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB123_16
# %bb.18:                               #   in Loop: Header=BB123_4 Depth=1
	movq	-32(%rbp), %rdx
	movq	(%rbp), %rcx
	movq	%r12, -16(%rbp)
	movq	%r15, -8(%rbp)
	movq	%rdx, (%rbp)
	testq	%rax, %rax
	je	.LBB123_17
# %bb.19:                               #   in Loop: Header=BB123_4 Depth=1
	movq	%rax, -48(%rbp)
	movq	%rcx, -32(%rbp)
	jmp	.LBB123_20
	.p2align	4, 0x90
.LBB123_7:                              # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit
                                        #   in Loop: Header=BB123_4 Depth=1
	jae	.LBB123_21
# %bb.8:                                # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit._crit_edge
                                        #   in Loop: Header=BB123_4 Depth=1
	movq	-48(%rbp), %r12
	leaq	-32(%rbp), %r13
	cmpq	%r12, %r13
	jne	.LBB123_15
.LBB123_10:                             #   in Loop: Header=BB123_4 Depth=1
	testq	%r15, %r15
	je	.LBB123_14
# %bb.11:                               #   in Loop: Header=BB123_4 Depth=1
	movq	-16(%rbp), %rdi
	cmpq	$1, %r15
	jne	.LBB123_13
# %bb.12:                               #   in Loop: Header=BB123_4 Depth=1
	movzbl	(%r12), %eax
	movb	%al, (%rdi)
	jmp	.LBB123_14
	.p2align	4, 0x90
.LBB123_16:                             # %.thread.i
                                        #   in Loop: Header=BB123_4 Depth=1
	movq	%r12, -16(%rbp)
	movq	%r15, -8(%rbp)
	movq	-32(%rbp), %rax
	movq	%rax, (%rbp)
.LBB123_17:                             #   in Loop: Header=BB123_4 Depth=1
	movq	%r13, -48(%rbp)
	movq	%r13, %rax
	jmp	.LBB123_20
.LBB123_28:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread.thread
	movq	8(%rsp), %r13
	cmpq	%rbx, %r13
	jne	.LBB123_29
	jmp	.LBB123_27
.LBB123_21:                             # %_ZN9__gnu_cxx5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcSt11char_traitsIcEEOSt5arrayIS8_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EclINSt7__cxx1112basic_stringIcS7_SaIcEEENS_17__normal_iteratorIPSQ_St6vectorISQ_SaISQ_EEEEEEbRSE_SH_.exit._ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread_crit_edge
	movq	8(%rsp), %r13
.LBB123_22:                             # %_ZStltIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EESA_.exit.i.i.thread
	cmpq	%rbx, %r13
	je	.LBB123_23
.LBB123_29:
	movq	-16(%rbp), %rax
	cmpq	%rax, %rbp
	je	.LBB123_30
# %bb.32:
	movq	(%rbp), %rcx
	movq	%r13, -16(%rbp)
	movq	%r14, -8(%rbp)
	movq	24(%rsp), %rdx
	movq	%rdx, (%rbp)
	testq	%rax, %rax
	je	.LBB123_31
# %bb.33:
	movq	%rax, 8(%rsp)
	movq	%rcx, 24(%rsp)
	jmp	.LBB123_34
.LBB123_23:
	testq	%r14, %r14
	je	.LBB123_27
# %bb.24:
	movq	-16(%rbp), %rdi
	cmpq	$1, %r14
	jne	.LBB123_26
# %bb.25:
	movzbl	24(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB123_27
.LBB123_30:                             # %.thread.i5
	movq	%r13, -16(%rbp)
	movq	%r14, -8(%rbp)
	movq	24(%rsp), %rax
	movq	%rax, (%rbp)
.LBB123_31:
	movq	%rbx, 8(%rsp)
	movq	%rbx, %rax
	jmp	.LBB123_34
.LBB123_26:
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	memcpy@PLT
.LBB123_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i4
	movq	16(%rsp), %rax
	movq	%rax, -8(%rbp)
	movq	-16(%rbp), %rcx
	movb	$0, (%rcx,%rax)
	movq	8(%rsp), %rax
.LBB123_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit7
	movq	$0, 16(%rsp)
	movb	$0, (%rax)
	movq	8(%rsp), %rdi
	cmpq	%rbx, %rdi
	je	.LBB123_36
# %bb.35:
	callq	_ZdlPv
.LBB123_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	addq	$40, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end123:
	.size	_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_, .Lfunc_end123-_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS7_SaIS7_EEEENS0_5__ops14_Val_comp_iterIZN8argparse8ArgumentC1ILm1EJLm0EEEESt17basic_string_viewIcS5_EOSt5arrayISJ_XT_EESt16integer_sequenceImJXspT0_EEEEUlRKT_RKT0_E_EEEvSP_SS_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_,"axG",@progbits,_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_,comdat
	.weak	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_ # -- Begin function _ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_
	.p2align	4, 0x90
	.type	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_,@function
_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_: # @_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rsi, %rcx
	movq	%rdi, %rbx
	movq	(%rdx), %rax
	movq	8(%rdx), %rsi
	movq	%rcx, %rdi
	movq	%rax, %rdx
	callq	_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE
	movq	$_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, (%rbx)
	movq	$0, 8(%rbx)
	movl	%eax, 8(%rbx)
	movq	%rbx, %rax
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end124:
	.size	_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_, .Lfunc_end124-_ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation,"axG",@progbits,_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation,comdat
	.weak	_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation # -- Begin function _ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
	.p2align	4, 0x90
	.type	_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation,@function
_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation: # @_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
	.cfi_startproc
# %bb.0:
	testl	%edx, %edx
	je	.LBB125_1
# %bb.2:
	cmpl	$1, %edx
	je	.LBB125_3
# %bb.4:
	xorl	%eax, %eax
	retq
.LBB125_1:
	movl	$_ZTIN8argparse7details12parse_numberIiLi0EEE, %esi
.LBB125_3:                              # %.sink.split
	movq	%rsi, (%rdi)
	xorl	%eax, %eax
	retq
.Lfunc_end125:
	.size	_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation, .Lfunc_end125-_ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
	.cfi_endproc
                                        # -- End function
	.section	.text._ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin64:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception64
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$152, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %rbx
	movq	%rsi, %r14
	movq	%rsi, 136(%rsp)
	movq	%rdx, 144(%rsp)
	movl	$2, %r15d
	cmpq	$2, %rsi
	cmovbq	%rsi, %r15
	jae	.LBB126_1
# %bb.101:                              # %.thread
	testq	%r14, %r14
	je	.LBB126_150
.LBB126_102:                            # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i
	cmpb	$48, (%rbx)
	jne	.LBB126_150
# %bb.103:
.Ltmp1538:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1539:
	jmp	.LBB126_5
.LBB126_1:
	testq	%r15, %r15
	je	.LBB126_4
# %bb.2:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i
	movl	$.L.str.105, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB126_4
# %bb.3:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i9.i
	movl	$.L.str.106, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB126_4
# %bb.52:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i175
	movl	$.L.str.111, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	je	.LBB126_54
# %bb.53:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i5.i
	movl	$.L.str.112, %esi
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	bcmp@PLT
	testl	%eax, %eax
	jne	.LBB126_102
.LBB126_54:
	addq	$2, %rbx
	addq	$-2, %r14
.Ltmp1456:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1457:
	jmp	.LBB126_5
.LBB126_4:
	addq	$2, %rbx
	addq	$-2, %r14
.Ltmp1497:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1498:
	jmp	.LBB126_5
.LBB126_150:                            # %_ZN8argparse7details11starts_withIcSt11char_traitsIcEEEbSt17basic_string_viewIT_T0_ES7_.exit
.Ltmp1579:
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Ltmp1580:
.LBB126_5:
	addq	$152, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB126_55:
	.cfi_def_cfa_offset 192
.Ltmp1458:
	movq	%rax, %rbx
	cmpl	$2, %edx
	jne	.LBB126_62
# %bb.56:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1478:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1479:
# %bb.57:
.Ltmp1481:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1482:
# %bb.58:
.Ltmp1484:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.101, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1485:
# %bb.59:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1487:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1488:
# %bb.60:
	movb	$1, %bpl
.Ltmp1490:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1491:
# %bb.61:
	xorl	%ebp, %ebp
.Ltmp1492:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1493:
	jmp	.LBB126_199
.LBB126_62:
	cmpl	$1, %edx
	jne	.LBB126_197
# %bb.63:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1459:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1460:
# %bb.64:
.Ltmp1462:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1463:
# %bb.65:
.Ltmp1465:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.101, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1466:
# %bb.66:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1468:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1469:
# %bb.67:
	movb	$1, %bpl
.Ltmp1471:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1472:
# %bb.68:
	xorl	%ebp, %ebp
.Ltmp1473:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1474:
	jmp	.LBB126_199
.LBB126_72:
.Ltmp1475:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_73
# %bb.74:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit177
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_75
.LBB126_76:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_77
.LBB126_78:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_79
.LBB126_80:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit180
	testb	%bpl, %bpl
	jne	.LBB126_83
	jmp	.LBB126_84
.LBB126_73:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_76
	jmp	.LBB126_75
.LBB126_71:
.Ltmp1470:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_76
.LBB126_75:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_78
	jmp	.LBB126_77
.LBB126_70:
.Ltmp1467:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_78
.LBB126_77:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_80
.LBB126_79:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_83
	jmp	.LBB126_84
.LBB126_88:
.Ltmp1494:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_89
# %bb.90:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit181
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_91
.LBB126_92:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit182
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_93
.LBB126_94:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit183
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_95
.LBB126_96:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit184
	testb	%bpl, %bpl
	jne	.LBB126_99
	jmp	.LBB126_100
.LBB126_89:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_92
	jmp	.LBB126_91
.LBB126_87:
.Ltmp1489:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_92
.LBB126_91:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_94
	jmp	.LBB126_93
.LBB126_81:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit179.thread
.Ltmp1464:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_83
# %bb.82:                               # %.thread331
	callq	_ZdlPv
	jmp	.LBB126_83
.LBB126_86:
.Ltmp1486:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_94
.LBB126_93:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_96
.LBB126_95:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_99
	jmp	.LBB126_100
.LBB126_69:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit180.thread
.Ltmp1461:
	movq	%rax, %rbx
.LBB126_83:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_84:
.Ltmp1476:
	callq	__cxa_end_catch
.Ltmp1477:
	jmp	.LBB126_197
.LBB126_97:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit183.thread
.Ltmp1483:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_99
# %bb.98:                               # %.thread345
	callq	_ZdlPv
	jmp	.LBB126_99
.LBB126_85:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit184.thread
.Ltmp1480:
	movq	%rax, %rbx
.LBB126_99:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_100:
.Ltmp1495:
	callq	__cxa_end_catch
.Ltmp1496:
	jmp	.LBB126_197
.LBB126_104:
.Ltmp1540:
	movq	%rax, %rbx
	cmpl	$2, %edx
	jne	.LBB126_111
# %bb.105:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1560:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1561:
# %bb.106:
.Ltmp1563:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1564:
# %bb.107:
.Ltmp1566:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.103, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1567:
# %bb.108:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1569:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1570:
# %bb.109:
	movb	$1, %bpl
.Ltmp1572:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1573:
# %bb.110:
	xorl	%ebp, %ebp
.Ltmp1574:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1575:
	jmp	.LBB126_199
.LBB126_111:
	cmpl	$1, %edx
	jne	.LBB126_197
# %bb.112:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1541:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1542:
# %bb.113:
.Ltmp1544:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1545:
# %bb.114:
.Ltmp1547:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.103, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1548:
# %bb.115:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1550:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1551:
# %bb.116:
	movb	$1, %bpl
.Ltmp1553:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1554:
# %bb.117:
	xorl	%ebp, %ebp
.Ltmp1555:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1556:
	jmp	.LBB126_199
.LBB126_121:
.Ltmp1557:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_122
# %bb.123:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit185
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_124
.LBB126_125:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit186
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_126
.LBB126_127:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit187
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_128
.LBB126_129:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit188
	testb	%bpl, %bpl
	jne	.LBB126_132
	jmp	.LBB126_133
.LBB126_122:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_125
	jmp	.LBB126_124
.LBB126_120:
.Ltmp1552:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_125
.LBB126_124:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_127
	jmp	.LBB126_126
.LBB126_137:
.Ltmp1576:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_138
# %bb.139:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit189
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_140
.LBB126_141:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit190
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_142
.LBB126_143:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit191
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_144
.LBB126_145:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit192
	testb	%bpl, %bpl
	jne	.LBB126_148
	jmp	.LBB126_149
.LBB126_138:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_141
	jmp	.LBB126_140
.LBB126_119:
.Ltmp1549:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_127
.LBB126_126:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_129
.LBB126_128:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_132
	jmp	.LBB126_133
.LBB126_136:
.Ltmp1571:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_141
.LBB126_140:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_143
	jmp	.LBB126_142
.LBB126_130:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit187.thread
.Ltmp1546:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_132
# %bb.131:                              # %.thread359
	callq	_ZdlPv
	jmp	.LBB126_132
.LBB126_135:
.Ltmp1568:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_143
.LBB126_142:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_145
.LBB126_144:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_148
	jmp	.LBB126_149
.LBB126_118:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit188.thread
.Ltmp1543:
	movq	%rax, %rbx
.LBB126_132:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_133:
.Ltmp1558:
	callq	__cxa_end_catch
.Ltmp1559:
	jmp	.LBB126_197
.LBB126_146:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit191.thread
.Ltmp1565:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_148
# %bb.147:                              # %.thread373
	callq	_ZdlPv
	jmp	.LBB126_148
.LBB126_134:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit192.thread
.Ltmp1562:
	movq	%rax, %rbx
.LBB126_148:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_149:
.Ltmp1577:
	callq	__cxa_end_catch
.Ltmp1578:
	jmp	.LBB126_197
.LBB126_151:
.Ltmp1581:
	movq	%rax, %rbx
	cmpl	$2, %edx
	jne	.LBB126_158
# %bb.152:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1601:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1602:
# %bb.153:
.Ltmp1604:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1605:
# %bb.154:
.Ltmp1607:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.104, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1608:
# %bb.155:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1610:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1611:
# %bb.156:
	movb	$1, %bpl
.Ltmp1613:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1614:
# %bb.157:
	xorl	%ebp, %ebp
.Ltmp1615:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1616:
	jmp	.LBB126_199
.LBB126_158:
	cmpl	$1, %edx
	jne	.LBB126_197
# %bb.159:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1582:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1583:
# %bb.160:
.Ltmp1585:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1586:
# %bb.161:
.Ltmp1588:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.104, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1589:
# %bb.162:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1591:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1592:
# %bb.163:
	movb	$1, %bpl
.Ltmp1594:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1595:
# %bb.164:
	xorl	%ebp, %ebp
.Ltmp1596:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1597:
	jmp	.LBB126_199
.LBB126_168:
.Ltmp1598:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_169
# %bb.170:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit193
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_171
.LBB126_172:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit194
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_173
.LBB126_174:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit195
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_175
.LBB126_176:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit196
	testb	%bpl, %bpl
	jne	.LBB126_179
	jmp	.LBB126_180
.LBB126_169:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_172
	jmp	.LBB126_171
.LBB126_167:
.Ltmp1593:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_172
.LBB126_171:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_174
	jmp	.LBB126_173
.LBB126_184:
.Ltmp1617:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_185
# %bb.186:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit197
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_187
.LBB126_188:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit198
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_189
.LBB126_190:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit199
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_191
.LBB126_192:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit200
	testb	%bpl, %bpl
	jne	.LBB126_195
	jmp	.LBB126_196
.LBB126_185:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_188
	jmp	.LBB126_187
.LBB126_166:
.Ltmp1590:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_174
.LBB126_173:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_176
.LBB126_175:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_179
	jmp	.LBB126_180
.LBB126_183:
.Ltmp1612:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_188
.LBB126_187:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_190
	jmp	.LBB126_189
.LBB126_177:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit195.thread
.Ltmp1587:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_179
# %bb.178:                              # %.thread387
	callq	_ZdlPv
	jmp	.LBB126_179
.LBB126_182:
.Ltmp1609:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_190
.LBB126_189:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_192
.LBB126_191:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_195
	jmp	.LBB126_196
.LBB126_165:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit196.thread
.Ltmp1584:
	movq	%rax, %rbx
.LBB126_179:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_180:
.Ltmp1599:
	callq	__cxa_end_catch
.Ltmp1600:
	jmp	.LBB126_197
.LBB126_193:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit199.thread
.Ltmp1606:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_195
# %bb.194:                              # %.thread401
	callq	_ZdlPv
	jmp	.LBB126_195
.LBB126_181:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit200.thread
.Ltmp1603:
	movq	%rax, %rbx
.LBB126_195:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_196:
.Ltmp1618:
	callq	__cxa_end_catch
.Ltmp1619:
	jmp	.LBB126_197
.LBB126_6:
.Ltmp1499:
	movq	%rax, %rbx
	cmpl	$2, %edx
	jne	.LBB126_13
# %bb.7:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1519:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1520:
# %bb.8:
.Ltmp1522:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1523:
# %bb.9:
.Ltmp1525:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.100, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1526:
# %bb.10:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1528:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1529:
# %bb.11:
	movb	$1, %bpl
.Ltmp1531:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1532:
# %bb.12:
	xorl	%ebp, %ebp
.Ltmp1533:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1534:
	jmp	.LBB126_199
.LBB126_13:
	cmpl	$1, %edx
	jne	.LBB126_197
# %bb.14:
	movq	%rbx, %rdi
	callq	__cxa_begin_catch
	movq	%rax, %rbx
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1500:
	leaq	8(%rsp), %rdi
	leaq	136(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1501:
# %bb.15:
.Ltmp1503:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.51, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1504:
# %bb.16:
.Ltmp1506:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.100, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1507:
# %bb.17:
	movq	(%rbx), %rax
	movq	%rbx, %rdi
	callq	*16(%rax)
.Ltmp1509:
	leaq	104(%rsp), %rdi
	leaq	72(%rsp), %rsi
	movq	%rax, %rdx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1510:
# %bb.18:
	movb	$1, %bpl
.Ltmp1512:
	leaq	104(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1513:
# %bb.19:
	xorl	%ebp, %ebp
.Ltmp1514:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1515:
.LBB126_199:
.LBB126_23:
.Ltmp1516:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_24
# %bb.25:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_26
.LBB126_27:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit165
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_28
.LBB126_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit166
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_30
.LBB126_31:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit167
	testb	%bpl, %bpl
	jne	.LBB126_34
	jmp	.LBB126_35
.LBB126_24:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_27
	jmp	.LBB126_26
.LBB126_22:
.Ltmp1511:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_27
.LBB126_26:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_29
	jmp	.LBB126_28
.LBB126_39:
.Ltmp1535:
	movq	%rax, %rbx
	movq	104(%rsp), %rdi
	leaq	120(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_40
# %bb.41:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit168
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_42
.LBB126_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit169
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_44
.LBB126_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit170
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB126_46
.LBB126_47:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171
	testb	%bpl, %bpl
	jne	.LBB126_50
	jmp	.LBB126_51
.LBB126_40:
	callq	_ZdlPv
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_43
	jmp	.LBB126_42
.LBB126_21:
.Ltmp1508:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_29
.LBB126_28:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_31
.LBB126_30:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_34
	jmp	.LBB126_35
.LBB126_38:
.Ltmp1530:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_43
.LBB126_42:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_45
	jmp	.LBB126_44
.LBB126_32:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit166.thread
.Ltmp1505:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_34
# %bb.33:                               # %.thread303
	callq	_ZdlPv
	jmp	.LBB126_34
.LBB126_37:
.Ltmp1527:
	movq	%rax, %rbx
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_45
.LBB126_44:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_47
.LBB126_46:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB126_50
	jmp	.LBB126_51
.LBB126_20:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit167.thread
.Ltmp1502:
	movq	%rax, %rbx
.LBB126_34:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_35:
.Ltmp1517:
	callq	__cxa_end_catch
.Ltmp1518:
	jmp	.LBB126_197
.LBB126_48:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit170.thread
.Ltmp1524:
	movq	%rax, %rbx
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB126_50
# %bb.49:                               # %.thread317
	callq	_ZdlPv
	jmp	.LBB126_50
.LBB126_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit171.thread
.Ltmp1521:
	movq	%rax, %rbx
.LBB126_50:
	movq	%r14, %rdi
	callq	__cxa_free_exception
.LBB126_51:
.Ltmp1536:
	callq	__cxa_end_catch
.Ltmp1537:
.LBB126_197:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB126_198:
.Ltmp1620:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end126:
	.size	_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end126-_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZN8argparse7details12parse_numberIiLi0EEclESt17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table126:
.Lexception64:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase29-.Lttbaseref29
.Lttbaseref29:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end64-.Lcst_begin64
.Lcst_begin64:
	.uleb128 .Ltmp1538-.Lfunc_begin64       # >> Call Site 1 <<
	.uleb128 .Ltmp1539-.Ltmp1538            #   Call between .Ltmp1538 and .Ltmp1539
	.uleb128 .Ltmp1540-.Lfunc_begin64       #     jumps to .Ltmp1540
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1456-.Lfunc_begin64       # >> Call Site 2 <<
	.uleb128 .Ltmp1457-.Ltmp1456            #   Call between .Ltmp1456 and .Ltmp1457
	.uleb128 .Ltmp1458-.Lfunc_begin64       #     jumps to .Ltmp1458
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1497-.Lfunc_begin64       # >> Call Site 3 <<
	.uleb128 .Ltmp1498-.Ltmp1497            #   Call between .Ltmp1497 and .Ltmp1498
	.uleb128 .Ltmp1499-.Lfunc_begin64       #     jumps to .Ltmp1499
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1579-.Lfunc_begin64       # >> Call Site 4 <<
	.uleb128 .Ltmp1580-.Ltmp1579            #   Call between .Ltmp1579 and .Ltmp1580
	.uleb128 .Ltmp1581-.Lfunc_begin64       #     jumps to .Ltmp1581
	.byte	5                               #   On action: 3
	.uleb128 .Ltmp1580-.Lfunc_begin64       # >> Call Site 5 <<
	.uleb128 .Ltmp1478-.Ltmp1580            #   Call between .Ltmp1580 and .Ltmp1478
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1478-.Lfunc_begin64       # >> Call Site 6 <<
	.uleb128 .Ltmp1479-.Ltmp1478            #   Call between .Ltmp1478 and .Ltmp1479
	.uleb128 .Ltmp1480-.Lfunc_begin64       #     jumps to .Ltmp1480
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1481-.Lfunc_begin64       # >> Call Site 7 <<
	.uleb128 .Ltmp1482-.Ltmp1481            #   Call between .Ltmp1481 and .Ltmp1482
	.uleb128 .Ltmp1483-.Lfunc_begin64       #     jumps to .Ltmp1483
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1484-.Lfunc_begin64       # >> Call Site 8 <<
	.uleb128 .Ltmp1485-.Ltmp1484            #   Call between .Ltmp1484 and .Ltmp1485
	.uleb128 .Ltmp1486-.Lfunc_begin64       #     jumps to .Ltmp1486
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1485-.Lfunc_begin64       # >> Call Site 9 <<
	.uleb128 .Ltmp1487-.Ltmp1485            #   Call between .Ltmp1485 and .Ltmp1487
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1487-.Lfunc_begin64       # >> Call Site 10 <<
	.uleb128 .Ltmp1488-.Ltmp1487            #   Call between .Ltmp1487 and .Ltmp1488
	.uleb128 .Ltmp1489-.Lfunc_begin64       #     jumps to .Ltmp1489
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1490-.Lfunc_begin64       # >> Call Site 11 <<
	.uleb128 .Ltmp1493-.Ltmp1490            #   Call between .Ltmp1490 and .Ltmp1493
	.uleb128 .Ltmp1494-.Lfunc_begin64       #     jumps to .Ltmp1494
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1493-.Lfunc_begin64       # >> Call Site 12 <<
	.uleb128 .Ltmp1459-.Ltmp1493            #   Call between .Ltmp1493 and .Ltmp1459
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1459-.Lfunc_begin64       # >> Call Site 13 <<
	.uleb128 .Ltmp1460-.Ltmp1459            #   Call between .Ltmp1459 and .Ltmp1460
	.uleb128 .Ltmp1461-.Lfunc_begin64       #     jumps to .Ltmp1461
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1462-.Lfunc_begin64       # >> Call Site 14 <<
	.uleb128 .Ltmp1463-.Ltmp1462            #   Call between .Ltmp1462 and .Ltmp1463
	.uleb128 .Ltmp1464-.Lfunc_begin64       #     jumps to .Ltmp1464
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1465-.Lfunc_begin64       # >> Call Site 15 <<
	.uleb128 .Ltmp1466-.Ltmp1465            #   Call between .Ltmp1465 and .Ltmp1466
	.uleb128 .Ltmp1467-.Lfunc_begin64       #     jumps to .Ltmp1467
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1466-.Lfunc_begin64       # >> Call Site 16 <<
	.uleb128 .Ltmp1468-.Ltmp1466            #   Call between .Ltmp1466 and .Ltmp1468
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1468-.Lfunc_begin64       # >> Call Site 17 <<
	.uleb128 .Ltmp1469-.Ltmp1468            #   Call between .Ltmp1468 and .Ltmp1469
	.uleb128 .Ltmp1470-.Lfunc_begin64       #     jumps to .Ltmp1470
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1471-.Lfunc_begin64       # >> Call Site 18 <<
	.uleb128 .Ltmp1474-.Ltmp1471            #   Call between .Ltmp1471 and .Ltmp1474
	.uleb128 .Ltmp1475-.Lfunc_begin64       #     jumps to .Ltmp1475
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1474-.Lfunc_begin64       # >> Call Site 19 <<
	.uleb128 .Ltmp1476-.Ltmp1474            #   Call between .Ltmp1474 and .Ltmp1476
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1476-.Lfunc_begin64       # >> Call Site 20 <<
	.uleb128 .Ltmp1477-.Ltmp1476            #   Call between .Ltmp1476 and .Ltmp1477
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1477-.Lfunc_begin64       # >> Call Site 21 <<
	.uleb128 .Ltmp1495-.Ltmp1477            #   Call between .Ltmp1477 and .Ltmp1495
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1495-.Lfunc_begin64       # >> Call Site 22 <<
	.uleb128 .Ltmp1496-.Ltmp1495            #   Call between .Ltmp1495 and .Ltmp1496
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1496-.Lfunc_begin64       # >> Call Site 23 <<
	.uleb128 .Ltmp1560-.Ltmp1496            #   Call between .Ltmp1496 and .Ltmp1560
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1560-.Lfunc_begin64       # >> Call Site 24 <<
	.uleb128 .Ltmp1561-.Ltmp1560            #   Call between .Ltmp1560 and .Ltmp1561
	.uleb128 .Ltmp1562-.Lfunc_begin64       #     jumps to .Ltmp1562
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1563-.Lfunc_begin64       # >> Call Site 25 <<
	.uleb128 .Ltmp1564-.Ltmp1563            #   Call between .Ltmp1563 and .Ltmp1564
	.uleb128 .Ltmp1565-.Lfunc_begin64       #     jumps to .Ltmp1565
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1566-.Lfunc_begin64       # >> Call Site 26 <<
	.uleb128 .Ltmp1567-.Ltmp1566            #   Call between .Ltmp1566 and .Ltmp1567
	.uleb128 .Ltmp1568-.Lfunc_begin64       #     jumps to .Ltmp1568
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1567-.Lfunc_begin64       # >> Call Site 27 <<
	.uleb128 .Ltmp1569-.Ltmp1567            #   Call between .Ltmp1567 and .Ltmp1569
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1569-.Lfunc_begin64       # >> Call Site 28 <<
	.uleb128 .Ltmp1570-.Ltmp1569            #   Call between .Ltmp1569 and .Ltmp1570
	.uleb128 .Ltmp1571-.Lfunc_begin64       #     jumps to .Ltmp1571
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1572-.Lfunc_begin64       # >> Call Site 29 <<
	.uleb128 .Ltmp1575-.Ltmp1572            #   Call between .Ltmp1572 and .Ltmp1575
	.uleb128 .Ltmp1576-.Lfunc_begin64       #     jumps to .Ltmp1576
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1575-.Lfunc_begin64       # >> Call Site 30 <<
	.uleb128 .Ltmp1541-.Ltmp1575            #   Call between .Ltmp1575 and .Ltmp1541
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1541-.Lfunc_begin64       # >> Call Site 31 <<
	.uleb128 .Ltmp1542-.Ltmp1541            #   Call between .Ltmp1541 and .Ltmp1542
	.uleb128 .Ltmp1543-.Lfunc_begin64       #     jumps to .Ltmp1543
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1544-.Lfunc_begin64       # >> Call Site 32 <<
	.uleb128 .Ltmp1545-.Ltmp1544            #   Call between .Ltmp1544 and .Ltmp1545
	.uleb128 .Ltmp1546-.Lfunc_begin64       #     jumps to .Ltmp1546
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1547-.Lfunc_begin64       # >> Call Site 33 <<
	.uleb128 .Ltmp1548-.Ltmp1547            #   Call between .Ltmp1547 and .Ltmp1548
	.uleb128 .Ltmp1549-.Lfunc_begin64       #     jumps to .Ltmp1549
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1548-.Lfunc_begin64       # >> Call Site 34 <<
	.uleb128 .Ltmp1550-.Ltmp1548            #   Call between .Ltmp1548 and .Ltmp1550
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1550-.Lfunc_begin64       # >> Call Site 35 <<
	.uleb128 .Ltmp1551-.Ltmp1550            #   Call between .Ltmp1550 and .Ltmp1551
	.uleb128 .Ltmp1552-.Lfunc_begin64       #     jumps to .Ltmp1552
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1553-.Lfunc_begin64       # >> Call Site 36 <<
	.uleb128 .Ltmp1556-.Ltmp1553            #   Call between .Ltmp1553 and .Ltmp1556
	.uleb128 .Ltmp1557-.Lfunc_begin64       #     jumps to .Ltmp1557
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1556-.Lfunc_begin64       # >> Call Site 37 <<
	.uleb128 .Ltmp1558-.Ltmp1556            #   Call between .Ltmp1556 and .Ltmp1558
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1558-.Lfunc_begin64       # >> Call Site 38 <<
	.uleb128 .Ltmp1559-.Ltmp1558            #   Call between .Ltmp1558 and .Ltmp1559
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1559-.Lfunc_begin64       # >> Call Site 39 <<
	.uleb128 .Ltmp1577-.Ltmp1559            #   Call between .Ltmp1559 and .Ltmp1577
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1577-.Lfunc_begin64       # >> Call Site 40 <<
	.uleb128 .Ltmp1578-.Ltmp1577            #   Call between .Ltmp1577 and .Ltmp1578
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1578-.Lfunc_begin64       # >> Call Site 41 <<
	.uleb128 .Ltmp1601-.Ltmp1578            #   Call between .Ltmp1578 and .Ltmp1601
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1601-.Lfunc_begin64       # >> Call Site 42 <<
	.uleb128 .Ltmp1602-.Ltmp1601            #   Call between .Ltmp1601 and .Ltmp1602
	.uleb128 .Ltmp1603-.Lfunc_begin64       #     jumps to .Ltmp1603
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1604-.Lfunc_begin64       # >> Call Site 43 <<
	.uleb128 .Ltmp1605-.Ltmp1604            #   Call between .Ltmp1604 and .Ltmp1605
	.uleb128 .Ltmp1606-.Lfunc_begin64       #     jumps to .Ltmp1606
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1607-.Lfunc_begin64       # >> Call Site 44 <<
	.uleb128 .Ltmp1608-.Ltmp1607            #   Call between .Ltmp1607 and .Ltmp1608
	.uleb128 .Ltmp1609-.Lfunc_begin64       #     jumps to .Ltmp1609
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1608-.Lfunc_begin64       # >> Call Site 45 <<
	.uleb128 .Ltmp1610-.Ltmp1608            #   Call between .Ltmp1608 and .Ltmp1610
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1610-.Lfunc_begin64       # >> Call Site 46 <<
	.uleb128 .Ltmp1611-.Ltmp1610            #   Call between .Ltmp1610 and .Ltmp1611
	.uleb128 .Ltmp1612-.Lfunc_begin64       #     jumps to .Ltmp1612
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1613-.Lfunc_begin64       # >> Call Site 47 <<
	.uleb128 .Ltmp1616-.Ltmp1613            #   Call between .Ltmp1613 and .Ltmp1616
	.uleb128 .Ltmp1617-.Lfunc_begin64       #     jumps to .Ltmp1617
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1616-.Lfunc_begin64       # >> Call Site 48 <<
	.uleb128 .Ltmp1582-.Ltmp1616            #   Call between .Ltmp1616 and .Ltmp1582
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1582-.Lfunc_begin64       # >> Call Site 49 <<
	.uleb128 .Ltmp1583-.Ltmp1582            #   Call between .Ltmp1582 and .Ltmp1583
	.uleb128 .Ltmp1584-.Lfunc_begin64       #     jumps to .Ltmp1584
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1585-.Lfunc_begin64       # >> Call Site 50 <<
	.uleb128 .Ltmp1586-.Ltmp1585            #   Call between .Ltmp1585 and .Ltmp1586
	.uleb128 .Ltmp1587-.Lfunc_begin64       #     jumps to .Ltmp1587
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1588-.Lfunc_begin64       # >> Call Site 51 <<
	.uleb128 .Ltmp1589-.Ltmp1588            #   Call between .Ltmp1588 and .Ltmp1589
	.uleb128 .Ltmp1590-.Lfunc_begin64       #     jumps to .Ltmp1590
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1589-.Lfunc_begin64       # >> Call Site 52 <<
	.uleb128 .Ltmp1591-.Ltmp1589            #   Call between .Ltmp1589 and .Ltmp1591
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1591-.Lfunc_begin64       # >> Call Site 53 <<
	.uleb128 .Ltmp1592-.Ltmp1591            #   Call between .Ltmp1591 and .Ltmp1592
	.uleb128 .Ltmp1593-.Lfunc_begin64       #     jumps to .Ltmp1593
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1594-.Lfunc_begin64       # >> Call Site 54 <<
	.uleb128 .Ltmp1597-.Ltmp1594            #   Call between .Ltmp1594 and .Ltmp1597
	.uleb128 .Ltmp1598-.Lfunc_begin64       #     jumps to .Ltmp1598
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1597-.Lfunc_begin64       # >> Call Site 55 <<
	.uleb128 .Ltmp1599-.Ltmp1597            #   Call between .Ltmp1597 and .Ltmp1599
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1599-.Lfunc_begin64       # >> Call Site 56 <<
	.uleb128 .Ltmp1600-.Ltmp1599            #   Call between .Ltmp1599 and .Ltmp1600
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1600-.Lfunc_begin64       # >> Call Site 57 <<
	.uleb128 .Ltmp1618-.Ltmp1600            #   Call between .Ltmp1600 and .Ltmp1618
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1618-.Lfunc_begin64       # >> Call Site 58 <<
	.uleb128 .Ltmp1619-.Ltmp1618            #   Call between .Ltmp1618 and .Ltmp1619
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1619-.Lfunc_begin64       # >> Call Site 59 <<
	.uleb128 .Ltmp1519-.Ltmp1619            #   Call between .Ltmp1619 and .Ltmp1519
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1519-.Lfunc_begin64       # >> Call Site 60 <<
	.uleb128 .Ltmp1520-.Ltmp1519            #   Call between .Ltmp1519 and .Ltmp1520
	.uleb128 .Ltmp1521-.Lfunc_begin64       #     jumps to .Ltmp1521
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1522-.Lfunc_begin64       # >> Call Site 61 <<
	.uleb128 .Ltmp1523-.Ltmp1522            #   Call between .Ltmp1522 and .Ltmp1523
	.uleb128 .Ltmp1524-.Lfunc_begin64       #     jumps to .Ltmp1524
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1525-.Lfunc_begin64       # >> Call Site 62 <<
	.uleb128 .Ltmp1526-.Ltmp1525            #   Call between .Ltmp1525 and .Ltmp1526
	.uleb128 .Ltmp1527-.Lfunc_begin64       #     jumps to .Ltmp1527
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1526-.Lfunc_begin64       # >> Call Site 63 <<
	.uleb128 .Ltmp1528-.Ltmp1526            #   Call between .Ltmp1526 and .Ltmp1528
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1528-.Lfunc_begin64       # >> Call Site 64 <<
	.uleb128 .Ltmp1529-.Ltmp1528            #   Call between .Ltmp1528 and .Ltmp1529
	.uleb128 .Ltmp1530-.Lfunc_begin64       #     jumps to .Ltmp1530
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1531-.Lfunc_begin64       # >> Call Site 65 <<
	.uleb128 .Ltmp1534-.Ltmp1531            #   Call between .Ltmp1531 and .Ltmp1534
	.uleb128 .Ltmp1535-.Lfunc_begin64       #     jumps to .Ltmp1535
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1534-.Lfunc_begin64       # >> Call Site 66 <<
	.uleb128 .Ltmp1500-.Ltmp1534            #   Call between .Ltmp1534 and .Ltmp1500
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1500-.Lfunc_begin64       # >> Call Site 67 <<
	.uleb128 .Ltmp1501-.Ltmp1500            #   Call between .Ltmp1500 and .Ltmp1501
	.uleb128 .Ltmp1502-.Lfunc_begin64       #     jumps to .Ltmp1502
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1503-.Lfunc_begin64       # >> Call Site 68 <<
	.uleb128 .Ltmp1504-.Ltmp1503            #   Call between .Ltmp1503 and .Ltmp1504
	.uleb128 .Ltmp1505-.Lfunc_begin64       #     jumps to .Ltmp1505
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1506-.Lfunc_begin64       # >> Call Site 69 <<
	.uleb128 .Ltmp1507-.Ltmp1506            #   Call between .Ltmp1506 and .Ltmp1507
	.uleb128 .Ltmp1508-.Lfunc_begin64       #     jumps to .Ltmp1508
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1507-.Lfunc_begin64       # >> Call Site 70 <<
	.uleb128 .Ltmp1509-.Ltmp1507            #   Call between .Ltmp1507 and .Ltmp1509
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1509-.Lfunc_begin64       # >> Call Site 71 <<
	.uleb128 .Ltmp1510-.Ltmp1509            #   Call between .Ltmp1509 and .Ltmp1510
	.uleb128 .Ltmp1511-.Lfunc_begin64       #     jumps to .Ltmp1511
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1512-.Lfunc_begin64       # >> Call Site 72 <<
	.uleb128 .Ltmp1515-.Ltmp1512            #   Call between .Ltmp1512 and .Ltmp1515
	.uleb128 .Ltmp1516-.Lfunc_begin64       #     jumps to .Ltmp1516
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1515-.Lfunc_begin64       # >> Call Site 73 <<
	.uleb128 .Ltmp1517-.Ltmp1515            #   Call between .Ltmp1515 and .Ltmp1517
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1517-.Lfunc_begin64       # >> Call Site 74 <<
	.uleb128 .Ltmp1518-.Ltmp1517            #   Call between .Ltmp1517 and .Ltmp1518
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1518-.Lfunc_begin64       # >> Call Site 75 <<
	.uleb128 .Ltmp1536-.Ltmp1518            #   Call between .Ltmp1518 and .Ltmp1536
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1536-.Lfunc_begin64       # >> Call Site 76 <<
	.uleb128 .Ltmp1537-.Ltmp1536            #   Call between .Ltmp1536 and .Ltmp1537
	.uleb128 .Ltmp1620-.Lfunc_begin64       #     jumps to .Ltmp1620
	.byte	7                               #   On action: 4
	.uleb128 .Ltmp1537-.Lfunc_begin64       # >> Call Site 77 <<
	.uleb128 .Lfunc_end126-.Ltmp1537        #   Call between .Ltmp1537 and .Lfunc_end126
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end64:
	.byte	0                               # >> Action Record 1 <<
                                        #   Cleanup
	.byte	0                               #   No further actions
	.byte	1                               # >> Action Record 2 <<
                                        #   Catch TypeInfo 1
	.byte	125                             #   Continue to action 1
	.byte	2                               # >> Action Record 3 <<
                                        #   Catch TypeInfo 2
	.byte	125                             #   Continue to action 2
	.byte	3                               # >> Action Record 4 <<
                                        #   Catch TypeInfo 3
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 3
	.long	_ZTISt16invalid_argument        # TypeInfo 2
	.long	_ZTISt11range_error             # TypeInfo 1
.Lttbase29:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin65:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception65
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 104(%rsp)
	movq	%rsi, 112(%rsp)
	testq	%rdi, %rdi
	je	.LBB127_22
# %bb.1:
	movq	%rsi, %rbx
	movq	%rdi, %r14
	leaq	(%rsi,%rdi), %r15
	movzbl	(%rsi), %ecx
	xorl	%eax, %eax
	cmpb	$45, %cl
	sete	%al
	addq	%rax, %rbx
	cmpq	%r15, %rbx
	je	.LBB127_17
# %bb.2:                                # %.lr.ph.i21.i.preheader
	movb	%cl, 6(%rsp)                    # 1-byte Spill
	subq	%rax, %r14
	movb	$1, %bpl
	xorl	%r12d, %r12d
	movq	%rbx, %r13
	.p2align	4, 0x90
.LBB127_3:                              # %.lr.ph.i21.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%r13), %eax
	movl	%eax, %ecx
	addl	$-48, %ecx
	cmpl	$9, %ecx
	ja	.LBB127_5
# %bb.4:                                #   in Loop: Header=BB127_3 Depth=1
	addl	$-48, %eax
	jmp	.LBB127_6
	.p2align	4, 0x90
.LBB127_5:                              #   in Loop: Header=BB127_3 Depth=1
	movsbl	%al, %edi
	callq	_ZNSt8__detail25__from_chars_alpha_to_numEc
                                        # kill: def $al killed $al def $eax
	cmpb	$15, %al
	ja	.LBB127_10
.LBB127_6:                              #   in Loop: Header=BB127_3 Depth=1
	testb	$1, %bpl
	je	.LBB127_8
# %bb.7:                                # %_ZNSt8__detail15__raise_and_addIjEEbRT_ih.exit.i23.i
                                        #   in Loop: Header=BB127_3 Depth=1
	movl	%r12d, %ecx
	shll	$4, %ecx
	movzbl	%al, %eax
	addl	%ecx, %eax
	setb	%dl
	cmpl	$268435456, %r12d               # imm = 0x10000000
	cmovael	%ecx, %eax
	setae	%bpl
	orb	%dl, %bpl
	xorb	$1, %bpl
	movl	%eax, %r12d
.LBB127_8:                              #   in Loop: Header=BB127_3 Depth=1
	incq	%r13
	decq	%r14
	jne	.LBB127_3
# %bb.9:
	movq	%r15, %r13
.LBB127_10:                             # %_ZNSt8__detail18__from_chars_alnumIjEEbRPKcS2_RT_i.exit.i
	movzbl	6(%rsp), %ecx                   # 1-byte Folded Reload
	cmpq	%rbx, %r13
	jne	.LBB127_18
	jmp	.LBB127_11
.LBB127_17:
	movb	$1, %bpl
	xorl	%r12d, %r12d
	movq	%r15, %r13
	cmpq	%rbx, %r13
	je	.LBB127_11
.LBB127_18:                             # %_ZNSt8__detail18__from_chars_alnumIjEEbRPKcS2_RT_i.exit.i
	andb	$1, %bpl
	je	.LBB127_11
# %bb.19:
	xorl	%eax, %eax
	cmpb	$45, %cl
	sete	%al
	addl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmpl	%eax, %r12d
	ja	.LBB127_12
# %bb.20:                               # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread
	cmpq	%r15, %r13
	jne	.LBB127_27
# %bb.21:
	movl	%r12d, %eax
	negl	%eax
	cmpb	$45, %cl
	cmovnel	%r12d, %eax
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB127_11:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit
	.cfi_def_cfa_offset 176
	cmpq	%rbx, %r13
	je	.LBB127_22
.LBB127_12:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread84
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1635:
	leaq	8(%rsp), %rdi
	leaq	104(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1636:
# %bb.13:
.Ltmp1638:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.46, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1639:
# %bb.14:
.Ltmp1641:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.110, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1642:
# %bb.15:
	movb	$1, %bpl
.Ltmp1644:
	leaq	72(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1645:
# %bb.16:
	xorl	%ebp, %ebp
.Ltmp1646:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1647:
	jmp	.LBB127_32
.LBB127_22:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread78
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1649:
	leaq	8(%rsp), %rdi
	leaq	104(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1650:
# %bb.23:
.Ltmp1652:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1653:
# %bb.24:
.Ltmp1655:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.109, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1656:
# %bb.25:
	movb	$1, %bpl
.Ltmp1658:
	leaq	72(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1659:
# %bb.26:
	xorl	%ebp, %ebp
.Ltmp1660:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1661:
	jmp	.LBB127_32
.LBB127_27:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1621:
	leaq	8(%rsp), %rdi
	leaq	104(%rsp), %rsi
	leaq	7(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1622:
# %bb.28:
.Ltmp1624:
	leaq	40(%rsp), %rdi
	leaq	8(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1625:
# %bb.29:
.Ltmp1627:
	leaq	72(%rsp), %rdi
	leaq	40(%rsp), %rsi
	movl	$.L.str.108, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1628:
# %bb.30:
	movb	$1, %bpl
.Ltmp1630:
	leaq	72(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1631:
# %bb.31:
	xorl	%ebp, %ebp
.Ltmp1632:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1633:
.LBB127_32:
.LBB127_33:
.Ltmp1634:
	jmp	.LBB127_42
.LBB127_34:
.Ltmp1629:
	jmp	.LBB127_49
.LBB127_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
.Ltmp1626:
	jmp	.LBB127_36
.LBB127_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48.thread
.Ltmp1623:
	jmp	.LBB127_56
.LBB127_39:
.Ltmp1648:
	jmp	.LBB127_42
.LBB127_40:
.Ltmp1643:
	jmp	.LBB127_49
.LBB127_41:
.Ltmp1662:
.LBB127_42:
	movq	%rax, %r14
	movq	72(%rsp), %rdi
	leaq	88(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB127_47
# %bb.43:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB127_50
.LBB127_44:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB127_51
.LBB127_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	testb	%bpl, %bpl
	jne	.LBB127_57
	jmp	.LBB127_46
.LBB127_47:
	callq	_ZdlPv
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB127_44
	jmp	.LBB127_50
.LBB127_48:
.Ltmp1657:
.LBB127_49:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rax, %r14
	movb	$1, %bpl
	movq	40(%rsp), %rdi
	leaq	56(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB127_44
.LBB127_50:
	callq	_ZdlPv
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB127_45
.LBB127_51:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB127_57
.LBB127_46:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB127_52:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53.thread
.Ltmp1640:
	jmp	.LBB127_36
.LBB127_53:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50.thread
.Ltmp1654:
.LBB127_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
	movq	%rax, %r14
	movq	8(%rsp), %rdi
	leaq	24(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB127_57
# %bb.37:                               # %.thread103
	callq	_ZdlPv
	jmp	.LBB127_57
.LBB127_54:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54.thread
.Ltmp1637:
	jmp	.LBB127_56
.LBB127_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51.thread
.Ltmp1651:
.LBB127_56:                             # %.sink.split
	movq	%rax, %r14
.LBB127_57:                             # %.sink.split
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end127:
	.size	_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end127-_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZN8argparse7details13do_from_charsIiLi16EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table127:
.Lexception65:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end65-.Lcst_begin65
.Lcst_begin65:
	.uleb128 .Lfunc_begin65-.Lfunc_begin65  # >> Call Site 1 <<
	.uleb128 .Ltmp1635-.Lfunc_begin65       #   Call between .Lfunc_begin65 and .Ltmp1635
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1635-.Lfunc_begin65       # >> Call Site 2 <<
	.uleb128 .Ltmp1636-.Ltmp1635            #   Call between .Ltmp1635 and .Ltmp1636
	.uleb128 .Ltmp1637-.Lfunc_begin65       #     jumps to .Ltmp1637
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1638-.Lfunc_begin65       # >> Call Site 3 <<
	.uleb128 .Ltmp1639-.Ltmp1638            #   Call between .Ltmp1638 and .Ltmp1639
	.uleb128 .Ltmp1640-.Lfunc_begin65       #     jumps to .Ltmp1640
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1641-.Lfunc_begin65       # >> Call Site 4 <<
	.uleb128 .Ltmp1642-.Ltmp1641            #   Call between .Ltmp1641 and .Ltmp1642
	.uleb128 .Ltmp1643-.Lfunc_begin65       #     jumps to .Ltmp1643
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1644-.Lfunc_begin65       # >> Call Site 5 <<
	.uleb128 .Ltmp1647-.Ltmp1644            #   Call between .Ltmp1644 and .Ltmp1647
	.uleb128 .Ltmp1648-.Lfunc_begin65       #     jumps to .Ltmp1648
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1647-.Lfunc_begin65       # >> Call Site 6 <<
	.uleb128 .Ltmp1649-.Ltmp1647            #   Call between .Ltmp1647 and .Ltmp1649
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1649-.Lfunc_begin65       # >> Call Site 7 <<
	.uleb128 .Ltmp1650-.Ltmp1649            #   Call between .Ltmp1649 and .Ltmp1650
	.uleb128 .Ltmp1651-.Lfunc_begin65       #     jumps to .Ltmp1651
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1652-.Lfunc_begin65       # >> Call Site 8 <<
	.uleb128 .Ltmp1653-.Ltmp1652            #   Call between .Ltmp1652 and .Ltmp1653
	.uleb128 .Ltmp1654-.Lfunc_begin65       #     jumps to .Ltmp1654
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1655-.Lfunc_begin65       # >> Call Site 9 <<
	.uleb128 .Ltmp1656-.Ltmp1655            #   Call between .Ltmp1655 and .Ltmp1656
	.uleb128 .Ltmp1657-.Lfunc_begin65       #     jumps to .Ltmp1657
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1658-.Lfunc_begin65       # >> Call Site 10 <<
	.uleb128 .Ltmp1661-.Ltmp1658            #   Call between .Ltmp1658 and .Ltmp1661
	.uleb128 .Ltmp1662-.Lfunc_begin65       #     jumps to .Ltmp1662
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1661-.Lfunc_begin65       # >> Call Site 11 <<
	.uleb128 .Ltmp1621-.Ltmp1661            #   Call between .Ltmp1661 and .Ltmp1621
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1621-.Lfunc_begin65       # >> Call Site 12 <<
	.uleb128 .Ltmp1622-.Ltmp1621            #   Call between .Ltmp1621 and .Ltmp1622
	.uleb128 .Ltmp1623-.Lfunc_begin65       #     jumps to .Ltmp1623
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1624-.Lfunc_begin65       # >> Call Site 13 <<
	.uleb128 .Ltmp1625-.Ltmp1624            #   Call between .Ltmp1624 and .Ltmp1625
	.uleb128 .Ltmp1626-.Lfunc_begin65       #     jumps to .Ltmp1626
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1627-.Lfunc_begin65       # >> Call Site 14 <<
	.uleb128 .Ltmp1628-.Ltmp1627            #   Call between .Ltmp1627 and .Ltmp1628
	.uleb128 .Ltmp1629-.Lfunc_begin65       #     jumps to .Ltmp1629
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1630-.Lfunc_begin65       # >> Call Site 15 <<
	.uleb128 .Ltmp1633-.Ltmp1630            #   Call between .Ltmp1630 and .Ltmp1633
	.uleb128 .Ltmp1634-.Lfunc_begin65       #     jumps to .Ltmp1634
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1633-.Lfunc_begin65       # >> Call Site 16 <<
	.uleb128 .Lfunc_end127-.Ltmp1633        #   Call between .Ltmp1633 and .Lfunc_end127
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end65:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin66:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception66
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$128, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 112(%rsp)
	movq	%rsi, 120(%rsp)
	leaq	(%rsi,%rdi), %rcx
	movl	$1, %edx
	testq	%rdi, %rdi
	je	.LBB128_3
# %bb.1:
	cmpb	$45, (%rsi)
	jne	.LBB128_4
# %bb.2:
	incq	%rsi
	movl	$-1, %edx
	movb	$1, %dil
	jmp	.LBB128_5
.LBB128_3:
	xorl	%edi, %edi
	movq	%rcx, %rsi
	jmp	.LBB128_5
.LBB128_4:
	xorl	%edi, %edi
.LBB128_5:
	movq	%rcx, %r8
	subq	%rsi, %r8
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	testq	%r8, %r8
	jle	.LBB128_9
	.p2align	4, 0x90
.LBB128_6:                              # %.lr.ph.i.i
                                        # =>This Inner Loop Header: Depth=1
	cmpb	$48, (%rsi,%rax)
	jne	.LBB128_9
# %bb.7:                                #   in Loop: Header=BB128_6 Depth=1
	incq	%rax
	cmpq	%rax, %r8
	jne	.LBB128_6
# %bb.8:
	xorl	%r9d, %r9d
	movq	%r8, %rax
	testq	%r8, %r8
	jne	.LBB128_15
	jmp	.LBB128_21
.LBB128_9:                              # %.critedge.i.i
	cmpq	%r8, %rax
	jge	.LBB128_13
# %bb.10:                               # %.lr.ph30.i.i.preheader
	xorl	%r9d, %r9d
	movq	%rax, %r10
	.p2align	4, 0x90
.LBB128_11:                             # %.lr.ph30.i.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%rsi,%r10), %r11d
	addb	$-48, %r11b
	cmpb	$1, %r11b
	ja	.LBB128_20
# %bb.12:                               #   in Loop: Header=BB128_11 Depth=1
	movzbl	%r11b, %r11d
	addl	%r9d, %r9d
	orl	%r11d, %r9d
	incq	%r10
	cmpq	%r8, %r10
	jl	.LBB128_11
	jmp	.LBB128_14
.LBB128_13:
	movq	%rax, %r8
.LBB128_14:                             # %_ZNSt8__detail19__from_chars_binaryIjEEbRPKcS2_RT_.exit.i
	testq	%r8, %r8
	je	.LBB128_21
.LBB128_15:                             # %_ZNSt8__detail19__from_chars_binaryIjEEbRPKcS2_RT_.exit.i
	movq	%r8, %r10
	subq	%rax, %r10
	cmpq	$32, %r10
	ja	.LBB128_21
# %bb.16:
	movl	%edx, %eax
	negl	%eax
	testb	%dil, %dil
	cmovel	%edx, %eax
	mull	%r9d
	jo	.LBB128_22
# %bb.17:
	movzbl	%dil, %edx
	addl	$2147483647, %edx               # imm = 0x7FFFFFFF
	cmpl	%edx, %eax
	ja	.LBB128_22
# %bb.18:                               # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread
	addq	%r8, %rsi
	cmpq	%rcx, %rsi
	jne	.LBB128_32
# %bb.19:
	movl	%eax, %ecx
	negl	%ecx
	testb	%dil, %dil
	cmovel	%eax, %ecx
	movl	%ecx, %eax
	addq	$128, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB128_20:
	.cfi_def_cfa_offset 160
	movq	%r10, %r8
	testq	%r8, %r8
	jne	.LBB128_15
.LBB128_21:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit
	testq	%r8, %r8
	je	.LBB128_27
.LBB128_22:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread65
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1691:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1692:
# %bb.23:
.Ltmp1694:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.46, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1695:
# %bb.24:
.Ltmp1697:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.110, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1698:
# %bb.25:
	movb	$1, %bpl
.Ltmp1700:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1701:
# %bb.26:
	xorl	%ebp, %ebp
.Ltmp1702:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1703:
	jmp	.LBB128_37
.LBB128_27:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1663:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1664:
# %bb.28:
.Ltmp1666:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1667:
# %bb.29:
.Ltmp1669:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.109, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1670:
# %bb.30:
	movb	$1, %bpl
.Ltmp1672:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1673:
# %bb.31:
	xorl	%ebp, %ebp
.Ltmp1674:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1675:
	jmp	.LBB128_37
.LBB128_32:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1677:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1678:
# %bb.33:
.Ltmp1680:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1681:
# %bb.34:
.Ltmp1683:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.108, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1684:
# %bb.35:
	movb	$1, %bpl
.Ltmp1686:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1687:
# %bb.36:
	xorl	%ebp, %ebp
.Ltmp1688:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1689:
.LBB128_37:
.LBB128_38:
.Ltmp1690:
	jmp	.LBB128_47
.LBB128_39:
.Ltmp1685:
	jmp	.LBB128_54
.LBB128_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
.Ltmp1682:
	jmp	.LBB128_41
.LBB128_43:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48.thread
.Ltmp1679:
	jmp	.LBB128_62
.LBB128_44:
.Ltmp1676:
	jmp	.LBB128_47
.LBB128_45:
.Ltmp1671:
	jmp	.LBB128_54
.LBB128_46:
.Ltmp1704:
.LBB128_47:
	movq	%rax, %r14
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB128_52
# %bb.48:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB128_55
.LBB128_49:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB128_56
.LBB128_50:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	testb	%bpl, %bpl
	jne	.LBB128_57
	jmp	.LBB128_51
.LBB128_52:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB128_49
	jmp	.LBB128_55
.LBB128_53:
.Ltmp1699:
.LBB128_54:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB128_49
.LBB128_55:
	callq	_ZdlPv
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB128_50
.LBB128_56:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB128_57
.LBB128_51:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB128_58:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50.thread
.Ltmp1668:
	jmp	.LBB128_41
.LBB128_59:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53.thread
.Ltmp1696:
.LBB128_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB128_42
.LBB128_57:                             # %.sink.split
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB128_42:                             # %.thread
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB128_60:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51.thread
.Ltmp1665:
	jmp	.LBB128_62
.LBB128_61:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54.thread
.Ltmp1693:
.LBB128_62:                             # %.sink.split
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end128:
	.size	_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end128-_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZN8argparse7details13do_from_charsIiLi2EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table128:
.Lexception66:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end66-.Lcst_begin66
.Lcst_begin66:
	.uleb128 .Lfunc_begin66-.Lfunc_begin66  # >> Call Site 1 <<
	.uleb128 .Ltmp1691-.Lfunc_begin66       #   Call between .Lfunc_begin66 and .Ltmp1691
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1691-.Lfunc_begin66       # >> Call Site 2 <<
	.uleb128 .Ltmp1692-.Ltmp1691            #   Call between .Ltmp1691 and .Ltmp1692
	.uleb128 .Ltmp1693-.Lfunc_begin66       #     jumps to .Ltmp1693
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1694-.Lfunc_begin66       # >> Call Site 3 <<
	.uleb128 .Ltmp1695-.Ltmp1694            #   Call between .Ltmp1694 and .Ltmp1695
	.uleb128 .Ltmp1696-.Lfunc_begin66       #     jumps to .Ltmp1696
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1697-.Lfunc_begin66       # >> Call Site 4 <<
	.uleb128 .Ltmp1698-.Ltmp1697            #   Call between .Ltmp1697 and .Ltmp1698
	.uleb128 .Ltmp1699-.Lfunc_begin66       #     jumps to .Ltmp1699
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1700-.Lfunc_begin66       # >> Call Site 5 <<
	.uleb128 .Ltmp1703-.Ltmp1700            #   Call between .Ltmp1700 and .Ltmp1703
	.uleb128 .Ltmp1704-.Lfunc_begin66       #     jumps to .Ltmp1704
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1703-.Lfunc_begin66       # >> Call Site 6 <<
	.uleb128 .Ltmp1663-.Ltmp1703            #   Call between .Ltmp1703 and .Ltmp1663
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1663-.Lfunc_begin66       # >> Call Site 7 <<
	.uleb128 .Ltmp1664-.Ltmp1663            #   Call between .Ltmp1663 and .Ltmp1664
	.uleb128 .Ltmp1665-.Lfunc_begin66       #     jumps to .Ltmp1665
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1666-.Lfunc_begin66       # >> Call Site 8 <<
	.uleb128 .Ltmp1667-.Ltmp1666            #   Call between .Ltmp1666 and .Ltmp1667
	.uleb128 .Ltmp1668-.Lfunc_begin66       #     jumps to .Ltmp1668
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1669-.Lfunc_begin66       # >> Call Site 9 <<
	.uleb128 .Ltmp1670-.Ltmp1669            #   Call between .Ltmp1669 and .Ltmp1670
	.uleb128 .Ltmp1671-.Lfunc_begin66       #     jumps to .Ltmp1671
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1672-.Lfunc_begin66       # >> Call Site 10 <<
	.uleb128 .Ltmp1675-.Ltmp1672            #   Call between .Ltmp1672 and .Ltmp1675
	.uleb128 .Ltmp1676-.Lfunc_begin66       #     jumps to .Ltmp1676
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1675-.Lfunc_begin66       # >> Call Site 11 <<
	.uleb128 .Ltmp1677-.Ltmp1675            #   Call between .Ltmp1675 and .Ltmp1677
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1677-.Lfunc_begin66       # >> Call Site 12 <<
	.uleb128 .Ltmp1678-.Ltmp1677            #   Call between .Ltmp1677 and .Ltmp1678
	.uleb128 .Ltmp1679-.Lfunc_begin66       #     jumps to .Ltmp1679
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1680-.Lfunc_begin66       # >> Call Site 13 <<
	.uleb128 .Ltmp1681-.Ltmp1680            #   Call between .Ltmp1680 and .Ltmp1681
	.uleb128 .Ltmp1682-.Lfunc_begin66       #     jumps to .Ltmp1682
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1683-.Lfunc_begin66       # >> Call Site 14 <<
	.uleb128 .Ltmp1684-.Ltmp1683            #   Call between .Ltmp1683 and .Ltmp1684
	.uleb128 .Ltmp1685-.Lfunc_begin66       #     jumps to .Ltmp1685
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1686-.Lfunc_begin66       # >> Call Site 15 <<
	.uleb128 .Ltmp1689-.Ltmp1686            #   Call between .Ltmp1686 and .Ltmp1689
	.uleb128 .Ltmp1690-.Lfunc_begin66       #     jumps to .Ltmp1690
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1689-.Lfunc_begin66       # >> Call Site 16 <<
	.uleb128 .Lfunc_end128-.Ltmp1689        #   Call between .Ltmp1689 and .Lfunc_end128
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end66:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin67:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception67
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$128, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 112(%rsp)
	movq	%rsi, 120(%rsp)
	testq	%rdi, %rdi
	je	.LBB129_21
# %bb.1:
	leaq	(%rsi,%rdi), %rax
	movzbl	(%rsi), %edx
	xorl	%r8d, %r8d
	cmpb	$45, %dl
	sete	%r8b
	addq	%r8, %rsi
	cmpq	%rax, %rsi
	je	.LBB129_20
# %bb.2:                                # %.lr.ph.i17.i.preheader
	notq	%r8
	addq	%rdi, %r8
	xorl	%edi, %edi
	movq	%rsi, %rcx
	.p2align	4, 0x90
.LBB129_3:                              # %.lr.ph.i17.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%rcx), %r9d
	movl	%r9d, %r10d
	andb	$-8, %r10b
	cmpb	$48, %r10b
	jne	.LBB129_7
# %bb.4:                                #   in Loop: Header=BB129_3 Depth=1
	cmpl	$536870912, %edi                # imm = 0x20000000
	jae	.LBB129_12
# %bb.5:                                # %.critedge.i19.i
                                        #   in Loop: Header=BB129_3 Depth=1
	addb	$-48, %r9b
	movzbl	%r9b, %r9d
	leal	(%r9,%rdi,8), %edi
	incq	%rcx
	addq	$-1, %r8
	jb	.LBB129_3
# %bb.6:
	movq	%rax, %rcx
.LBB129_7:                              # %_ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i.exit.i
	cmpq	%rsi, %rcx
	je	.LBB129_21
# %bb.8:
	xorl	%esi, %esi
	cmpb	$45, %dl
	sete	%sil
	addl	$2147483647, %esi               # imm = 0x7FFFFFFF
	cmpl	%esi, %edi
	ja	.LBB129_15
# %bb.9:                                # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread67
	cmpq	%rax, %rcx
	jne	.LBB129_26
# %bb.10:
	movl	%edi, %eax
	negl	%eax
	cmpb	$45, %dl
	cmovnel	%edi, %eax
	addq	$128, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB129_11:                             #   in Loop: Header=BB129_12 Depth=1
	.cfi_def_cfa_offset 160
	incq	%rcx
	movzbl	(%rcx), %edx
	andb	$-8, %dl
	decq	%r8
	cmpb	$48, %dl
	jne	.LBB129_14
.LBB129_12:                             # %_ZNSt8__detail15__raise_and_addIjEEbRT_ih.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	testq	%r8, %r8
	jne	.LBB129_11
# %bb.13:
	movq	%rax, %rcx
.LBB129_14:                             # %_ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i.exit.thread.i
	cmpq	%rsi, %rcx
	je	.LBB129_21
.LBB129_15:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1719:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1720:
# %bb.16:
.Ltmp1722:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.46, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1723:
# %bb.17:
.Ltmp1725:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.110, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1726:
# %bb.18:
	movb	$1, %bpl
.Ltmp1728:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1729:
# %bb.19:
	xorl	%ebp, %ebp
.Ltmp1730:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1731:
	jmp	.LBB129_31
.LBB129_20:
	movq	%rax, %rcx
	cmpq	%rsi, %rcx
	jne	.LBB129_15
.LBB129_21:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread76
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1733:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1734:
# %bb.22:
.Ltmp1736:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1737:
# %bb.23:
.Ltmp1739:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.109, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1740:
# %bb.24:
	movb	$1, %bpl
.Ltmp1742:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1743:
# %bb.25:
	xorl	%ebp, %ebp
.Ltmp1744:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1745:
	jmp	.LBB129_31
.LBB129_26:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1705:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1706:
# %bb.27:
.Ltmp1708:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1709:
# %bb.28:
.Ltmp1711:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.108, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1712:
# %bb.29:
	movb	$1, %bpl
.Ltmp1714:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1715:
# %bb.30:
	xorl	%ebp, %ebp
.Ltmp1716:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1717:
.LBB129_31:
.LBB129_32:
.Ltmp1718:
	jmp	.LBB129_43
.LBB129_33:
.Ltmp1713:
	jmp	.LBB129_50
.LBB129_34:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
.Ltmp1710:
	jmp	.LBB129_35
.LBB129_37:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48.thread
.Ltmp1707:
	jmp	.LBB129_56
.LBB129_38:
.Ltmp1732:
	jmp	.LBB129_43
.LBB129_39:
.Ltmp1727:
	jmp	.LBB129_50
.LBB129_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53.thread
.Ltmp1724:
	jmp	.LBB129_35
.LBB129_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54.thread
.Ltmp1721:
	jmp	.LBB129_56
.LBB129_42:
.Ltmp1746:
.LBB129_43:
	movq	%rax, %r14
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB129_48
# %bb.44:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB129_51
.LBB129_45:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB129_52
.LBB129_46:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	testb	%bpl, %bpl
	jne	.LBB129_53
	jmp	.LBB129_47
.LBB129_48:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB129_45
	jmp	.LBB129_51
.LBB129_49:
.Ltmp1741:
.LBB129_50:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB129_45
.LBB129_51:
	callq	_ZdlPv
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB129_46
.LBB129_52:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB129_53
.LBB129_47:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB129_54:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50.thread
.Ltmp1738:
.LBB129_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB129_36
.LBB129_53:                             # %.sink.split
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB129_36:                             # %.thread
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB129_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51.thread
.Ltmp1735:
.LBB129_56:                             # %.sink.split
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end129:
	.size	_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end129-_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZN8argparse7details13do_from_charsIiLi8EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table129:
.Lexception67:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end67-.Lcst_begin67
.Lcst_begin67:
	.uleb128 .Lfunc_begin67-.Lfunc_begin67  # >> Call Site 1 <<
	.uleb128 .Ltmp1719-.Lfunc_begin67       #   Call between .Lfunc_begin67 and .Ltmp1719
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1719-.Lfunc_begin67       # >> Call Site 2 <<
	.uleb128 .Ltmp1720-.Ltmp1719            #   Call between .Ltmp1719 and .Ltmp1720
	.uleb128 .Ltmp1721-.Lfunc_begin67       #     jumps to .Ltmp1721
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1722-.Lfunc_begin67       # >> Call Site 3 <<
	.uleb128 .Ltmp1723-.Ltmp1722            #   Call between .Ltmp1722 and .Ltmp1723
	.uleb128 .Ltmp1724-.Lfunc_begin67       #     jumps to .Ltmp1724
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1725-.Lfunc_begin67       # >> Call Site 4 <<
	.uleb128 .Ltmp1726-.Ltmp1725            #   Call between .Ltmp1725 and .Ltmp1726
	.uleb128 .Ltmp1727-.Lfunc_begin67       #     jumps to .Ltmp1727
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1728-.Lfunc_begin67       # >> Call Site 5 <<
	.uleb128 .Ltmp1731-.Ltmp1728            #   Call between .Ltmp1728 and .Ltmp1731
	.uleb128 .Ltmp1732-.Lfunc_begin67       #     jumps to .Ltmp1732
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1731-.Lfunc_begin67       # >> Call Site 6 <<
	.uleb128 .Ltmp1733-.Ltmp1731            #   Call between .Ltmp1731 and .Ltmp1733
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1733-.Lfunc_begin67       # >> Call Site 7 <<
	.uleb128 .Ltmp1734-.Ltmp1733            #   Call between .Ltmp1733 and .Ltmp1734
	.uleb128 .Ltmp1735-.Lfunc_begin67       #     jumps to .Ltmp1735
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1736-.Lfunc_begin67       # >> Call Site 8 <<
	.uleb128 .Ltmp1737-.Ltmp1736            #   Call between .Ltmp1736 and .Ltmp1737
	.uleb128 .Ltmp1738-.Lfunc_begin67       #     jumps to .Ltmp1738
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1739-.Lfunc_begin67       # >> Call Site 9 <<
	.uleb128 .Ltmp1740-.Ltmp1739            #   Call between .Ltmp1739 and .Ltmp1740
	.uleb128 .Ltmp1741-.Lfunc_begin67       #     jumps to .Ltmp1741
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1742-.Lfunc_begin67       # >> Call Site 10 <<
	.uleb128 .Ltmp1745-.Ltmp1742            #   Call between .Ltmp1742 and .Ltmp1745
	.uleb128 .Ltmp1746-.Lfunc_begin67       #     jumps to .Ltmp1746
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1745-.Lfunc_begin67       # >> Call Site 11 <<
	.uleb128 .Ltmp1705-.Ltmp1745            #   Call between .Ltmp1745 and .Ltmp1705
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1705-.Lfunc_begin67       # >> Call Site 12 <<
	.uleb128 .Ltmp1706-.Ltmp1705            #   Call between .Ltmp1705 and .Ltmp1706
	.uleb128 .Ltmp1707-.Lfunc_begin67       #     jumps to .Ltmp1707
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1708-.Lfunc_begin67       # >> Call Site 13 <<
	.uleb128 .Ltmp1709-.Ltmp1708            #   Call between .Ltmp1708 and .Ltmp1709
	.uleb128 .Ltmp1710-.Lfunc_begin67       #     jumps to .Ltmp1710
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1711-.Lfunc_begin67       # >> Call Site 14 <<
	.uleb128 .Ltmp1712-.Ltmp1711            #   Call between .Ltmp1711 and .Ltmp1712
	.uleb128 .Ltmp1713-.Lfunc_begin67       #     jumps to .Ltmp1713
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1714-.Lfunc_begin67       # >> Call Site 15 <<
	.uleb128 .Ltmp1717-.Ltmp1714            #   Call between .Ltmp1714 and .Ltmp1717
	.uleb128 .Ltmp1718-.Lfunc_begin67       #     jumps to .Ltmp1718
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1717-.Lfunc_begin67       # >> Call Site 16 <<
	.uleb128 .Lfunc_end129-.Ltmp1717        #   Call between .Ltmp1717 and .Lfunc_end129
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end67:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE,@function
_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE: # @_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin68:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception68
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$128, %rsp
	.cfi_def_cfa_offset 160
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdi, 112(%rsp)
	movq	%rsi, 120(%rsp)
	testq	%rdi, %rdi
	je	.LBB130_22
# %bb.1:
	leaq	(%rsi,%rdi), %rcx
	movzbl	(%rsi), %r8d
	xorl	%r9d, %r9d
	cmpb	$45, %r8b
	sete	%r9b
	addq	%r9, %rsi
	cmpq	%rcx, %rsi
	je	.LBB130_21
# %bb.2:                                # %.lr.ph.i17.i.preheader
	notq	%r9
	addq	%rdi, %r9
	xorl	%eax, %eax
	movl	$10, %r10d
	movq	%rsi, %rdi
	.p2align	4, 0x90
.LBB130_3:                              # %.lr.ph.i17.i
                                        # =>This Inner Loop Header: Depth=1
	movzbl	(%rdi), %r11d
	addb	$-48, %r11b
	cmpb	$9, %r11b
	ja	.LBB130_8
# %bb.4:                                #   in Loop: Header=BB130_3 Depth=1
	mull	%r10d
	jo	.LBB130_13
# %bb.5:                                #   in Loop: Header=BB130_3 Depth=1
	movzbl	%r11b, %edx
	addl	%edx, %eax
	jb	.LBB130_13
# %bb.6:                                # %.critedge.i19.i
                                        #   in Loop: Header=BB130_3 Depth=1
	incq	%rdi
	addq	$-1, %r9
	jb	.LBB130_3
# %bb.7:                                # %_ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i.exit.i.split.loop.exit131
	movq	%rcx, %rdi
.LBB130_8:                              # %_ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i.exit.i
	cmpq	%rsi, %rdi
	je	.LBB130_22
# %bb.9:
	xorl	%edx, %edx
	cmpb	$45, %r8b
	sete	%dl
	addl	$2147483647, %edx               # imm = 0x7FFFFFFF
	cmpl	%edx, %eax
	ja	.LBB130_16
# %bb.10:                               # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread67
	cmpq	%rcx, %rdi
	jne	.LBB130_27
# %bb.11:
	movl	%eax, %ecx
	negl	%ecx
	cmpb	$45, %r8b
	cmovnel	%eax, %ecx
	movl	%ecx, %eax
	addq	$128, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
	.p2align	4, 0x90
.LBB130_12:                             #   in Loop: Header=BB130_13 Depth=1
	.cfi_def_cfa_offset 160
	incq	%rdi
	movzbl	(%rdi), %eax
	addb	$-48, %al
	decq	%r9
	cmpb	$10, %al
	jae	.LBB130_15
.LBB130_13:                             # %_ZNSt8__detail15__raise_and_addIjEEbRT_ih.exit.i.i
                                        # =>This Inner Loop Header: Depth=1
	testq	%r9, %r9
	jne	.LBB130_12
# %bb.14:
	movq	%rcx, %rdi
.LBB130_15:                             # %_ZNSt8__detail18__from_chars_digitIjEEbRPKcS2_RT_i.exit.thread.i
	cmpq	%rsi, %rdi
	je	.LBB130_22
.LBB130_16:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1761:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1762:
# %bb.17:
.Ltmp1764:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.46, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1765:
# %bb.18:
.Ltmp1767:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.110, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1768:
# %bb.19:
	movb	$1, %bpl
.Ltmp1770:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11range_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1771:
# %bb.20:
	xorl	%ebp, %ebp
.Ltmp1772:
	movl	$_ZTISt11range_error, %esi
	movl	$_ZNSt11range_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1773:
	jmp	.LBB130_32
.LBB130_21:
	movq	%rcx, %rdi
	cmpq	%rsi, %rdi
	jne	.LBB130_16
.LBB130_22:                             # %_ZSt10from_charsIiENSt9enable_ifIXsr22__is_int_to_chars_typeIT_EE5valueESt17from_chars_resultE4typeEPKcS6_RS1_i.exit.thread76
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1775:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1776:
# %bb.23:
.Ltmp1778:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1779:
# %bb.24:
.Ltmp1781:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.109, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1782:
# %bb.25:
	movb	$1, %bpl
.Ltmp1784:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1785:
# %bb.26:
	xorl	%ebp, %ebp
.Ltmp1786:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1787:
	jmp	.LBB130_32
.LBB130_27:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
.Ltmp1747:
	leaq	16(%rsp), %rdi
	leaq	112(%rsp), %rsi
	leaq	15(%rsp), %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1748:
# %bb.28:
.Ltmp1750:
	leaq	48(%rsp), %rdi
	leaq	16(%rsp), %rdx
	movl	$.L.str.107, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1751:
# %bb.29:
.Ltmp1753:
	leaq	80(%rsp), %rdi
	leaq	48(%rsp), %rsi
	movl	$.L.str.108, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1754:
# %bb.30:
	movb	$1, %bpl
.Ltmp1756:
	leaq	80(%rsp), %rsi
	movq	%rbx, %rdi
	callq	_ZNSt16invalid_argumentC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1757:
# %bb.31:
	xorl	%ebp, %ebp
.Ltmp1758:
	movl	$_ZTISt16invalid_argument, %esi
	movl	$_ZNSt16invalid_argumentD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1759:
.LBB130_32:
.LBB130_33:
.Ltmp1760:
	jmp	.LBB130_44
.LBB130_34:
.Ltmp1755:
	jmp	.LBB130_51
.LBB130_35:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
.Ltmp1752:
	jmp	.LBB130_36
.LBB130_38:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48.thread
.Ltmp1749:
	jmp	.LBB130_57
.LBB130_39:
.Ltmp1774:
	jmp	.LBB130_44
.LBB130_40:
.Ltmp1769:
	jmp	.LBB130_51
.LBB130_41:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit53.thread
.Ltmp1766:
	jmp	.LBB130_36
.LBB130_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit54.thread
.Ltmp1763:
	jmp	.LBB130_57
.LBB130_43:
.Ltmp1788:
.LBB130_44:
	movq	%rax, %r14
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB130_49
# %bb.45:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB130_52
.LBB130_46:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB130_53
.LBB130_47:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
	testb	%bpl, %bpl
	jne	.LBB130_54
	jmp	.LBB130_48
.LBB130_49:
	callq	_ZdlPv
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB130_46
	jmp	.LBB130_52
.LBB130_50:
.Ltmp1783:
.LBB130_51:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	%rax, %r14
	movb	$1, %bpl
	movq	48(%rsp), %rdi
	leaq	64(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB130_46
.LBB130_52:
	callq	_ZdlPv
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB130_47
.LBB130_53:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB130_54
.LBB130_48:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB130_55:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit50.thread
.Ltmp1780:
.LBB130_36:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit47.thread
	movq	%rax, %r14
	movq	16(%rsp), %rdi
	leaq	32(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB130_37
.LBB130_54:                             # %.sink.split
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB130_37:                             # %.thread
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB130_56:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit51.thread
.Ltmp1777:
.LBB130_57:                             # %.sink.split
	movq	%rax, %r14
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end130:
	.size	_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end130-_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZN8argparse7details13do_from_charsIiLi10EEET_St17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table130:
.Lexception68:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end68-.Lcst_begin68
.Lcst_begin68:
	.uleb128 .Lfunc_begin68-.Lfunc_begin68  # >> Call Site 1 <<
	.uleb128 .Ltmp1761-.Lfunc_begin68       #   Call between .Lfunc_begin68 and .Ltmp1761
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1761-.Lfunc_begin68       # >> Call Site 2 <<
	.uleb128 .Ltmp1762-.Ltmp1761            #   Call between .Ltmp1761 and .Ltmp1762
	.uleb128 .Ltmp1763-.Lfunc_begin68       #     jumps to .Ltmp1763
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1764-.Lfunc_begin68       # >> Call Site 3 <<
	.uleb128 .Ltmp1765-.Ltmp1764            #   Call between .Ltmp1764 and .Ltmp1765
	.uleb128 .Ltmp1766-.Lfunc_begin68       #     jumps to .Ltmp1766
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1767-.Lfunc_begin68       # >> Call Site 4 <<
	.uleb128 .Ltmp1768-.Ltmp1767            #   Call between .Ltmp1767 and .Ltmp1768
	.uleb128 .Ltmp1769-.Lfunc_begin68       #     jumps to .Ltmp1769
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1770-.Lfunc_begin68       # >> Call Site 5 <<
	.uleb128 .Ltmp1773-.Ltmp1770            #   Call between .Ltmp1770 and .Ltmp1773
	.uleb128 .Ltmp1774-.Lfunc_begin68       #     jumps to .Ltmp1774
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1773-.Lfunc_begin68       # >> Call Site 6 <<
	.uleb128 .Ltmp1775-.Ltmp1773            #   Call between .Ltmp1773 and .Ltmp1775
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1775-.Lfunc_begin68       # >> Call Site 7 <<
	.uleb128 .Ltmp1776-.Ltmp1775            #   Call between .Ltmp1775 and .Ltmp1776
	.uleb128 .Ltmp1777-.Lfunc_begin68       #     jumps to .Ltmp1777
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1778-.Lfunc_begin68       # >> Call Site 8 <<
	.uleb128 .Ltmp1779-.Ltmp1778            #   Call between .Ltmp1778 and .Ltmp1779
	.uleb128 .Ltmp1780-.Lfunc_begin68       #     jumps to .Ltmp1780
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1781-.Lfunc_begin68       # >> Call Site 9 <<
	.uleb128 .Ltmp1782-.Ltmp1781            #   Call between .Ltmp1781 and .Ltmp1782
	.uleb128 .Ltmp1783-.Lfunc_begin68       #     jumps to .Ltmp1783
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1784-.Lfunc_begin68       # >> Call Site 10 <<
	.uleb128 .Ltmp1787-.Ltmp1784            #   Call between .Ltmp1784 and .Ltmp1787
	.uleb128 .Ltmp1788-.Lfunc_begin68       #     jumps to .Ltmp1788
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1787-.Lfunc_begin68       # >> Call Site 11 <<
	.uleb128 .Ltmp1747-.Ltmp1787            #   Call between .Ltmp1787 and .Ltmp1747
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1747-.Lfunc_begin68       # >> Call Site 12 <<
	.uleb128 .Ltmp1748-.Ltmp1747            #   Call between .Ltmp1747 and .Ltmp1748
	.uleb128 .Ltmp1749-.Lfunc_begin68       #     jumps to .Ltmp1749
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1750-.Lfunc_begin68       # >> Call Site 13 <<
	.uleb128 .Ltmp1751-.Ltmp1750            #   Call between .Ltmp1750 and .Ltmp1751
	.uleb128 .Ltmp1752-.Lfunc_begin68       #     jumps to .Ltmp1752
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1753-.Lfunc_begin68       # >> Call Site 14 <<
	.uleb128 .Ltmp1754-.Ltmp1753            #   Call between .Ltmp1753 and .Ltmp1754
	.uleb128 .Ltmp1755-.Lfunc_begin68       #     jumps to .Ltmp1755
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1756-.Lfunc_begin68       # >> Call Site 15 <<
	.uleb128 .Ltmp1759-.Ltmp1756            #   Call between .Ltmp1756 and .Ltmp1759
	.uleb128 .Ltmp1760-.Lfunc_begin68       #     jumps to .Ltmp1760
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1759-.Lfunc_begin68       # >> Call Site 16 <<
	.uleb128 .Lfunc_end130-.Ltmp1759        #   Call between .Ltmp1759 and .Lfunc_end130
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end68:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNSt8__detail25__from_chars_alpha_to_numEc,"axG",@progbits,_ZNSt8__detail25__from_chars_alpha_to_numEc,comdat
	.weak	_ZNSt8__detail25__from_chars_alpha_to_numEc # -- Begin function _ZNSt8__detail25__from_chars_alpha_to_numEc
	.p2align	4, 0x90
	.type	_ZNSt8__detail25__from_chars_alpha_to_numEc,@function
_ZNSt8__detail25__from_chars_alpha_to_numEc: # @_ZNSt8__detail25__from_chars_alpha_to_numEc
	.cfi_startproc
# %bb.0:
	movslq	%edi, %rcx
	addq	$-65, %rcx
	movb	$-1, %al
	cmpl	$57, %ecx
	ja	.LBB131_2
# %bb.1:                                # %switch.lookup
	movzbl	.Lswitch.table._ZNSt8__detail25__from_chars_alpha_to_numEc(%rcx), %eax
.LBB131_2:
	retq
.Lfunc_end131:
	.size	_ZNSt8__detail25__from_chars_alpha_to_numEc, .Lfunc_end131-_ZNSt8__detail25__from_chars_alpha_to_numEc
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"axG",@progbits,_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.weak	_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE # -- Begin function _ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.p2align	4, 0x90
	.type	_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,@function
_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE: # @_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.cfi_startproc
# %bb.0:
	cmpl	$4, %edi
	ja	.LBB132_6
# %bb.1:
	movl	%edi, %eax
	jmpq	*.LJTI132_0(,%rax,8)
.LBB132_2:
	addq	$8, %rsi
	movq	%rsi, (%rdx)
	retq
.LBB132_3:
	movq	$_ZTIi, (%rdx)
	retq
.LBB132_4:
	movq	(%rdx), %rax
	movl	8(%rsi), %ecx
	movl	%ecx, 8(%rax)
	movq	(%rsi), %rax
	movq	(%rdx), %rcx
	movq	%rax, (%rcx)
	retq
.LBB132_5:
	movq	(%rdx), %rax
	movl	8(%rsi), %ecx
	movl	%ecx, 8(%rax)
	movq	(%rsi), %rax
	movq	(%rdx), %rcx
	movq	%rax, (%rcx)
	movq	$0, (%rsi)
.LBB132_6:
	retq
.Lfunc_end132:
	.size	_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, .Lfunc_end132-_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.cfi_endproc
	.section	.rodata._ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,"aG",@progbits,_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE,comdat
	.p2align	3, 0x0
.LJTI132_0:
	.quad	.LBB132_2
	.quad	.LBB132_3
	.quad	.LBB132_4
	.quad	.LBB132_6
	.quad	.LBB132_5
                                        # -- End function
	.section	.text._ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE,"axG",@progbits,_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE,comdat
	.weak	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE # -- Begin function _ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
	.p2align	4, 0x90
	.type	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE,@function
_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE: # @_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
.Lfunc_begin69:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception69
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$136, %rsp
	.cfi_def_cfa_offset 192
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r14
	movq	%rsi, %r15
	movq	%rsi, 120(%rsp)
	movq	%rdx, 128(%rsp)
	leaq	264(%rdi), %rax
	movq	%rax, 72(%rsp)                  # 8-byte Spill
	movq	%rdi, 112(%rsp)                 # 8-byte Spill
	movq	272(%rdi), %r13
	testq	%r13, %r13
	je	.LBB133_12
# %bb.1:                                # %.lr.ph.i.i.i.preheader
	movl	$2147483647, %ebx               # imm = 0x7FFFFFFF
	movq	72(%rsp), %r12                  # 8-byte Reload
	jmp	.LBB133_4
	.p2align	4, 0x90
.LBB133_2:                              # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i
                                        #   in Loop: Header=BB133_4 Depth=1
	cmpq	$-2147483647, %rbp              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbp
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	cmovgeq	%rbx, %rbp
	movl	%ebp, %eax
.LBB133_3:                              # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i
                                        #   in Loop: Header=BB133_4 Depth=1
	testl	%eax, %eax
	cmovnsq	%r13, %r12
	shrl	$31, %eax
	movq	16(%r13,%rax,8), %r13
	testq	%r13, %r13
	je	.LBB133_6
.LBB133_4:                              # %.lr.ph.i.i.i
                                        # =>This Inner Loop Header: Depth=1
	movq	32(%r13), %rdx
	movq	%rdx, %rbp
	subq	%r15, %rbp
	cmovaeq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB133_2
# %bb.5:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i
                                        #   in Loop: Header=BB133_4 Depth=1
	movq	40(%r13), %rdi
	movq	%r14, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB133_3
	jmp	.LBB133_2
.LBB133_6:                              # %_ZNKSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISA_EPKSt18_Rb_tree_node_baseRS5_.exit.i.i
	cmpq	72(%rsp), %r12                  # 8-byte Folded Reload
	je	.LBB133_12
# %bb.7:
	movq	32(%r12), %rdx
	movq	%r15, %rbx
	subq	%rdx, %rbx
	cmovbq	%r15, %rdx
	testq	%rdx, %rdx
	je	.LBB133_11
# %bb.8:                                # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i
	movq	40(%r12), %rsi
	movq	%r14, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	je	.LBB133_11
# %bb.9:                                # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit
	testl	%eax, %eax
	js	.LBB133_12
.LBB133_10:
	movq	48(%r12), %rbx
	addq	$16, %rbx
	jmp	.LBB133_93
.LBB133_11:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%rbx, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
	testl	%eax, %eax
	jns	.LBB133_10
.LBB133_12:                             # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit.thread
	movsbl	(%r14), %esi
	movq	112(%rsp), %rax                 # 8-byte Reload
	leaq	136(%rax), %r12
	movq	%r12, %rdi
	xorl	%edx, %edx
	callq	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm
	cmpq	$-1, %rax
	jne	.LBB133_95
# %bb.13:
	leaq	48(%rsp), %rbp
	movq	%rbp, 32(%rsp)
	movq	%r15, 80(%rsp)
	movq	%rbp, %rax
	cmpq	$16, %r15
	jb	.LBB133_16
# %bb.14:                               # %.noexc6.i.i.i
.Ltmp1789:
	leaq	32(%rsp), %rdi
	leaq	80(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1790:
# %bb.15:                               # %.noexc
	movq	%rax, 32(%rsp)
	movq	80(%rsp), %rcx
	movq	%rcx, 48(%rsp)
.LBB133_16:                             # %._crit_edge.i.i.i.i.i.i
	testq	%r15, %r15
	je	.LBB133_20
# %bb.17:                               # %._crit_edge.i.i.i.i.i.i
	cmpq	$1, %r15
	jne	.LBB133_19
# %bb.18:
	movzbl	(%r14), %ecx
	movb	%cl, (%rax)
	jmp	.LBB133_20
.LBB133_19:
	movq	%rax, %rdi
	movq	%r14, %rsi
	movq	%r15, %rdx
	callq	memcpy@PLT
.LBB133_20:
	movq	80(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%r12), %rax
	movsbl	(%rax), %edx
	leaq	96(%rsp), %rax
	movq	%rax, 80(%rsp)
.Ltmp1792:
	leaq	80(%rsp), %rdi
	movl	$1, %esi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
.Ltmp1793:
# %bb.21:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEmcRKS3_.exit
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	80(%rsp), %r15
	movq	88(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	%r14, %rax
	cmpq	$16, %r12
	jb	.LBB133_24
# %bb.22:                               # %.noexc6.i.i
.Ltmp1795:
	movq	%rsp, %rdi
	leaq	64(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1796:
# %bb.23:                               # %.noexc27
	movq	%rax, (%rsp)
	movq	64(%rsp), %rcx
	movq	%rcx, 16(%rsp)
.LBB133_24:                             # %._crit_edge.i.i.i.i.i
	testq	%r12, %r12
	je	.LBB133_28
# %bb.25:                               # %._crit_edge.i.i.i.i.i
	cmpq	$1, %r12
	jne	.LBB133_27
# %bb.26:
	movzbl	(%r15), %ecx
	movb	%cl, (%rax)
	jmp	.LBB133_28
.LBB133_27:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB133_28:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
	movq	64(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	32(%rsp), %rsi
	movq	40(%rsp), %rdx
.Ltmp1798:
	movq	%rsp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1799:
# %bb.29:                               # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_.exit
	movq	(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB133_33
# %bb.30:
	movq	32(%rsp), %rax
	cmpq	%rbp, %rax
	je	.LBB133_36
# %bb.31:
	movq	48(%rsp), %rdx
	movq	%rcx, 32(%rsp)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
	testq	%rax, %rax
	je	.LBB133_37
# %bb.32:
	movq	%rax, (%rsp)
	movq	%rdx, 16(%rsp)
	jmp	.LBB133_40
.LBB133_33:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB133_39
# %bb.34:
	movq	32(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB133_38
# %bb.35:
	movzbl	16(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB133_39
.LBB133_36:                             # %.thread.i
	movq	%rcx, 32(%rsp)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
.LBB133_37:
	movq	%r14, (%rsp)
	movq	%r14, %rax
	jmp	.LBB133_40
.LBB133_38:
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB133_39:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i
	movq	8(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rax
.LBB133_40:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB133_42
# %bb.41:
	callq	_ZdlPv
.LBB133_42:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	112(%rsp), %rax                 # 8-byte Reload
	movq	272(%rax), %r13
	testq	%r13, %r13
	je	.LBB133_53
# %bb.43:                               # %.lr.ph.i.i.i32.preheader
	movq	32(%rsp), %r14
	movq	40(%rsp), %r12
	movl	$2147483647, %ebx               # imm = 0x7FFFFFFF
	movq	72(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB133_46
	.p2align	4, 0x90
.LBB133_44:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i43
                                        #   in Loop: Header=BB133_46 Depth=1
	cmpq	$-2147483647, %rbp              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbp
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	cmovgeq	%rbx, %rbp
	movl	%ebp, %eax
.LBB133_45:                             # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i49
                                        #   in Loop: Header=BB133_46 Depth=1
	testl	%eax, %eax
	cmovnsq	%r13, %r15
	shrl	$31, %eax
	movq	16(%r13,%rax,8), %r13
	testq	%r13, %r13
	je	.LBB133_48
.LBB133_46:                             # %.lr.ph.i.i.i32
                                        # =>This Inner Loop Header: Depth=1
	movq	32(%r13), %rdx
	movq	%rdx, %rbp
	subq	%r12, %rbp
	cmovaeq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB133_44
# %bb.47:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i39
                                        #   in Loop: Header=BB133_46 Depth=1
	movq	40(%r13), %rdi
	movq	%r14, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB133_45
	jmp	.LBB133_44
.LBB133_48:                             # %_ZNKSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISA_EPKSt18_Rb_tree_node_baseRS5_.exit.i.i50
	cmpq	72(%rsp), %r15                  # 8-byte Folded Reload
	leaq	48(%rsp), %rbp
	je	.LBB133_53
# %bb.49:
	movq	32(%r15), %rdx
	movq	%r12, %rbx
	subq	%rdx, %rbx
	cmovbq	%r12, %rdx
	testq	%rdx, %rdx
	je	.LBB133_51
# %bb.50:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i55
	movq	40(%r15), %rsi
	movq	%r14, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB133_52
.LBB133_51:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i59
	cmpq	$-2147483647, %rbx              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%rbx, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB133_52:                             # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit64
	testl	%eax, %eax
	jns	.LBB133_85
.LBB133_53:                             # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit64.thread
	leaq	16(%rsp), %r14
	movq	%r14, (%rsp)
	movq	80(%rsp), %r15
	movq	88(%rsp), %r12
	movq	%r12, 64(%rsp)
	movq	%r14, %rax
	cmpq	$16, %r12
	jb	.LBB133_56
# %bb.54:                               # %.noexc6.i.i65
.Ltmp1801:
	movq	%rsp, %rdi
	leaq	64(%rsp), %rsi
	xorl	%edx, %edx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm
.Ltmp1802:
# %bb.55:                               # %.noexc69
	movq	%rax, (%rsp)
	movq	64(%rsp), %rcx
	movq	%rcx, 16(%rsp)
.LBB133_56:                             # %._crit_edge.i.i.i.i.i66
	testq	%r12, %r12
	je	.LBB133_60
# %bb.57:                               # %._crit_edge.i.i.i.i.i66
	cmpq	$1, %r12
	jne	.LBB133_59
# %bb.58:
	movzbl	(%r15), %ecx
	movb	%cl, (%rax)
	jmp	.LBB133_60
.LBB133_59:
	movq	%rax, %rdi
	movq	%r15, %rsi
	movq	%r12, %rdx
	callq	memcpy@PLT
.LBB133_60:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i67
	movq	64(%rsp), %rax
	movq	%rax, 8(%rsp)
	movq	(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	32(%rsp), %rsi
	movq	40(%rsp), %rdx
.Ltmp1804:
	movq	%rsp, %rdi
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm
.Ltmp1805:
# %bb.61:                               # %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_.exit72
	movq	(%rsp), %rcx
	cmpq	%r14, %rcx
	je	.LBB133_65
# %bb.62:
	movq	32(%rsp), %rax
	cmpq	%rbp, %rax
	je	.LBB133_68
# %bb.63:
	movq	48(%rsp), %rdx
	movq	%rcx, 32(%rsp)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
	testq	%rax, %rax
	je	.LBB133_69
# %bb.64:
	movq	%rax, (%rsp)
	movq	%rdx, 16(%rsp)
	jmp	.LBB133_72
.LBB133_65:
	movq	8(%rsp), %rdx
	testq	%rdx, %rdx
	je	.LBB133_71
# %bb.66:
	movq	32(%rsp), %rdi
	cmpq	$1, %rdx
	jne	.LBB133_70
# %bb.67:
	movzbl	16(%rsp), %eax
	movb	%al, (%rdi)
	jmp	.LBB133_71
.LBB133_68:                             # %.thread.i77
	movq	%rcx, 32(%rsp)
	movups	8(%rsp), %xmm0
	movups	%xmm0, 40(%rsp)
.LBB133_69:
	movq	%r14, (%rsp)
	movq	%r14, %rax
	jmp	.LBB133_72
.LBB133_70:
	movq	%r14, %rsi
	callq	memcpy@PLT
.LBB133_71:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm.exit.i76
	movq	8(%rsp), %rax
	movq	%rax, 40(%rsp)
	movq	32(%rsp), %rcx
	movb	$0, (%rcx,%rax)
	movq	(%rsp), %rax
.LBB133_72:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_.exit79
	movq	$0, 8(%rsp)
	movb	$0, (%rax)
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB133_74
# %bb.73:
	callq	_ZdlPv
.LBB133_74:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit80
	movq	32(%rsp), %r14
	movq	112(%rsp), %rax                 # 8-byte Reload
	movq	272(%rax), %r13
	movb	$1, %r15b
	testq	%r13, %r13
	je	.LBB133_86
# %bb.75:                               # %.lr.ph.i.i.i87.preheader
	movq	40(%rsp), %rbx
	movl	$2147483647, %r12d              # imm = 0x7FFFFFFF
	movq	72(%rsp), %r15                  # 8-byte Reload
	jmp	.LBB133_78
	.p2align	4, 0x90
.LBB133_76:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i.i98
                                        #   in Loop: Header=BB133_78 Depth=1
	cmpq	$-2147483647, %rbp              # imm = 0x80000001
	movq	$-2147483648, %rax              # imm = 0x80000000
	cmovlq	%rax, %rbp
	cmpq	$2147483647, %rbp               # imm = 0x7FFFFFFF
	cmovgeq	%r12, %rbp
	movl	%ebp, %eax
.LBB133_77:                             # %_ZNKSt4lessISt17basic_string_viewIcSt11char_traitsIcEEEclERKS3_S6_.exit.i.i.i104
                                        #   in Loop: Header=BB133_78 Depth=1
	testl	%eax, %eax
	cmovnsq	%r13, %r15
	shrl	$31, %eax
	movq	16(%r13,%rax,8), %r13
	testq	%r13, %r13
	je	.LBB133_80
.LBB133_78:                             # %.lr.ph.i.i.i87
                                        # =>This Inner Loop Header: Depth=1
	movq	32(%r13), %rdx
	movq	%rdx, %rbp
	subq	%rbx, %rbp
	cmovaeq	%rbx, %rdx
	testq	%rdx, %rdx
	je	.LBB133_76
# %bb.79:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i.i94
                                        #   in Loop: Header=BB133_78 Depth=1
	movq	40(%r13), %rdi
	movq	%r14, %rsi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB133_77
	jmp	.LBB133_76
.LBB133_80:                             # %_ZNKSt8_Rb_treeISt17basic_string_viewIcSt11char_traitsIcEESt4pairIKS3_St14_List_iteratorIN8argparse8ArgumentEEESt10_Select1stISA_ESt4lessIS3_ESaISA_EE14_M_lower_boundEPKSt13_Rb_tree_nodeISA_EPKSt18_Rb_tree_node_baseRS5_.exit.i.i105
	cmpq	72(%rsp), %r15                  # 8-byte Folded Reload
	je	.LBB133_87
# %bb.81:
	movq	32(%r15), %rdx
	movq	%rbx, %r12
	subq	%rdx, %r12
	cmovbq	%rbx, %rdx
	testq	%rdx, %rdx
	leaq	48(%rsp), %rbp
	je	.LBB133_83
# %bb.82:                               # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.i.i.i.i.i110
	movq	40(%r15), %rsi
	movq	%r14, %rdi
	callq	memcmp
                                        # kill: def $eax killed $eax def $rax
	testl	%eax, %eax
	jne	.LBB133_84
.LBB133_83:                             # %_ZNSt11char_traitsIcE7compareEPKcS2_m.exit.thread.i.i.i.i.i114
	cmpq	$-2147483647, %r12              # imm = 0x80000001
	movq	$-2147483648, %rcx              # imm = 0x80000000
	cmovgeq	%r12, %rcx
	cmpq	$2147483647, %rcx               # imm = 0x7FFFFFFF
	movl	$2147483647, %eax               # imm = 0x7FFFFFFF
	cmovlq	%rcx, %rax
.LBB133_84:                             # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit119
	testl	%eax, %eax
	js	.LBB133_94
.LBB133_85:                             # %_ZNKSt3mapISt17basic_string_viewIcSt11char_traitsIcEESt14_List_iteratorIN8argparse8ArgumentEESt4lessIS3_ESaISt4pairIKS3_S7_EEE4findERSB_.exit119.thread.sink.split
	movq	48(%r15), %rbx
	addq	$16, %rbx
	xorl	%r15d, %r15d
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB133_90
.LBB133_89:
	callq	_ZdlPv
	movq	32(%rsp), %r14
.LBB133_90:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit120
	cmpq	%rbp, %r14
	je	.LBB133_92
# %bb.91:
	movq	%r14, %rdi
	callq	_ZdlPv
.LBB133_92:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit121
	testb	%r15b, %r15b
	jne	.LBB133_95
.LBB133_93:
	movq	%rbx, %rax
	addq	$136, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB133_86:
	.cfi_def_cfa_offset 192
                                        # implicit-def: $rbx
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB133_89
	jmp	.LBB133_90
.LBB133_87:
                                        # implicit-def: $rbx
	leaq	48(%rsp), %rbp
	jmp	.LBB133_88
.LBB133_94:
                                        # implicit-def: $rbx
.LBB133_88:
	movb	$1, %r15b
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB133_89
	jmp	.LBB133_90
.LBB133_95:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %r14
.Ltmp1807:
	leaq	80(%rsp), %rdi
	leaq	120(%rsp), %rsi
	movq	%rsp, %rdx
	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ISt17basic_string_viewIcS2_EvEERKT_RKS3_
.Ltmp1808:
# %bb.96:
.Ltmp1810:
	leaq	32(%rsp), %rdi
	leaq	80(%rsp), %rdx
	movl	$.L.str.114, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_
.Ltmp1811:
# %bb.97:
	movb	$1, %bpl
.Ltmp1813:
	leaq	32(%rsp), %rsi
	movq	%r14, %rdi
	callq	_ZNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1814:
# %bb.98:
	xorl	%ebp, %ebp
.Ltmp1815:
	movl	$_ZTISt11logic_error, %esi
	movl	$_ZNSt11logic_errorD1Ev, %edx
	movq	%r14, %rdi
	callq	__cxa_throw
.Ltmp1816:
# %bb.99:
.LBB133_100:
.Ltmp1803:
	jmp	.LBB133_109
.LBB133_101:
.Ltmp1817:
	movq	%rax, %rbx
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB133_104
# %bb.102:                              # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit124
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB133_105
.LBB133_103:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit125
	testb	%bpl, %bpl
	jne	.LBB133_118
	jmp	.LBB133_121
.LBB133_104:
	callq	_ZdlPv
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB133_103
.LBB133_105:
	callq	_ZdlPv
	testb	%bpl, %bpl
	jne	.LBB133_118
	jmp	.LBB133_121
.LBB133_106:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit124.thread
.Ltmp1812:
	movq	%rax, %rbx
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB133_118
# %bb.107:                              # %.thread
	callq	_ZdlPv
	jmp	.LBB133_118
.LBB133_108:
.Ltmp1797:
.LBB133_109:
	movq	%rax, %rbx
	jmp	.LBB133_115
.LBB133_110:
.Ltmp1791:
	movq	%rax, %rdi
	callq	_Unwind_Resume@PLT
.LBB133_111:
.Ltmp1806:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	jne	.LBB133_114
	jmp	.LBB133_115
.LBB133_113:
.Ltmp1800:
	movq	%rax, %rbx
	movq	(%rsp), %rdi
	cmpq	%r14, %rdi
	je	.LBB133_115
.LBB133_114:
	callq	_ZdlPv
.LBB133_115:
	movq	80(%rsp), %rdi
	leaq	96(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB133_120
# %bb.116:
	callq	_ZdlPv
	jmp	.LBB133_120
.LBB133_117:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit125.thread
.Ltmp1809:
	movq	%rax, %rbx
.LBB133_118:
	movq	%r14, %rdi
	callq	__cxa_free_exception
	jmp	.LBB133_121
.LBB133_119:
.Ltmp1794:
	movq	%rax, %rbx
.LBB133_120:                            # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit122
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB133_122
.LBB133_121:
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.LBB133_122:
	callq	_ZdlPv
	movq	%rbx, %rdi
	callq	_Unwind_Resume@PLT
.Lfunc_end133:
	.size	_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE, .Lfunc_end133-_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE,"aG",@progbits,_ZNK8argparse14ArgumentParserixESt17basic_string_viewIcSt11char_traitsIcEE,comdat
	.p2align	2, 0x0
GCC_except_table133:
.Lexception69:
	.byte	255                             # @LPStart Encoding = omit
	.byte	255                             # @TType Encoding = omit
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end69-.Lcst_begin69
.Lcst_begin69:
	.uleb128 .Ltmp1789-.Lfunc_begin69       # >> Call Site 1 <<
	.uleb128 .Ltmp1790-.Ltmp1789            #   Call between .Ltmp1789 and .Ltmp1790
	.uleb128 .Ltmp1791-.Lfunc_begin69       #     jumps to .Ltmp1791
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1790-.Lfunc_begin69       # >> Call Site 2 <<
	.uleb128 .Ltmp1792-.Ltmp1790            #   Call between .Ltmp1790 and .Ltmp1792
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1792-.Lfunc_begin69       # >> Call Site 3 <<
	.uleb128 .Ltmp1793-.Ltmp1792            #   Call between .Ltmp1792 and .Ltmp1793
	.uleb128 .Ltmp1794-.Lfunc_begin69       #     jumps to .Ltmp1794
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1795-.Lfunc_begin69       # >> Call Site 4 <<
	.uleb128 .Ltmp1796-.Ltmp1795            #   Call between .Ltmp1795 and .Ltmp1796
	.uleb128 .Ltmp1797-.Lfunc_begin69       #     jumps to .Ltmp1797
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1796-.Lfunc_begin69       # >> Call Site 5 <<
	.uleb128 .Ltmp1798-.Ltmp1796            #   Call between .Ltmp1796 and .Ltmp1798
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1798-.Lfunc_begin69       # >> Call Site 6 <<
	.uleb128 .Ltmp1799-.Ltmp1798            #   Call between .Ltmp1798 and .Ltmp1799
	.uleb128 .Ltmp1800-.Lfunc_begin69       #     jumps to .Ltmp1800
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1799-.Lfunc_begin69       # >> Call Site 7 <<
	.uleb128 .Ltmp1801-.Ltmp1799            #   Call between .Ltmp1799 and .Ltmp1801
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1801-.Lfunc_begin69       # >> Call Site 8 <<
	.uleb128 .Ltmp1802-.Ltmp1801            #   Call between .Ltmp1801 and .Ltmp1802
	.uleb128 .Ltmp1803-.Lfunc_begin69       #     jumps to .Ltmp1803
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1802-.Lfunc_begin69       # >> Call Site 9 <<
	.uleb128 .Ltmp1804-.Ltmp1802            #   Call between .Ltmp1802 and .Ltmp1804
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1804-.Lfunc_begin69       # >> Call Site 10 <<
	.uleb128 .Ltmp1805-.Ltmp1804            #   Call between .Ltmp1804 and .Ltmp1805
	.uleb128 .Ltmp1806-.Lfunc_begin69       #     jumps to .Ltmp1806
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1805-.Lfunc_begin69       # >> Call Site 11 <<
	.uleb128 .Ltmp1807-.Ltmp1805            #   Call between .Ltmp1805 and .Ltmp1807
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1807-.Lfunc_begin69       # >> Call Site 12 <<
	.uleb128 .Ltmp1808-.Ltmp1807            #   Call between .Ltmp1807 and .Ltmp1808
	.uleb128 .Ltmp1809-.Lfunc_begin69       #     jumps to .Ltmp1809
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1810-.Lfunc_begin69       # >> Call Site 13 <<
	.uleb128 .Ltmp1811-.Ltmp1810            #   Call between .Ltmp1810 and .Ltmp1811
	.uleb128 .Ltmp1812-.Lfunc_begin69       #     jumps to .Ltmp1812
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1813-.Lfunc_begin69       # >> Call Site 14 <<
	.uleb128 .Ltmp1816-.Ltmp1813            #   Call between .Ltmp1813 and .Ltmp1816
	.uleb128 .Ltmp1817-.Lfunc_begin69       #     jumps to .Ltmp1817
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1816-.Lfunc_begin69       # >> Call Site 15 <<
	.uleb128 .Lfunc_end133-.Ltmp1816        #   Call between .Ltmp1816 and .Lfunc_end133
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end69:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZNK8argparse8Argument3getIiEET_v,"axG",@progbits,_ZNK8argparse8Argument3getIiEET_v,comdat
	.weak	_ZNK8argparse8Argument3getIiEET_v # -- Begin function _ZNK8argparse8Argument3getIiEET_v
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument3getIiEET_v,@function
_ZNK8argparse8Argument3getIiEET_v:      # @_ZNK8argparse8Argument3getIiEET_v
.Lfunc_begin70:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception70
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	280(%rdi), %rbx
	cmpq	288(%rdi), %rbx
	je	.LBB134_12
# %bb.1:
	movq	(%rbx), %rax
	cmpq	$_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %rax
	je	.LBB134_9
# %bb.2:
	testq	%rax, %rax
	je	.LBB134_3
# %bb.4:
.Ltmp1818:
	movq	%rsp, %rdx
	movl	$1, %edi
	movq	%rbx, %rsi
	callq	*%rax
.Ltmp1819:
# %bb.5:
	movq	(%rsp), %rax
	movq	8(%rax), %rdi
	movq	_ZTIi+8(%rip), %rsi
	cmpq	%rsi, %rdi
	jne	.LBB134_7
	jmp	.LBB134_9
.LBB134_12:
	movq	%rdi, %r14
	movq	104(%rdi), %rax
	testq	%rax, %rax
	je	.LBB134_20
# %bb.13:
	addq	$104, %r14
	cmpq	$_ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %rax
	je	.LBB134_18
# %bb.14:
.Ltmp1824:
	movq	%rsp, %rdx
	movl	$1, %edi
	movq	%r14, %rsi
	callq	*%rax
.Ltmp1825:
# %bb.15:                               # %_ZNKSt3any4typeEv.exit.i.i.i13
	movq	(%rsp), %rax
	movq	8(%rax), %rdi
	movq	_ZTIi+8(%rip), %rsi
	cmpq	%rsi, %rdi
	je	.LBB134_18
# %bb.16:
	cmpb	$42, (%rdi)
	je	.LBB134_11
# %bb.17:                               # %_ZNKSt9type_infoeqERKS_.exit.i.i.i15
	callq	strcmp
	testl	%eax, %eax
	jne	.LBB134_11
.LBB134_18:                             # %_ZNKSt9type_infoeqERKS_.exit.thread.i.i.i16
.Ltmp1827:
	movq	%rsp, %rdx
	xorl	%edi, %edi
	movq	%r14, %rsi
	callq	*(%r14)
.Ltmp1828:
	jmp	.LBB134_10
.LBB134_3:
	movl	$_ZTIv, %eax
	movq	8(%rax), %rdi
	movq	_ZTIi+8(%rip), %rsi
	cmpq	%rsi, %rdi
	je	.LBB134_9
.LBB134_7:
	cmpb	$42, (%rdi)
	je	.LBB134_11
# %bb.8:                                # %_ZNKSt9type_infoeqERKS_.exit.i.i.i
	callq	strcmp
	testl	%eax, %eax
	jne	.LBB134_11
.LBB134_9:                              # %_ZNKSt9type_infoeqERKS_.exit.thread.i.i.i
.Ltmp1821:
	movq	%rsp, %rdx
	xorl	%edi, %edi
	movq	%rbx, %rsi
	callq	*(%rbx)
.Ltmp1822:
.LBB134_10:                             # %_ZSt8any_castIiEPKT_PKSt3any.exit.i
	movq	(%rsp), %rax
	testq	%rax, %rax
	je	.LBB134_11
# %bb.19:                               # %_ZSt8any_castIiET_RKSt3any.exit
	movl	(%rax), %eax
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB134_11:                             # %_ZSt8any_castIiEPKT_PKSt3any.exit.thread.i
	.cfi_def_cfa_offset 96
	callq	_ZSt20__throw_bad_any_castv
.LBB134_20:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
	movq	8(%r14), %rdx
	addq	$-32, %rdx
.Ltmp1830:
	leaq	32(%rsp), %rdi
	movl	$.L.str.115, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp1831:
# %bb.21:
.Ltmp1833:
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	movl	$.L.str.63, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1834:
# %bb.22:
	movb	$1, %bpl
.Ltmp1836:
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1837:
# %bb.23:
	xorl	%ebp, %ebp
.Ltmp1838:
	movl	$_ZTISt11logic_error, %esi
	movl	$_ZNSt11logic_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1839:
# %bb.34:
.LBB134_25:
.Ltmp1840:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB134_26
# %bb.27:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB134_28
.LBB134_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	testb	%bpl, %bpl
	jne	.LBB134_32
.LBB134_33:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB134_26:
	callq	_ZdlPv
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB134_29
.LBB134_28:
	callq	_ZdlPv
	testb	%bpl, %bpl
	je	.LBB134_33
	jmp	.LBB134_32
.LBB134_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp1835:
	movq	%rax, %r14
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB134_32
# %bb.31:                               # %.thread
	callq	_ZdlPv
	jmp	.LBB134_32
.LBB134_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21.thread
.Ltmp1832:
	movq	%rax, %r14
.LBB134_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB134_37:
.Ltmp1826:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB134_35:
.Ltmp1820:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB134_38:
.Ltmp1829:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB134_36:
.Ltmp1823:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end134:
	.size	_ZNK8argparse8Argument3getIiEET_v, .Lfunc_end134-_ZNK8argparse8Argument3getIiEET_v
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument3getIiEET_v,"aG",@progbits,_ZNK8argparse8Argument3getIiEET_v,comdat
	.p2align	2, 0x0
GCC_except_table134:
.Lexception70:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase30-.Lttbaseref30
.Lttbaseref30:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end70-.Lcst_begin70
.Lcst_begin70:
	.uleb128 .Ltmp1818-.Lfunc_begin70       # >> Call Site 1 <<
	.uleb128 .Ltmp1819-.Ltmp1818            #   Call between .Ltmp1818 and .Ltmp1819
	.uleb128 .Ltmp1820-.Lfunc_begin70       #     jumps to .Ltmp1820
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1824-.Lfunc_begin70       # >> Call Site 2 <<
	.uleb128 .Ltmp1825-.Ltmp1824            #   Call between .Ltmp1824 and .Ltmp1825
	.uleb128 .Ltmp1826-.Lfunc_begin70       #     jumps to .Ltmp1826
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1827-.Lfunc_begin70       # >> Call Site 3 <<
	.uleb128 .Ltmp1828-.Ltmp1827            #   Call between .Ltmp1827 and .Ltmp1828
	.uleb128 .Ltmp1829-.Lfunc_begin70       #     jumps to .Ltmp1829
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1821-.Lfunc_begin70       # >> Call Site 4 <<
	.uleb128 .Ltmp1822-.Ltmp1821            #   Call between .Ltmp1821 and .Ltmp1822
	.uleb128 .Ltmp1823-.Lfunc_begin70       #     jumps to .Ltmp1823
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1822-.Lfunc_begin70       # >> Call Site 5 <<
	.uleb128 .Ltmp1830-.Ltmp1822            #   Call between .Ltmp1822 and .Ltmp1830
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1830-.Lfunc_begin70       # >> Call Site 6 <<
	.uleb128 .Ltmp1831-.Ltmp1830            #   Call between .Ltmp1830 and .Ltmp1831
	.uleb128 .Ltmp1832-.Lfunc_begin70       #     jumps to .Ltmp1832
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1833-.Lfunc_begin70       # >> Call Site 7 <<
	.uleb128 .Ltmp1834-.Ltmp1833            #   Call between .Ltmp1833 and .Ltmp1834
	.uleb128 .Ltmp1835-.Lfunc_begin70       #     jumps to .Ltmp1835
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1836-.Lfunc_begin70       # >> Call Site 8 <<
	.uleb128 .Ltmp1839-.Ltmp1836            #   Call between .Ltmp1836 and .Ltmp1839
	.uleb128 .Ltmp1840-.Lfunc_begin70       #     jumps to .Ltmp1840
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1839-.Lfunc_begin70       # >> Call Site 9 <<
	.uleb128 .Lfunc_end134-.Ltmp1839        #   Call between .Ltmp1839 and .Lfunc_end134
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end70:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase30:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text._ZSt20__throw_bad_any_castv,"axG",@progbits,_ZSt20__throw_bad_any_castv,comdat
	.weak	_ZSt20__throw_bad_any_castv     # -- Begin function _ZSt20__throw_bad_any_castv
	.p2align	4, 0x90
	.type	_ZSt20__throw_bad_any_castv,@function
_ZSt20__throw_bad_any_castv:            # @_ZSt20__throw_bad_any_castv
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	$8, %edi
	callq	__cxa_allocate_exception
	movq	$_ZTVSt12bad_any_cast+16, (%rax)
	movl	$_ZTISt12bad_any_cast, %esi
	movl	$_ZNSt8bad_castD2Ev, %edx
	movq	%rax, %rdi
	callq	__cxa_throw
.Lfunc_end135:
	.size	_ZSt20__throw_bad_any_castv, .Lfunc_end135-_ZSt20__throw_bad_any_castv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNSt12bad_any_castD0Ev,"axG",@progbits,_ZNSt12bad_any_castD0Ev,comdat
	.weak	_ZNSt12bad_any_castD0Ev         # -- Begin function _ZNSt12bad_any_castD0Ev
	.p2align	4, 0x90
	.type	_ZNSt12bad_any_castD0Ev,@function
_ZNSt12bad_any_castD0Ev:                # @_ZNSt12bad_any_castD0Ev
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	movq	%rdi, %rbx
	callq	_ZNSt8bad_castD2Ev
	movq	%rbx, %rdi
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	_ZdlPv                          # TAILCALL
.Lfunc_end136:
	.size	_ZNSt12bad_any_castD0Ev, .Lfunc_end136-_ZNSt12bad_any_castD0Ev
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNKSt12bad_any_cast4whatEv,"axG",@progbits,_ZNKSt12bad_any_cast4whatEv,comdat
	.weak	_ZNKSt12bad_any_cast4whatEv     # -- Begin function _ZNKSt12bad_any_cast4whatEv
	.p2align	4, 0x90
	.type	_ZNKSt12bad_any_cast4whatEv,@function
_ZNKSt12bad_any_cast4whatEv:            # @_ZNKSt12bad_any_cast4whatEv
	.cfi_startproc
# %bb.0:
	movl	$.L.str.116, %eax
	retq
.Lfunc_end137:
	.size	_ZNKSt12bad_any_cast4whatEv, .Lfunc_end137-_ZNKSt12bad_any_cast4whatEv
	.cfi_endproc
                                        # -- End function
	.section	.text._ZNK8argparse8Argument3getIbEET_v,"axG",@progbits,_ZNK8argparse8Argument3getIbEET_v,comdat
	.weak	_ZNK8argparse8Argument3getIbEET_v # -- Begin function _ZNK8argparse8Argument3getIbEET_v
	.p2align	4, 0x90
	.type	_ZNK8argparse8Argument3getIbEET_v,@function
_ZNK8argparse8Argument3getIbEET_v:      # @_ZNK8argparse8Argument3getIbEET_v
.Lfunc_begin71:
	.cfi_startproc
	.cfi_personality 3, __gxx_personality_v0
	.cfi_lsda 3, .Lexception71
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$64, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	280(%rdi), %rbx
	cmpq	288(%rdi), %rbx
	je	.LBB138_12
# %bb.1:
	movq	(%rbx), %rax
	cmpq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %rax
	je	.LBB138_9
# %bb.2:
	testq	%rax, %rax
	je	.LBB138_3
# %bb.4:
.Ltmp1841:
	movq	%rsp, %rdx
	movl	$1, %edi
	movq	%rbx, %rsi
	callq	*%rax
.Ltmp1842:
# %bb.5:
	movq	(%rsp), %rax
	movq	8(%rax), %rdi
	movq	_ZTIb+8(%rip), %rsi
	cmpq	%rsi, %rdi
	jne	.LBB138_7
	jmp	.LBB138_9
.LBB138_12:
	movq	%rdi, %r14
	movq	104(%rdi), %rax
	testq	%rax, %rax
	je	.LBB138_20
# %bb.13:
	addq	$104, %r14
	cmpq	$_ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE, %rax
	je	.LBB138_18
# %bb.14:
.Ltmp1847:
	movq	%rsp, %rdx
	movl	$1, %edi
	movq	%r14, %rsi
	callq	*%rax
.Ltmp1848:
# %bb.15:                               # %_ZNKSt3any4typeEv.exit.i.i.i13
	movq	(%rsp), %rax
	movq	8(%rax), %rdi
	movq	_ZTIb+8(%rip), %rsi
	cmpq	%rsi, %rdi
	je	.LBB138_18
# %bb.16:
	cmpb	$42, (%rdi)
	je	.LBB138_11
# %bb.17:                               # %_ZNKSt9type_infoeqERKS_.exit.i.i.i15
	callq	strcmp
	testl	%eax, %eax
	jne	.LBB138_11
.LBB138_18:                             # %_ZNKSt9type_infoeqERKS_.exit.thread.i.i.i16
.Ltmp1850:
	movq	%rsp, %rdx
	xorl	%edi, %edi
	movq	%r14, %rsi
	callq	*(%r14)
.Ltmp1851:
	jmp	.LBB138_10
.LBB138_3:
	movl	$_ZTIv, %eax
	movq	8(%rax), %rdi
	movq	_ZTIb+8(%rip), %rsi
	cmpq	%rsi, %rdi
	je	.LBB138_9
.LBB138_7:
	cmpb	$42, (%rdi)
	je	.LBB138_11
# %bb.8:                                # %_ZNKSt9type_infoeqERKS_.exit.i.i.i
	callq	strcmp
	testl	%eax, %eax
	jne	.LBB138_11
.LBB138_9:                              # %_ZNKSt9type_infoeqERKS_.exit.thread.i.i.i
.Ltmp1844:
	movq	%rsp, %rdx
	xorl	%edi, %edi
	movq	%rbx, %rsi
	callq	*(%rbx)
.Ltmp1845:
.LBB138_10:                             # %_ZSt8any_castIbEPKT_PKSt3any.exit.i
	movq	(%rsp), %rax
	testq	%rax, %rax
	je	.LBB138_11
# %bb.19:                               # %_ZSt8any_castIbET_RKSt3any.exit
	movzbl	(%rax), %eax
	addq	$64, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB138_11:                             # %_ZSt8any_castIbEPKT_PKSt3any.exit.thread.i
	.cfi_def_cfa_offset 96
	callq	_ZSt20__throw_bad_any_castv
.LBB138_20:
	movl	$16, %edi
	callq	__cxa_allocate_exception
	movq	%rax, %rbx
	movq	8(%r14), %rdx
	addq	$-32, %rdx
.Ltmp1853:
	leaq	32(%rsp), %rdi
	movl	$.L.str.115, %esi
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
.Ltmp1854:
# %bb.21:
.Ltmp1856:
	movq	%rsp, %rdi
	leaq	32(%rsp), %rsi
	movl	$.L.str.63, %edx
	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_
.Ltmp1857:
# %bb.22:
	movb	$1, %bpl
.Ltmp1859:
	movq	%rsp, %rsi
	movq	%rbx, %rdi
	callq	_ZNSt11logic_errorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
.Ltmp1860:
# %bb.23:
	xorl	%ebp, %ebp
.Ltmp1861:
	movl	$_ZTISt11logic_error, %esi
	movl	$_ZNSt11logic_errorD1Ev, %edx
	movq	%rbx, %rdi
	callq	__cxa_throw
.Ltmp1862:
# %bb.34:
.LBB138_25:
.Ltmp1863:
	movq	%rax, %r14
	movq	(%rsp), %rdi
	leaq	16(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB138_26
# %bb.27:                               # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	jne	.LBB138_28
.LBB138_29:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21
	testb	%bpl, %bpl
	jne	.LBB138_32
.LBB138_33:
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB138_26:
	callq	_ZdlPv
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB138_29
.LBB138_28:
	callq	_ZdlPv
	testb	%bpl, %bpl
	je	.LBB138_33
	jmp	.LBB138_32
.LBB138_30:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.thread
.Ltmp1858:
	movq	%rax, %r14
	movq	32(%rsp), %rdi
	leaq	48(%rsp), %rax
	cmpq	%rax, %rdi
	je	.LBB138_32
# %bb.31:                               # %.thread
	callq	_ZdlPv
	jmp	.LBB138_32
.LBB138_24:                             # %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit21.thread
.Ltmp1855:
	movq	%rax, %r14
.LBB138_32:
	movq	%rbx, %rdi
	callq	__cxa_free_exception
	movq	%r14, %rdi
	callq	_Unwind_Resume@PLT
.LBB138_37:
.Ltmp1849:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_35:
.Ltmp1843:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_38:
.Ltmp1852:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.LBB138_36:
.Ltmp1846:
	movq	%rax, %rdi
	callq	__clang_call_terminate
.Lfunc_end138:
	.size	_ZNK8argparse8Argument3getIbEET_v, .Lfunc_end138-_ZNK8argparse8Argument3getIbEET_v
	.cfi_endproc
	.section	.gcc_except_table._ZNK8argparse8Argument3getIbEET_v,"aG",@progbits,_ZNK8argparse8Argument3getIbEET_v,comdat
	.p2align	2, 0x0
GCC_except_table138:
.Lexception71:
	.byte	255                             # @LPStart Encoding = omit
	.byte	3                               # @TType Encoding = udata4
	.uleb128 .Lttbase31-.Lttbaseref31
.Lttbaseref31:
	.byte	1                               # Call site Encoding = uleb128
	.uleb128 .Lcst_end71-.Lcst_begin71
.Lcst_begin71:
	.uleb128 .Ltmp1841-.Lfunc_begin71       # >> Call Site 1 <<
	.uleb128 .Ltmp1842-.Ltmp1841            #   Call between .Ltmp1841 and .Ltmp1842
	.uleb128 .Ltmp1843-.Lfunc_begin71       #     jumps to .Ltmp1843
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1847-.Lfunc_begin71       # >> Call Site 2 <<
	.uleb128 .Ltmp1848-.Ltmp1847            #   Call between .Ltmp1847 and .Ltmp1848
	.uleb128 .Ltmp1849-.Lfunc_begin71       #     jumps to .Ltmp1849
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1850-.Lfunc_begin71       # >> Call Site 3 <<
	.uleb128 .Ltmp1851-.Ltmp1850            #   Call between .Ltmp1850 and .Ltmp1851
	.uleb128 .Ltmp1852-.Lfunc_begin71       #     jumps to .Ltmp1852
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1844-.Lfunc_begin71       # >> Call Site 4 <<
	.uleb128 .Ltmp1845-.Ltmp1844            #   Call between .Ltmp1844 and .Ltmp1845
	.uleb128 .Ltmp1846-.Lfunc_begin71       #     jumps to .Ltmp1846
	.byte	1                               #   On action: 1
	.uleb128 .Ltmp1845-.Lfunc_begin71       # >> Call Site 5 <<
	.uleb128 .Ltmp1853-.Ltmp1845            #   Call between .Ltmp1845 and .Ltmp1853
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1853-.Lfunc_begin71       # >> Call Site 6 <<
	.uleb128 .Ltmp1854-.Ltmp1853            #   Call between .Ltmp1853 and .Ltmp1854
	.uleb128 .Ltmp1855-.Lfunc_begin71       #     jumps to .Ltmp1855
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1856-.Lfunc_begin71       # >> Call Site 7 <<
	.uleb128 .Ltmp1857-.Ltmp1856            #   Call between .Ltmp1856 and .Ltmp1857
	.uleb128 .Ltmp1858-.Lfunc_begin71       #     jumps to .Ltmp1858
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1859-.Lfunc_begin71       # >> Call Site 8 <<
	.uleb128 .Ltmp1862-.Ltmp1859            #   Call between .Ltmp1859 and .Ltmp1862
	.uleb128 .Ltmp1863-.Lfunc_begin71       #     jumps to .Ltmp1863
	.byte	0                               #   On action: cleanup
	.uleb128 .Ltmp1862-.Lfunc_begin71       # >> Call Site 9 <<
	.uleb128 .Lfunc_end138-.Ltmp1862        #   Call between .Ltmp1862 and .Lfunc_end138
	.byte	0                               #     has no landing pad
	.byte	0                               #   On action: cleanup
.Lcst_end71:
	.byte	1                               # >> Action Record 1 <<
                                        #   Catch TypeInfo 1
	.byte	0                               #   No further actions
	.p2align	2, 0x0
                                        # >> Catch TypeInfos <<
	.long	0                               # TypeInfo 1
.Lttbase31:
	.p2align	2, 0x0
                                        # -- End function
	.section	.text.startup,"ax",@progbits
	.p2align	4, 0x90                         # -- Begin function _GLOBAL__sub_I_conv_add_trivial_kernel.cpp
	.type	_GLOBAL__sub_I_conv_add_trivial_kernel.cpp,@function
_GLOBAL__sub_I_conv_add_trivial_kernel.cpp: # @_GLOBAL__sub_I_conv_add_trivial_kernel.cpp
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movl	$_ZStL8__ioinit, %edi
	callq	_ZNSt8ios_base4InitC1Ev
	movl	$_ZNSt8ios_base4InitD1Ev, %edi
	movl	$_ZStL8__ioinit, %esi
	movl	$__dso_handle, %edx
	popq	%rax
	.cfi_def_cfa_offset 8
	jmp	__cxa_atexit                    # TAILCALL
.Lfunc_end139:
	.size	_GLOBAL__sub_I_conv_add_trivial_kernel.cpp, .Lfunc_end139-_GLOBAL__sub_I_conv_add_trivial_kernel.cpp
	.cfi_endproc
                                        # -- End function
	.text
	.p2align	4, 0x90                         # -- Begin function __hip_module_ctor
	.type	__hip_module_ctor,@function
__hip_module_ctor:                      # @__hip_module_ctor
	.cfi_startproc
# %bb.0:
	pushq	%rbx
	.cfi_def_cfa_offset 16
	subq	$32, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -16
	movq	__hip_gpubin_handle(%rip), %rbx
	testq	%rbx, %rbx
	jne	.LBB140_2
# %bb.1:
	movl	$__hip_fatbin_wrapper, %edi
	callq	__hipRegisterFatBinary
	movq	%rax, %rbx
	movq	%rax, __hip_gpubin_handle(%rip)
.LBB140_2:
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movl	$_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii, %esi
	movl	$.L__unnamed_1, %edx
	movl	$.L__unnamed_1, %ecx
	movq	%rbx, %rdi
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movl	$_Z7add_oneIfiEvPT_T0_S2_S2_, %esi
	movl	$.L__unnamed_2, %edx
	movl	$.L__unnamed_2, %ecx
	movq	%rbx, %rdi
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movl	$_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_, %esi
	movl	$.L__unnamed_3, %edx
	movl	$.L__unnamed_3, %ecx
	movq	%rbx, %rdi
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction
	xorps	%xmm0, %xmm0
	movups	%xmm0, 16(%rsp)
	movups	%xmm0, (%rsp)
	movl	$_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_, %esi
	movl	$.L__unnamed_4, %edx
	movl	$.L__unnamed_4, %ecx
	movq	%rbx, %rdi
	movl	$-1, %r8d
	xorl	%r9d, %r9d
	callq	__hipRegisterFunction
	movl	$__hip_module_dtor, %edi
	addq	$32, %rsp
	.cfi_def_cfa_offset 16
	popq	%rbx
	.cfi_def_cfa_offset 8
	jmp	atexit                          # TAILCALL
.Lfunc_end140:
	.size	__hip_module_ctor, .Lfunc_end140-__hip_module_ctor
	.cfi_endproc
                                        # -- End function
	.p2align	4, 0x90                         # -- Begin function __hip_module_dtor
	.type	__hip_module_dtor,@function
__hip_module_dtor:                      # @__hip_module_dtor
	.cfi_startproc
# %bb.0:
	pushq	%rax
	.cfi_def_cfa_offset 16
	movq	__hip_gpubin_handle(%rip), %rdi
	testq	%rdi, %rdi
	je	.LBB141_2
# %bb.1:
	callq	__hipUnregisterFatBinary
	movq	$0, __hip_gpubin_handle(%rip)
.LBB141_2:
	popq	%rax
	.cfi_def_cfa_offset 8
	retq
.Lfunc_end141:
	.size	__hip_module_dtor, .Lfunc_end141-__hip_module_dtor
	.cfi_endproc
                                        # -- End function
	.type	_ZStL8__ioinit,@object          # @_ZStL8__ioinit
	.local	_ZStL8__ioinit
	.comm	_ZStL8__ioinit,1,1
	.hidden	__dso_handle
	.type	.L.str,@object                  # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"conv_add_trivial_kernel"
	.size	.L.str, 24

	.type	.L.str.1,@object                # @.str.1
.L.str.1:
	.asciz	"1.0"
	.size	.L.str.1, 4

	.type	.L.str.2,@object                # @.str.2
.L.str.2:
	.asciz	"in_channels"
	.size	.L.str.2, 12

	.type	.L.str.3,@object                # @.str.3
.L.str.3:
	.asciz	"number of channels"
	.size	.L.str.3, 19

	.type	.L.str.4,@object                # @.str.4
.L.str.4:
	.asciz	"in_height"
	.size	.L.str.4, 10

	.type	.L.str.5,@object                # @.str.5
.L.str.5:
	.asciz	"input height"
	.size	.L.str.5, 13

	.type	.L.str.6,@object                # @.str.6
.L.str.6:
	.asciz	"in_width"
	.size	.L.str.6, 9

	.type	.L.str.7,@object                # @.str.7
.L.str.7:
	.asciz	"input width"
	.size	.L.str.7, 12

	.type	.L.str.8,@object                # @.str.8
.L.str.8:
	.asciz	"kernel_height"
	.size	.L.str.8, 14

	.type	.L.str.9,@object                # @.str.9
.L.str.9:
	.asciz	"kernel height"
	.size	.L.str.9, 14

	.type	.L.str.10,@object               # @.str.10
.L.str.10:
	.asciz	"kernel_width"
	.size	.L.str.10, 13

	.type	.L.str.11,@object               # @.str.11
.L.str.11:
	.asciz	"kernel width"
	.size	.L.str.11, 13

	.type	.L.str.12,@object               # @.str.12
.L.str.12:
	.asciz	"out_channels"
	.size	.L.str.12, 13

	.type	.L.str.13,@object               # @.str.13
.L.str.13:
	.asciz	"out channels"
	.size	.L.str.13, 13

	.type	.L.str.14,@object               # @.str.14
.L.str.14:
	.asciz	"--wg-rev"
	.size	.L.str.14, 9

	.type	.L.str.15,@object               # @.str.15
.L.str.15:
	.asciz	"use workgroup reversal for add(B, C)"
	.size	.L.str.15, 37

	.type	.L.str.16,@object               # @.str.16
.L.str.16:
	.asciz	"A_dims: ["
	.size	.L.str.16, 10

	.type	.L.str.17,@object               # @.str.17
.L.str.17:
	.asciz	", "
	.size	.L.str.17, 3

	.type	.L.str.18,@object               # @.str.18
.L.str.18:
	.asciz	"]\n"
	.size	.L.str.18, 3

	.type	.L.str.19,@object               # @.str.19
.L.str.19:
	.asciz	"W_dims: ["
	.size	.L.str.19, 10

	.type	.L.str.20,@object               # @.str.20
.L.str.20:
	.asciz	"C_dims: ["
	.size	.L.str.20, 10

	.type	.L.str.21,@object               # @.str.21
.L.str.21:
	.asciz	"wg_reversal: "
	.size	.L.str.21, 14

	.type	.L.str.22,@object               # @.str.22
.L.str.22:
	.asciz	"\n"
	.size	.L.str.22, 2

	.type	.L.str.23,@object               # @.str.23
.L.str.23:
	.asciz	"Error: HIP reports "
	.size	.L.str.23, 20

	.type	_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,@object # @_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.section	.rodata._Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,"aG",@progbits,_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii,comdat
	.weak	_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.p2align	3, 0x0
_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii:
	.quad	_Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.size	_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii, 8

	.type	_Z7add_oneIfiEvPT_T0_S2_S2_,@object # @_Z7add_oneIfiEvPT_T0_S2_S2_
	.section	.rodata._Z7add_oneIfiEvPT_T0_S2_S2_,"aG",@progbits,_Z7add_oneIfiEvPT_T0_S2_S2_,comdat
	.weak	_Z7add_oneIfiEvPT_T0_S2_S2_
	.p2align	3, 0x0
_Z7add_oneIfiEvPT_T0_S2_S2_:
	.quad	_Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_
	.size	_Z7add_oneIfiEvPT_T0_S2_S2_, 8

	.type	_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,@object # @_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.section	.rodata._Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,"aG",@progbits,_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_,comdat
	.weak	_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.p2align	3, 0x0
_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_:
	.quad	_Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.size	_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_, 8

	.type	_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,@object # @_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.section	.rodata._Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,"aG",@progbits,_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_,comdat
	.weak	_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.p2align	3, 0x0
_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_:
	.quad	_Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.size	_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_, 8

	.type	.L.str.24,@object               # @.str.24
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.24:
	.asciz	"gpu: [ "
	.size	.L.str.24, 8

	.type	.L.str.27,@object               # @.str.27
.L.str.27:
	.asciz	"-h"
	.size	.L.str.27, 3

	.type	.L.str.28,@object               # @.str.28
.L.str.28:
	.asciz	"--help"
	.size	.L.str.28, 7

	.type	.L.str.29,@object               # @.str.29
.L.str.29:
	.asciz	"shows help message and exits"
	.size	.L.str.29, 29

	.type	.L.str.30,@object               # @.str.30
.L.str.30:
	.asciz	"-v"
	.size	.L.str.30, 3

	.type	.L.str.31,@object               # @.str.31
.L.str.31:
	.asciz	"--version"
	.size	.L.str.31, 10

	.type	.L.str.32,@object               # @.str.32
.L.str.32:
	.asciz	"prints version information and exits"
	.size	.L.str.32, 37

	.type	.L.str.33,@object               # @.str.33
.L.str.33:
	.asciz	"basic_string::_M_construct null not valid"
	.size	.L.str.33, 42

	.type	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.section	.rodata._ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.asciz	"NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"
	.size	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 53

	.type	_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,@object # @_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.section	.rodata._ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"aG",@progbits,_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,comdat
	.weak	_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.p2align	3, 0x0
_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.size	_ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE, 16

	.type	_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,@object # @_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.section	.rodata._ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,"aG",@progbits,_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,comdat
	.weak	_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E:
	.asciz	"N8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E"
	.size	_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E, 89

	.type	_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,@object # @_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.section	.rodata._ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,"aG",@progbits,_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E,comdat
	.weak	_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.p2align	3, 0x0
_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.size	_ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E, 16

	.type	_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE,@object # @_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE
	.section	.rodata._ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE,"aG",@progbits,_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE,comdat
	.weak	_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE
	.p2align	3, 0x0
_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE:
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_
	.size	_ZNSt8__detail9__variant12__gen_vtableILb1ENS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES4_IFvSD_EEEE13_M_reset_implEvEUlOT_E_JRSt7variantIJSF_SH_EEEE9_S_vtableE, 16

	.type	.L.str.35,@object               # @.str.35
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.35:
	.asciz	"basic_string_view::substr"
	.size	.L.str.35, 26

	.type	.L.str.36,@object               # @.str.36
.L.str.36:
	.asciz	"%s: __pos (which is %zu) > __size (which is %zu)"
	.size	.L.str.36, 49

	.type	.L.str.37,@object               # @.str.37
.L.str.37:
	.asciz	"vector::_M_realloc_insert"
	.size	.L.str.37, 26

	.type	_ZSt19piecewise_construct,@object # @_ZSt19piecewise_construct
	.section	.rodata._ZSt19piecewise_construct,"aG",@progbits,_ZSt19piecewise_construct,comdat
	.weak	_ZSt19piecewise_construct
_ZSt19piecewise_construct:
	.zero	1
	.size	_ZSt19piecewise_construct, 1

	.type	.L.str.39,@object               # @.str.39
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.39:
	.asciz	"%s: __pos (which is %zu) > this->size() (which is %zu)"
	.size	.L.str.39, 55

	.type	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,@object # @_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.section	.rodata._ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,"aG",@progbits,_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,comdat
	.weak	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_:
	.asciz	"ZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_"
	.size	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_, 122

	.type	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,@object # @_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.section	.rodata._ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,"aG",@progbits,_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_,comdat
	.weak	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.p2align	3, 0x0
_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.size	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_, 16

	.type	.L.str.40,@object               # @.str.40
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.40:
	.asciz	"Unexpected index"
	.size	.L.str.40, 17

	.type	_ZTSSt18bad_variant_access,@object # @_ZTSSt18bad_variant_access
	.section	.rodata._ZTSSt18bad_variant_access,"aG",@progbits,_ZTSSt18bad_variant_access,comdat
	.weak	_ZTSSt18bad_variant_access
_ZTSSt18bad_variant_access:
	.asciz	"St18bad_variant_access"
	.size	_ZTSSt18bad_variant_access, 23

	.type	_ZTISt18bad_variant_access,@object # @_ZTISt18bad_variant_access
	.section	.rodata._ZTISt18bad_variant_access,"aG",@progbits,_ZTISt18bad_variant_access,comdat
	.weak	_ZTISt18bad_variant_access
	.p2align	3, 0x0
_ZTISt18bad_variant_access:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt18bad_variant_access
	.quad	_ZTISt9exception
	.size	_ZTISt18bad_variant_access, 24

	.type	_ZTVSt18bad_variant_access,@object # @_ZTVSt18bad_variant_access
	.section	.rodata._ZTVSt18bad_variant_access,"aG",@progbits,_ZTVSt18bad_variant_access,comdat
	.weak	_ZTVSt18bad_variant_access
	.p2align	3, 0x0
_ZTVSt18bad_variant_access:
	.quad	0
	.quad	_ZTISt18bad_variant_access
	.quad	_ZNSt9exceptionD2Ev
	.quad	_ZNSt18bad_variant_accessD0Ev
	.quad	_ZNKSt18bad_variant_access4whatEv
	.size	_ZTVSt18bad_variant_access, 40

	.type	.L.str.41,@object               # @.str.41
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.41:
	.asciz	"true"
	.size	.L.str.41, 5

	.type	.L.str.42,@object               # @.str.42
.L.str.42:
	.asciz	"false"
	.size	.L.str.42, 6

	.type	.L.str.43,@object               # @.str.43
.L.str.43:
	.asciz	"%d"
	.size	.L.str.43, 3

	.type	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,@object # @_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.section	.rodata._ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,"aG",@progbits,_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,comdat
	.weak	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_:
	.asciz	"ZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_"
	.size	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_, 123

	.type	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,@object # @_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.section	.rodata._ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,"aG",@progbits,_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_,comdat
	.weak	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.p2align	3, 0x0
_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.size	_ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_, 16

	.type	.L.str.44,@object               # @.str.44
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.44:
	.asciz	"Argument '"
	.size	.L.str.44, 11

	.type	.L.str.45,@object               # @.str.45
.L.str.45:
	.asciz	"' not allowed with '"
	.size	.L.str.45, 21

	.type	.L.str.46,@object               # @.str.46
.L.str.46:
	.asciz	"'"
	.size	.L.str.46, 2

	.type	.L.str.47,@object               # @.str.47
.L.str.47:
	.asciz	"' "
	.size	.L.str.47, 3

	.type	.L.str.48,@object               # @.str.48
.L.str.48:
	.asciz	"' or "
	.size	.L.str.48, 6

	.type	.L.str.49,@object               # @.str.49
.L.str.49:
	.asciz	"One of the arguments "
	.size	.L.str.49, 22

	.type	.L.str.50,@object               # @.str.50
.L.str.50:
	.asciz	"is required"
	.size	.L.str.50, 12

	.type	.L.str.51,@object               # @.str.51
.L.str.51:
	.asciz	"Failed to parse '"
	.size	.L.str.51, 18

	.type	.L.str.52,@object               # @.str.52
.L.str.52:
	.asciz	"', did you mean '"
	.size	.L.str.52, 18

	.type	.L.str.53,@object               # @.str.53
.L.str.53:
	.asciz	"Zero positional arguments expected, did you mean "
	.size	.L.str.53, 50

	.type	.L.str.54,@object               # @.str.54
.L.str.54:
	.asciz	"Zero positional arguments expected"
	.size	.L.str.54, 35

	.type	.L.str.55,@object               # @.str.55
.L.str.55:
	.asciz	"Maximum number of positional arguments exceeded, failed to parse '"
	.size	.L.str.55, 67

	.type	.L.str.56,@object               # @.str.56
.L.str.56:
	.asciz	"Unknown argument: "
	.size	.L.str.56, 19

	.type	.L.str.57,@object               # @.str.57
.L.str.57:
	.asciz	"basic_string::substr"
	.size	.L.str.57, 21

	.type	.L.str.59,@object               # @.str.59
.L.str.59:
	.asciz	"cannot create std::vector larger than max_size()"
	.size	.L.str.59, 49

	.type	.L.str.60,@object               # @.str.60
.L.str.60:
	.asciz	"Duplicate argument"
	.size	.L.str.60, 19

	.type	.L.str.61,@object               # @.str.61
.L.str.61:
	.asciz	"Too few arguments"
	.size	.L.str.61, 18

	.type	.L.str.62,@object               # @.str.62
.L.str.62:
	.asciz	"Too few arguments for '"
	.size	.L.str.62, 24

	.type	.L.str.63,@object               # @.str.63
.L.str.63:
	.asciz	"'."
	.size	.L.str.63, 3

	.type	.L.str.64,@object               # @.str.64
.L.str.64:
	.asciz	"Invalid argument "
	.size	.L.str.64, 18

	.type	.L.str.65,@object               # @.str.65
.L.str.65:
	.asciz	" - allowed options: {"
	.size	.L.str.65, 22

	.type	.L.str.66,@object               # @.str.66
.L.str.66:
	.asciz	"}"
	.size	.L.str.66, 2

	.type	_ZTSSt19bad_optional_access,@object # @_ZTSSt19bad_optional_access
	.section	.rodata._ZTSSt19bad_optional_access,"aG",@progbits,_ZTSSt19bad_optional_access,comdat
	.weak	_ZTSSt19bad_optional_access
_ZTSSt19bad_optional_access:
	.asciz	"St19bad_optional_access"
	.size	_ZTSSt19bad_optional_access, 24

	.type	_ZTISt19bad_optional_access,@object # @_ZTISt19bad_optional_access
	.section	.rodata._ZTISt19bad_optional_access,"aG",@progbits,_ZTISt19bad_optional_access,comdat
	.weak	_ZTISt19bad_optional_access
	.p2align	3, 0x0
_ZTISt19bad_optional_access:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt19bad_optional_access
	.quad	_ZTISt9exception
	.size	_ZTISt19bad_optional_access, 24

	.type	_ZTVSt19bad_optional_access,@object # @_ZTVSt19bad_optional_access
	.section	.rodata._ZTVSt19bad_optional_access,"aG",@progbits,_ZTVSt19bad_optional_access,comdat
	.weak	_ZTVSt19bad_optional_access
	.p2align	3, 0x0
_ZTVSt19bad_optional_access:
	.quad	0
	.quad	_ZTISt19bad_optional_access
	.quad	_ZNSt9exceptionD2Ev
	.quad	_ZNSt19bad_optional_accessD0Ev
	.quad	_ZNKSt19bad_optional_access4whatEv
	.size	_ZTVSt19bad_optional_access, 40

	.type	.L.str.67,@object               # @.str.67
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.67:
	.asciz	"bad optional access"
	.size	.L.str.67, 20

	.type	.L.str.68,@object               # @.str.68
.L.str.68:
	.zero	1
	.size	.L.str.68, 1

	.type	.L.str.69,@object               # @.str.69
.L.str.69:
	.asciz	"basic_string::append"
	.size	.L.str.69, 21

	.type	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE,@object # @_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE
	.section	.rodata._ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE,"aG",@progbits,_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE,comdat
	.weak	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE
	.p2align	3, 0x0
_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE:
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_
	.size	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EEUlRKSI_E_JRSt7variantIJSt8functionIFSt3anyRKSC_EESQ_IFvST_EEEEEE9_S_vtableE, 16

	.type	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE,@object # @_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE
	.section	.rodata._ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE,"aG",@progbits,_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE,comdat
	.weak	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE
	.p2align	3, 0x0
_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE:
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_
	.quad	_ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_
	.size	_ZNSt8__detail9__variant12__gen_vtableILb1EvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISC_SaISC_EEEEEET_SI_SI_St17basic_string_viewIcSA_EE11ActionApplyJRSt7variantIJSt8functionIFSt3anyRKSC_EESO_IFvSR_EEEEEE9_S_vtableE, 16

	.type	.L.str.71,@object               # @.str.71
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.71:
	.asciz	"vector::_M_default_append"
	.size	.L.str.71, 26

	.type	.L.str.72,@object               # @.str.72
.L.str.72:
	.asciz	": required."
	.size	.L.str.72, 12

	.type	.L.str.73,@object               # @.str.73
.L.str.73:
	.asciz	": no value provided."
	.size	.L.str.73, 21

	.type	.L.str.74,@object               # @.str.74
.L.str.74:
	.asciz	": "
	.size	.L.str.74, 3

	.type	.L.str.75,@object               # @.str.75
.L.str.75:
	.asciz	" to "
	.size	.L.str.75, 5

	.type	.L.str.76,@object               # @.str.76
.L.str.76:
	.asciz	" or more"
	.size	.L.str.76, 9

	.type	.L.str.77,@object               # @.str.77
.L.str.77:
	.asciz	" argument(s) expected. "
	.size	.L.str.77, 24

	.type	.L.str.78,@object               # @.str.78
.L.str.78:
	.asciz	" provided."
	.size	.L.str.78, 11

	.type	.L.str.79,@object               # @.str.79
.L.str.79:
	.asciz	"Invalid default value "
	.size	.L.str.79, 23

	.type	.L.str.80,@object               # @.str.80
.L.str.80:
	.asciz	"VAR"
	.size	.L.str.80, 4

	.type	.L.str.81,@object               # @.str.81
.L.str.81:
	.asciz	" "
	.size	.L.str.81, 2

	.type	.L.str.82,@object               # @.str.82
.L.str.82:
	.asciz	"..."
	.size	.L.str.82, 4

	.type	.L.str.83,@object               # @.str.83
.L.str.83:
	.asciz	"\n\n"
	.size	.L.str.83, 3

	.type	.L.str.84,@object               # @.str.84
.L.str.84:
	.asciz	"Positional arguments:\n"
	.size	.L.str.84, 23

	.type	.L.str.85,@object               # @.str.85
.L.str.85:
	.asciz	"Optional arguments:\n"
	.size	.L.str.85, 21

	.type	.L.str.86,@object               # @.str.86
.L.str.86:
	.asciz	"Subcommands:\n"
	.size	.L.str.86, 14

	.type	.L.str.87,@object               # @.str.87
.L.str.87:
	.asciz	"Usage: "
	.size	.L.str.87, 8

	.type	.L.str.88,@object               # @.str.88
.L.str.88:
	.asciz	" {"
	.size	.L.str.88, 3

	.type	.L.str.89,@object               # @.str.89
.L.str.89:
	.asciz	","
	.size	.L.str.89, 2

	.type	.L.str.90,@object               # @.str.90
.L.str.90:
	.asciz	"["
	.size	.L.str.90, 2

	.type	.L.str.91,@object               # @.str.91
.L.str.91:
	.asciz	"]"
	.size	.L.str.91, 2

	.type	.L.str.92,@object               # @.str.92
.L.str.92:
	.asciz	"  "
	.size	.L.str.92, 3

	.type	.L.str.93,@object               # @.str.93
.L.str.93:
	.asciz	"[default: "
	.size	.L.str.93, 11

	.type	.L.str.94,@object               # @.str.94
.L.str.94:
	.asciz	"[required]"
	.size	.L.str.94, 11

	.type	.L.str.95,@object               # @.str.95
.L.str.95:
	.asciz	"[nargs: "
	.size	.L.str.95, 9

	.type	.L.str.96,@object               # @.str.96
.L.str.96:
	.asciz	"] "
	.size	.L.str.96, 3

	.type	.L.str.97,@object               # @.str.97
.L.str.97:
	.asciz	" or more] "
	.size	.L.str.97, 11

	.type	.L.str.98,@object               # @.str.98
.L.str.98:
	.asciz	"[nargs="
	.size	.L.str.98, 8

	.type	.L.str.99,@object               # @.str.99
.L.str.99:
	.asciz	".."
	.size	.L.str.99, 3

	.type	.L.str.100,@object              # @.str.100
.L.str.100:
	.asciz	"' as hexadecimal: "
	.size	.L.str.100, 19

	.type	.L.str.101,@object              # @.str.101
.L.str.101:
	.asciz	"' as binary: "
	.size	.L.str.101, 14

	.type	.L.str.103,@object              # @.str.103
.L.str.103:
	.asciz	"' as octal: "
	.size	.L.str.103, 13

	.type	.L.str.104,@object              # @.str.104
.L.str.104:
	.asciz	"' as decimal integer: "
	.size	.L.str.104, 23

	.type	.L.str.105,@object              # @.str.105
.L.str.105:
	.asciz	"0x"
	.size	.L.str.105, 3

	.type	.L.str.106,@object              # @.str.106
.L.str.106:
	.asciz	"0X"
	.size	.L.str.106, 3

	.type	.L.str.107,@object              # @.str.107
.L.str.107:
	.asciz	"pattern '"
	.size	.L.str.107, 10

	.type	.L.str.108,@object              # @.str.108
.L.str.108:
	.asciz	"' does not match to the end"
	.size	.L.str.108, 28

	.type	.L.str.109,@object              # @.str.109
.L.str.109:
	.asciz	"' not found"
	.size	.L.str.109, 12

	.type	.L.str.110,@object              # @.str.110
.L.str.110:
	.asciz	"' not representable"
	.size	.L.str.110, 20

	.type	.L.str.111,@object              # @.str.111
.L.str.111:
	.asciz	"0b"
	.size	.L.str.111, 3

	.type	.L.str.112,@object              # @.str.112
.L.str.112:
	.asciz	"0B"
	.size	.L.str.112, 3

	.type	_ZTSN8argparse7details12parse_numberIiLi0EEE,@object # @_ZTSN8argparse7details12parse_numberIiLi0EEE
	.section	.rodata._ZTSN8argparse7details12parse_numberIiLi0EEE,"aG",@progbits,_ZTSN8argparse7details12parse_numberIiLi0EEE,comdat
	.weak	_ZTSN8argparse7details12parse_numberIiLi0EEE
_ZTSN8argparse7details12parse_numberIiLi0EEE:
	.asciz	"N8argparse7details12parse_numberIiLi0EEE"
	.size	_ZTSN8argparse7details12parse_numberIiLi0EEE, 41

	.type	_ZTIN8argparse7details12parse_numberIiLi0EEE,@object # @_ZTIN8argparse7details12parse_numberIiLi0EEE
	.section	.rodata._ZTIN8argparse7details12parse_numberIiLi0EEE,"aG",@progbits,_ZTIN8argparse7details12parse_numberIiLi0EEE,comdat
	.weak	_ZTIN8argparse7details12parse_numberIiLi0EEE
	.p2align	3, 0x0
_ZTIN8argparse7details12parse_numberIiLi0EEE:
	.quad	_ZTVN10__cxxabiv117__class_type_infoE+16
	.quad	_ZTSN8argparse7details12parse_numberIiLi0EEE
	.size	_ZTIN8argparse7details12parse_numberIiLi0EEE, 16

	.type	.L.str.113,@object              # @.str.113
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.113:
	.asciz	"Nothing parsed, no arguments are available."
	.size	.L.str.113, 44

	.type	.L.str.114,@object              # @.str.114
.L.str.114:
	.asciz	"No such argument: "
	.size	.L.str.114, 19

	.type	.L.str.115,@object              # @.str.115
.L.str.115:
	.asciz	"No value provided for '"
	.size	.L.str.115, 24

	.type	_ZTSSt12bad_any_cast,@object    # @_ZTSSt12bad_any_cast
	.section	.rodata._ZTSSt12bad_any_cast,"aG",@progbits,_ZTSSt12bad_any_cast,comdat
	.weak	_ZTSSt12bad_any_cast
_ZTSSt12bad_any_cast:
	.asciz	"St12bad_any_cast"
	.size	_ZTSSt12bad_any_cast, 17

	.type	_ZTISt12bad_any_cast,@object    # @_ZTISt12bad_any_cast
	.section	.rodata._ZTISt12bad_any_cast,"aG",@progbits,_ZTISt12bad_any_cast,comdat
	.weak	_ZTISt12bad_any_cast
	.p2align	3, 0x0
_ZTISt12bad_any_cast:
	.quad	_ZTVN10__cxxabiv120__si_class_type_infoE+16
	.quad	_ZTSSt12bad_any_cast
	.quad	_ZTISt8bad_cast
	.size	_ZTISt12bad_any_cast, 24

	.type	_ZTVSt12bad_any_cast,@object    # @_ZTVSt12bad_any_cast
	.section	.rodata._ZTVSt12bad_any_cast,"aG",@progbits,_ZTVSt12bad_any_cast,comdat
	.weak	_ZTVSt12bad_any_cast
	.p2align	3, 0x0
_ZTVSt12bad_any_cast:
	.quad	0
	.quad	_ZTISt12bad_any_cast
	.quad	_ZNSt8bad_castD2Ev
	.quad	_ZNSt12bad_any_castD0Ev
	.quad	_ZNKSt12bad_any_cast4whatEv
	.size	_ZTVSt12bad_any_cast, 40

	.type	.L.str.116,@object              # @.str.116
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.116:
	.asciz	"bad any_cast"
	.size	.L.str.116, 13

	.type	.L__unnamed_1,@object           # @0
.L__unnamed_1:
	.asciz	"_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii"
	.size	.L__unnamed_1, 83

	.type	.L__unnamed_2,@object           # @1
.L__unnamed_2:
	.asciz	"_Z7add_oneIfiEvPT_T0_S2_S2_"
	.size	.L__unnamed_2, 28

	.type	.L__unnamed_3,@object           # @2
.L__unnamed_3:
	.asciz	"_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_"
	.size	.L__unnamed_3, 45

	.type	.L__unnamed_4,@object           # @3
.L__unnamed_4:
	.asciz	"_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_"
	.size	.L__unnamed_4, 45

	.type	.L__unnamed_5,@object           # @4
	.section	.hip_fatbin,"a",@progbits
	.p2align	12, 0x0
.L__unnamed_5:
	.asciz	"__CLANG_OFFLOAD_BUNDLE__\002\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\033\000\000\000\000\000\000\000host-x86_64-unknown-linux--\000\020\000\000\000\000\000\000\3603\000\000\000\000\000\000 \000\000\000\000\000\000\000hipv4-amdgcn-amd-amdhsa--gfxp0\000\000\000\000\000\0006\000\000\000@\0008\000\b\000@\000\016\000\f\000\006\000\000\000\004\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000@\000\000\000\000\000\000\000\300\001\000\000\000\000\000\000\300\001\000\000\000\000\000\000\b\000\000\000\000\000\000\000\001\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004!\000\000\000\000\000\000\004!\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\005\000\000\000\000\"\000\000\000\000\000\000\0002\000\000\000\000\000\000\0002\000\000\000\000\000\000H\t\000\000\000\000\000\000H\t\000\000\000\000\000\000\000\020\000\000\000\000\000\000\001\000\000\000\006\000\000\000H+\000\000\000\000\000\000HK\000\000\000\000\000\000HK\000\000\000\000\000\000p\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\020\000\000\000\000\000\000\002\000\000\000\006\000\000\000H+\000\000\000\000\000\000HK\000\000\000\000\000\000HK\000\000\000\000\000\000p\000\000\000\000\000\000\000p\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000R\345td\004\000\000\000H+\000\000\000\000\000\000HK\000\000\000\000\000\000HK\000\000\000\000\000\000p\000\000\000\000\000\000\000\270\004\000\000\000\000\000\000\001\000\000\000\000\000\000\000Q\345td\006\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\000\000\004\000\000\000\000\002\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\002\000\000\000\000\000\000\\\031\000\000\000\000\000\000\\\031\000\000\000\000\000\000\004\000\000\000\000\000\000\000\007\000\000\000F\031\000\000 \000\000\000AMDGPU\000\000\203\256amdhsa.kernels\224\336\000\022\245.args\334\000#\205\256.actual_access\251read_only\256.address_space\246global\247.offset\000\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\251read_only\256.address_space\246global\247.offset\b\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\252write_only\256.address_space\246global\247.offset\020\245.size\b\253.value_kind\255global_buffer\203\247.offset\030\245.size\024\253.value_kind\250by_value\203\247.offset,\245.size\024\253.value_kind\250by_value\203\247.offset@\245.size\024\253.value_kind\250by_value\203\247.offsetT\245.size\004\253.value_kind\250by_value\203\247.offsetX\245.size\004\253.value_kind\250by_value\203\247.offset\\\245.size\004\253.value_kind\250by_value\203\247.offset`\245.size\004\253.value_kind\250by_value\203\247.offsetd\245.size\004\253.value_kind\250by_value\203\247.offseth\245.size\004\253.value_kind\250by_value\203\247.offsetl\245.size\004\253.value_kind\250by_value\203\247.offsetp\245.size\004\253.value_kind\250by_value\203\247.offsett\245.size\004\253.value_kind\250by_value\203\247.offsetx\245.size\004\253.value_kind\250by_value\203\247.offset|\245.size\004\253.value_kind\250by_value\203\247.offset\314\200\245.size\004\253.value_kind\250by_value\203\247.offset\314\204\245.size\004\253.value_kind\250by_value\203\247.offset\314\210\245.size\004\253.value_kind\250by_value\203\247.offset\314\214\245.size\004\253.value_kind\250by_value\203\247.offset\314\220\245.size\004\253.value_kind\250by_value\203\247.offset\314\230\245.size\004\253.value_kind\264hidden_block_count_x\203\247.offset\314\234\245.size\004\253.value_kind\264hidden_block_count_y\203\247.offset\314\240\245.size\004\253.value_kind\264hidden_block_count_z\203\247.offset\314\244\245.size\002\253.value_kind\263hidden_group_size_x\203\247.offset\314\246\245.size\002\253.value_kind\263hidden_group_size_y\203\247.offset\314\250\245.size\002\253.value_kind\263hidden_group_size_z\203\247.offset\314\252\245.size\002\253.value_kind\262hidden_remainder_x\203\247.offset\314\254\245.size\002\253.value_kind\262hidden_remainder_y\203\247.offset\314\256\245.size\002\253.value_kind\262hidden_remainder_z\203\247.offset\314\300\245.size\b\253.value_kind\266hidden_global_offset_x\203\247.offset\314\310\245.size\b\253.value_kind\266hidden_global_offset_y\203\247.offset\314\320\245.size\b\253.value_kind\266hidden_global_offset_z\203\247.offset\314\330\245.size\002\253.value_kind\260hidden_grid_dims\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\315\001\230\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\004\000\245.name\331R_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii\273.private_segment_fixed_size\000\253.sgpr_count\026\261.sgpr_spill_count\000\247.symbol\331U_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\b\261.vgpr_spill_count\000\257.wavefront_size \271.workgroup_processor_mode\001\336\000\022\245.args\334\000\021\205\256.actual_access\252write_only\256.address_space\246global\247.offset\000\245.size\b\253.value_kind\255global_buffer\203\247.offset\b\245.size\004\253.value_kind\250by_value\203\247.offset\f\245.size\004\253.value_kind\250by_value\203\247.offset\020\245.size\004\253.value_kind\250by_value\203\247.offset\030\245.size\004\253.value_kind\264hidden_block_count_x\203\247.offset\034\245.size\004\253.value_kind\264hidden_block_count_y\203\247.offset \245.size\004\253.value_kind\264hidden_block_count_z\203\247.offset$\245.size\002\253.value_kind\263hidden_group_size_x\203\247.offset&\245.size\002\253.value_kind\263hidden_group_size_y\203\247.offset(\245.size\002\253.value_kind\263hidden_group_size_z\203\247.offset*\245.size\002\253.value_kind\262hidden_remainder_x\203\247.offset,\245.size\002\253.value_kind\262hidden_remainder_y\203\247.offset.\245.size\002\253.value_kind\262hidden_remainder_z\203\247.offset@\245.size\b\253.value_kind\266hidden_global_offset_x\203\247.offsetH\245.size\b\253.value_kind\266hidden_global_offset_y\203\247.offsetP\245.size\b\253.value_kind\266hidden_global_offset_z\203\247.offsetX\245.size\002\253.value_kind\260hidden_grid_dims\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\315\001\030\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\004\000\245.name\273_Z7add_oneIfiEvPT_T0_S2_S2_\273.private_segment_fixed_size\000\253.sgpr_count\f\261.sgpr_spill_count\000\247.symbol\276_Z7add_oneIfiEvPT_T0_S2_S2_.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\005\261.vgpr_spill_count\000\257.wavefront_size \271.workgroup_processor_mode\001\336\000\022\245.args\334\000\023\205\256.actual_access\251read_only\256.address_space\246global\247.offset\000\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\251read_only\256.address_space\246global\247.offset\b\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\252write_only\256.address_space\246global\247.offset\020\245.size\b\253.value_kind\255global_buffer\203\247.offset\030\245.size\004\253.value_kind\250by_value\203\247.offset\034\245.size\004\253.value_kind\250by_value\203\247.offset \245.size\004\253.value_kind\250by_value\203\247.offset(\245.size\004\253.value_kind\264hidden_block_count_x\203\247.offset,\245.size\004\253.value_kind\264hidden_block_count_y\203\247.offset0\245.size\004\253.value_kind\264hidden_block_count_z\203\247.offset4\245.size\002\253.value_kind\263hidden_group_size_x\203\247.offset6\245.size\002\253.value_kind\263hidden_group_size_y\203\247.offset8\245.size\002\253.value_kind\263hidden_group_size_z\203\247.offset:\245.size\002\253.value_kind\262hidden_remainder_x\203\247.offset<\245.size\002\253.value_kind\262hidden_remainder_y\203\247.offset>\245.size\002\253.value_kind\262hidden_remainder_z\203\247.offsetP\245.size\b\253.value_kind\266hidden_global_offset_x\203\247.offsetX\245.size\b\253.value_kind\266hidden_global_offset_y\203\247.offset`\245.size\b\253.value_kind\266hidden_global_offset_z\203\247.offseth\245.size\002\253.value_kind\260hidden_grid_dims\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\315\001(\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\004\000\245.name\331,_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_\273.private_segment_fixed_size\000\253.sgpr_count\023\261.sgpr_spill_count\000\247.symbol\331/_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\007\261.vgpr_spill_count\000\257.wavefront_size \271.workgroup_processor_mode\001\336\000\022\245.args\334\000\023\205\256.actual_access\251read_only\256.address_space\246global\247.offset\000\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\251read_only\256.address_space\246global\247.offset\b\245.size\b\253.value_kind\255global_buffer\205\256.actual_access\252write_only\256.address_space\246global\247.offset\020\245.size\b\253.value_kind\255global_buffer\203\247.offset\030\245.size\004\253.value_kind\250by_value\203\247.offset\034\245.size\004\253.value_kind\250by_value\203\247.offset \245.size\004\253.value_kind\250by_value\203\247.offset(\245.size\004\253.value_kind\264hidden_block_count_x\203\247.offset,\245.size\004\253.value_kind\264hidden_block_count_y\203\247.offset0\245.size\004\253.value_kind\264hidden_block_count_z\203\247.offset4\245.size\002\253.value_kind\263hidden_group_size_x\203\247.offset6\245.size\002\253.value_kind\263hidden_group_size_y\203\247.offset8\245.size\002\253.value_kind\263hidden_group_size_z\203\247.offset:\245.size\002\253.value_kind\262hidden_remainder_x\203\247.offset<\245.size\002\253.value_kind\262hidden_remainder_y\203\247.offset>\245.size\002\253.value_kind\262hidden_remainder_z\203\247.offsetP\245.size\b\253.value_kind\266hidden_global_offset_x\203\247.offsetX\245.size\b\253.value_kind\266hidden_global_offset_y\203\247.offset`\245.size\b\253.value_kind\266hidden_global_offset_z\203\247.offseth\245.size\002\253.value_kind\260hidden_grid_dims\271.group_segment_fixed_size\000\266.kernarg_segment_align\b\265.kernarg_segment_size\315\001(\251.language\250OpenCL C\261.language_version\222\002\000\270.max_flat_workgroup_size\315\004\000\245.name\331,_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_\273.private_segment_fixed_size\000\253.sgpr_count\023\261.sgpr_spill_count\000\247.symbol\331/_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\270.uniform_work_group_size\001\263.uses_dynamic_stack\302\253.vgpr_count\007\261.vgpr_spill_count\000\257.wavefront_size \271.workgroup_processor_mode\001\255amdhsa.target\272amdgcn-amd-amdhsa--gfx1030\256amdhsa.version\222\001\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\252\000\000\000\022\003\007\000\0007\000\000\000\000\000\000\324\000\000\000\000\000\000\000\306\000\000\000\021\003\006\000@ \000\000\000\000\000\000@\000\000\000\000\000\000\000\345\000\000\000\022\003\007\000\0008\000\000\000\000\000\000\b\001\000\000\000\000\000\000B\001\000\000\022\003\007\000\000:\000\000\000\000\000\000H\001\000\000\000\000\000\000on\000\000H\000@\001\000\000\000\007\000\000\000\b\000\000\000\200\n\363\267\\\314\325\234t5\201\340\264L\372\363r\336\312S}[\344\007\321\2021\272T\267\025\350\022\305}\320\312\227QNP\351\343\221\353\271\366\373\r\000\000\000\r\000\000\000\f\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\000\000\000\000\t\000\000\000\007\000\000\000\004\000\000\000\013\000\000\000\n\000\000\000\000\000\000\000\003\000\000\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\006\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\000_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii\000_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii.kd\000_Z7add_oneIfiEvPT_T0_S2_S2_\000_Z7add_oneIfiEvPT_T0_S2_S2_.kd\000_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_\000_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\000_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_\000_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\000_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE\000_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE\000_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE\000_ZN17__HIP_CoordinatesI13__HIP_GridDimE1xE\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\230\001\000\000\000\000\000\000\000\023\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257`\214\000\000\000\t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030\001\000\000\000\000\000\000\300\026\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257`\214\000\000\000\t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\001\000\000\000\000\000\000\200\027\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257`\214\000\000\000\t\004\000\000\000\000\000\000\000\000\000\000\000\000\000\000(\001\000\000\000\000\000\000@\031\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\257`\214\000\000\000\th\000\000\372\006\237\t\221~\003\221\276\006\t\f\201\177\300\214\277\003\237\013\221\003\013\007\201\007\013\007\211\007\f\002~\200\007\212\201\001W\002~\377\002\002\020\376\377\177O\001\017\002~\001\005\020~\n\b\n\223\b\n\215\232\f\t\n\211\b\r\b\201\n\b\210\232\b\007\f\223\b\201\r\201\n\f\214\201\f\007\216\201\f\007\t\277\r\b\b\205\016\f\f\205\b\201\r\201\f\007\t\277\003\002\007\223\r\b\020\205\002\237\b\221\007\237\f\221\002\b\002\201\007\f\007\201\002\b\r\211\007\f\002\211\r\f\002~\002\f\004~\001\000\007\223\200\003\210\276\001W\002~\002W\004~\377\002\002\020\376\377\177O\377\004\004\020\376\377\177O\001\017\002~\002\017\004~\001\005\036~\002\005\034~~\000\224\324\007\000\002\000\213\000\210\277\t\013\013\211\200\r\221\201\020\013\020\211\021\017\021\223\020\013\213\201\017\021\221\232\013\237\020\221\017\021\017\201\013\020\023\201\200\002\222\201\023\020\023\211\022\016\022\223\023\017\217\232\016\022\221\232\017\r\017\223\013\003\013\223\023\017\217\201\016\021\016\201\006\013\221\201\017\r\206\201\017\r\t\277\n\016\213\232\006\017\006\205\001\000\000\233\006\r\216\201\006\r\t\277\013\002\r\223\016\006\006\205\202\003\000\364\220\000\000\372\006\020\006\211\n\r\212\201\t\f\t\211\006\020\206\201\013\201\f\201\n\002\215\201\n\002\t\277\f\013\013\205\r\n\n\205\013\201\f\201\n\002\t\277\f\013\002\205\002\t\002\211\002\t\202\201\001\000\241\277B\002\000\364\244\000\000\372\202\002\004\364\020\000\000\372\177\300\214\277\016\003\016\223\002\003\004\233\002\003\002\223\021\237\003\221\002\021\002\200\006\016\005\233\006\016\006\223\004\003\004\202\001\237\003\221\002\006\002\200\004\005\004\202\007\002\205\232\007\004\004\223\000\002\000\223\005\004\004\201\004\000\005\201\007\002\004\223\001\003\202\276\004\202\204\217\n\004\004\200\013\005\005\202\001\003\000\201\t\377\t\207\377\377\000\000\000\003\006\211\200\001\201\201\006\f\002~\200\006\200\201\001W\002~\377\002\002\020\376\377\177O\001\017\004~\001\000i\325\000\004\002\000\003\000j\325\002\003\002\000\021\n\002~\002\007\004J\001\000\240\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\237\000\0060\000\007\bJ\004\007\b:\003\006\006:\005\000j\325\004\005\002\000\006\000i\325\005\r\000\000\201\n\016J\004\r\bL\006\b\fN\006\b\206}\005\017\n\002\004\r\b\002\201\n\fJ\006\b\206}\005\r\b\002\004\007\b:\004\007\nL\003}v\325\001\n\002\004\t\000\000J\007\000\006}\237\006\b0j\b\b\210\003}w\325\005\005\f\004\003\000\377\326\202\006\002\000\003\000\017\327\004\006\002\000\004\000(\325\005\b\002\000\000\200p\334\003\001}\000~\b~b\364\b\000\000\372\177\300\214\277\001\000\003\223~\003\200\276~\000\224\324\003\000\002\000,\000\210\277\001\000\241\277\002\002\004\364\000\000\000\372\302\001\000\364$\000\000\372\003\006\000\223\006\f\004~\000\237\001\221\200\003\206\276\000\202\204\217\177\300\214\277\b\004\001\200\t\005\004\202\007\377\005\207\377\377\000\000\016\000\202\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277~\007~\210\005\000\000J\003\000\006}j\006\006\210~\006~\212\016\000\210\277\000\000\002J~\003\207\276~\000\224\324\002\002\002\000\365\377\210\277\237\000\0020\003\000\377\326\202\000\002\000\003j\017\327\001\006\002\000\004\b\bP\000\200p\334\003\002}\000\354\377\202\277\000\000\201\277\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\002\000\b\364\030\000\000\372\177\300\214\277\001\000\003\223~\003\200\276~\000\224\324\003\000\002\0008\000\210\277\002\000\241\277\002\002\b\364\000\000\000\372\002\003\004\364\020\000\000\372\002\004\000\3644\000\000\372\003\006\000\223\000\237\001\221\000\202\216\217\177\300\214\277\b\016\001\200\t\017\004\202\n\016\005\200\013\017\006\202\f\016\007\200\r\017\b\202\020\377\t\207\377\377\000\000\200\003\212\276\001\000\240\277\b\000\202\277\000\000\200\277\000\000\200\277~\013~\210\t\000\000J\003\000\006}j\n\n\210~\n~\212\032\000\210\277\000\000\002J~\003\213\276~\000\224\324\002\002\002\000\365\377\210\277\237\000\0020\001\000\377\326\202\000\002\000\003j\017\327\001\002\002\000\004\004\bP\005j\017\327\005\002\002\000\006\004\fP\001j\017\327\007\002\002\000\000\2000\334\003\000}\003\000\2000\334\005\000}\004\b\004\004Pp?\214\277\003\t\006\006\000\200p\334\001\003}b\364\030\000\000\372\177\300\214\277\001\000\003\223~\003\200\276~\000\224\324\003\000\002\000H\000\210\277\003\000\241\277\002\000\000\364(\000\000\372\002\002\b\364\000\000\000\372\002\003\004\364\020\000\000\372\002\004\000\3644\000\000\372\006\007\201\276\177\300\214\277\000\001\000\201\000\003\000\223\000\237\001\221\000\202\216\217\b\016\001\200\t\017\004\202\n\016\005\200\013\017\006\202\f\016\007\200\r\017\b\202\020\377\t\207\377\377\000\000\200\003\212\276\001\000\240\277\024\000\202\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277\000\000\200\277~\013~\210\t\000\000J\003\000\006}j\n\n\210~\n~\212\032\000\210\277\000\000\002J~\003\213\276~\000\224\324\002\002\002\000\365\377\210\277\237\000\0020\001\000\377\326\202\000\002\000\003j\017\327\001\002\002\000\004\004\bP\005j\017\327\005\002\002\000\006\004\fP\001j\017\327\007\002\002\000\000\2000\334\003\000}\003\000\2000\334\005\000}\004\b\004\004Pp?\214\277\003\t\006\006\000\200p\334\001\003}\000\340\377\202\277\002\000\240\277\000\000\201\277\006\000\000\000\000\000\000\000`\033\000\000\000\000\000\000\013\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000t\035\000\000\000\000\000\000\n\000\000\000\000\000\000\000O\002\000\000\000\000\000\000\365\376\377o\000\000\000\000\230\034\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\035\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000Linker: AMD LLD 17.0.0\000\000AMD clang version 17.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-6.0.2 24012 af27734ed982b52a9f1be0f035ac91726fc697e4)\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000O\002\000\000\000\002\b\000HK\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\022\003\007\000\0003\000\000\000\000\000\000\034\003\000\000\000\000\000\000T\000\000\000\021\003\006\000\000 \000\000\000\000\000\000@\000\000\000\000\000\000\000\252\000\000\000\022\003\007\000\0007\000\000\000\000\000\000\324\000\000\000\000\000\000\000\306\000\000\000\021\003\006\000@ \000\000\000\000\000\000@\000\000\000\000\000\000\000\345\000\000\000\022\003\007\000\0008\000\000\000\000\000\000\b\001\000\000\000\000\000\000\022\001\000\000\021\003\006\000\200 \000\000\000\000\000\000@\000\000\000\000\000\000\000B\001\000\000\022\003\007\000\000:\000\000\000\000\000\000H\001\000\000\000\000\000\000o\001\000\000\021\003\006\000\300 \000\000\000\000\000\000@\000\000\000\000\000\000\000\237\001\000\000!\003\006\000\000!\000\000\000\000\000\000\001\000\000\000\000\000\000\000\313\001\000\000!\003\006\000\001!\000\000\000\000\000\000\001\000\000\000\000\000\000\000\370\001\000\000!\003\006\000\002!\000\000\000\000\000\000\001\000\000\000\000\000\000\000$\002\000\000!\003\006\000\003!\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000.note\000.dynsym\000.gnu.hash\000.hash\000.dynstr\000.rodata\000.text\000.dynamic\000.AMDGPU.csdata\000.comment\000.symtab\000.shstrtab\000.strtab\000\000_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii\000_Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii.kd\000_Z7add_oneIfiEvPT_T0_S2_S2_\000_Z7add_oneIfiEvPT_T0_S2_S2_.kd\000_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_\000_Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\000_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_\000_Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_.kd\000_ZN17__HIP_CoordinatesI14__HIP_BlockIdxE1xE\000_ZN17__HIP_CoordinatesI15__HIP_ThreadIdxE1xE\000_ZN17__HIP_CoordinatesI14__HIP_BlockDimE1xE\000_ZN17__HIP_CoordinatesI13__HIP_GridDimE1x`\033\000\000\000\000\000\000`\033\000\000\000\000\000\0008\001\000\000\000\000\000\000\005\000\000\000\001\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000\017\000\000\000\366\377\377o\002\000\000\000\000\000\000\000\230\034\000\000\000\000\000\000\230\034\000\000\000\000\000\000l\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\005\000\000\000\002\000\000\000\000\000\000\000\004\035\000\000\000\000\000\000\004\035\000\000\000\000\000\000p\000\000\000\000\000\000\000\002\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\004\000\000\000\000\000\000\000\037\000\000\000\003\000\000\000\002\000\000\000\000\000\000\000t\035\000\000\000\000\000\000tt\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\0005\000\000\000\006\000\000\000\003\000\000\000\000\000\000\000HK\000\000\000\000\000\000H+\000\000\000\000\000\000p\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\b\000\000\000\000\000\000\000\020\000\000\000\000\000\000\000>\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270+\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000M\000\000\000\001\000\000\0000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\270+\000\000\000\000\000\000\236\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000V\000\000\000\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000X,\000\000\000\000\000\000P\001\000\000\000\000\000\000\r\000\000\000\002\000\000\000\b\000\000\000\000\000\000\000\030\000\000\000\000\000\000\000^\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\250-\000\000\000\000\000\000p\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000h\000\000\000\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\030.\000\000\000\000\000\000X\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
	.size	.L__unnamed_5, 17392

	.type	__hip_fatbin_wrapper,@object    # @__hip_fatbin_wrapper
	.section	.hipFatBinSegment,"a",@progbits
	.p2align	3, 0x0
__hip_fatbin_wrapper:
	.long	1212764230                      # 0x48495046
	.long	1                               # 0x1
	.quad	.L__unnamed_5
	.quad	0
	.size	__hip_fatbin_wrapper, 24

	.type	__hip_gpubin_handle,@object     # @__hip_gpubin_handle
	.local	__hip_gpubin_handle
	.comm	__hip_gpubin_handle,8,8
	.section	.init_array,"aw",@init_array
	.p2align	3, 0x90
	.quad	_GLOBAL__sub_I_conv_add_trivial_kernel.cpp
	.quad	__hip_module_ctor
	.type	.Lswitch.table._ZNSt8__detail25__from_chars_alpha_to_numEc,@object # @switch.table._ZNSt8__detail25__from_chars_alpha_to_numEc
	.section	.rodata,"a",@progbits
.Lswitch.table._ZNSt8__detail25__from_chars_alpha_to_numEc:
	.ascii	"\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !\"#\377\377\377\377\377\377\n\013\f\r\016\017\020\021\022\023\024\025\026\027\030\031\032\033\034\035\036\037 !\"#"
	.size	.Lswitch.table._ZNSt8__detail25__from_chars_alpha_to_numEc, 58

	.ident	"AMD clang version 17.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-6.0.2 24012 af27734ed982b52a9f1be0f035ac91726fc697e4)"
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym __gxx_personality_v0
	.addrsig_sym _Z34__device_stub__naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.addrsig_sym _Z22__device_stub__add_oneIfiEvPT_T0_S2_S2_
	.addrsig_sym _Z25__device_stub__vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.addrsig_sym _Z25__device_stub__vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.addrsig_sym _ZN8argparse8Argument11is_optionalESt17basic_string_viewIcSt11char_traitsIcEES4_
	.addrsig_sym _ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse8Argument8m_actionMUlS8_E_EE9_M_invokeERKSt9_Any_dataS8_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_EE10_M_managerERSt9_Any_dataRKSE_St18_Manager_operation
	.addrsig_sym _ZNSt3any17_Manager_externalINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SQ_
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFNS0_16__variant_cookieEOZNS0_16_Variant_storageILb0EJSt8functionIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES5_IFvSE_EEEE13_M_reset_implEvEUlOT_E_RSt7variantIJSG_SI_EEEJEEESt5tupleIJSQ_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SQ_
	.addrsig_sym _ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E_E9_M_invokeERKSt9_Any_dataS7_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.addrsig_sym vsnprintf
	.addrsig_sym _ZNSt3any17_Manager_internalIbE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.addrsig_sym _ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEZN8argparse14ArgumentParserC1ES5_S5_NS9_17default_argumentsEbRSoEUlRKT_E0_E9_M_invokeERKSt9_Any_dataS7_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_NS1_17default_argumentsEbRSoEUlRKT_E0_E10_M_managerERSt9_Any_dataRKSG_St18_Manager_operation
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESP_S10_
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EEUlRKSJ_E_RSt7variantIJSt8functionIFSt3anyRKSD_EESR_IFvSU_EEEEEJEEESt5tupleIJS10_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESP_S10_
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm0EEEE14__visit_invokeESN_SY_
	.addrsig_sym _ZNSt8__detail9__variant17__gen_vtable_implILb1ENS0_12_Multi_arrayIPFvOZN8argparse8Argument7consumeIN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorISD_SaISD_EEEEEET_SJ_SJ_St17basic_string_viewIcSB_EE11ActionApplyRSt7variantIJSt8functionIFSt3anyRKSD_EESP_IFvSS_EEEEEJEEESt5tupleIJSY_EESt16integer_sequenceImJLm1EEEE14__visit_invokeESN_SY_
	.addrsig_sym _ZNSt17_Function_handlerIFSt3anyRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN8argparse7details12parse_numberIiLi0EEEE9_M_invokeERKSt9_Any_dataS8_
	.addrsig_sym _ZNSt14_Function_base13_Base_managerIN8argparse7details12parse_numberIiLi0EEEE10_M_managerERSt9_Any_dataRKS6_St18_Manager_operation
	.addrsig_sym _ZNSt3any17_Manager_internalIiE9_S_manageENS_3_OpEPKS_PNS_4_ArgE
	.addrsig_sym _GLOBAL__sub_I_conv_add_trivial_kernel.cpp
	.addrsig_sym __hip_module_ctor
	.addrsig_sym __hip_module_dtor
	.addrsig_sym _Unwind_Resume
	.addrsig_sym _ZStL8__ioinit
	.addrsig_sym __dso_handle
	.addrsig_sym _ZSt4cout
	.addrsig_sym _ZTISt9exception
	.addrsig_sym _ZSt4cerr
	.addrsig_sym _Z19naive_conv_fwd_nchwILb1EfffEvPKT0_S2_PT2_St5arrayIiLm5EES6_S6_iiiiiiiiiiiiiiii
	.addrsig_sym _Z7add_oneIfiEvPT_T0_S2_S2_
	.addrsig_sym _Z10vector_addILb0EfiEvPKT0_S2_PS0_T1_S4_S4_
	.addrsig_sym _Z10vector_addILb1EfiEvPKT0_S2_PS0_T1_S4_S4_
	.addrsig_sym _ZTVN10__cxxabiv117__class_type_infoE
	.addrsig_sym _ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.addrsig_sym _ZTINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
	.addrsig_sym _ZTSN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.addrsig_sym _ZTIN8argparse8Argument8m_actionMUlRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE_E
	.addrsig_sym _ZTISt11logic_error
	.addrsig_sym _ZSt19piecewise_construct
	.addrsig_sym _ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.addrsig_sym _ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E_
	.addrsig_sym _ZTVN10__cxxabiv120__si_class_type_infoE
	.addrsig_sym _ZTSSt18bad_variant_access
	.addrsig_sym _ZTISt18bad_variant_access
	.addrsig_sym _ZTIb
	.addrsig_sym _ZTSZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.addrsig_sym _ZTIZN8argparse14ArgumentParserC1ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_NS_17default_argumentsEbRSoEUlRKT_E0_
	.addrsig_sym _ZTISt13runtime_error
	.addrsig_sym _ZTSSt19bad_optional_access
	.addrsig_sym _ZTISt19bad_optional_access
	.addrsig_sym _ZTISt16invalid_argument
	.addrsig_sym _ZTISt11range_error
	.addrsig_sym _ZTIi
	.addrsig_sym _ZTSN8argparse7details12parse_numberIiLi0EEE
	.addrsig_sym _ZTIN8argparse7details12parse_numberIiLi0EEE
	.addrsig_sym _ZTSSt12bad_any_cast
	.addrsig_sym _ZTISt8bad_cast
	.addrsig_sym _ZTISt12bad_any_cast
	.addrsig_sym .L__unnamed_5
	.addrsig_sym __hip_fatbin_wrapper
